{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"../services/auth.service\";\nimport * as i4 from \"../services/firestore.service\";\nimport * as i5 from \"@angular/router\";\nexport class RdoctorPage {\n  constructor(fb, alertController, auth, store, router) {\n    this.fb = fb;\n    this.alertController = alertController;\n    this.auth = auth;\n    this.store = store;\n    this.router = router;\n    this.newdoctor = {\n      uid: \"\",\n      nombre: \"\",\n      apellido: \"\",\n      cedula: \"\",\n      especialidad: \"\",\n      correo: \"\",\n      contraseña: \"\",\n      rol: \"Doctor\"\n    };\n    this.formularioregistrod = this.fb.group({\n      'nombre': new FormControl(\"\", Validators.required),\n      'apellido': new FormControl(\"\", Validators.required),\n      'cedula': new FormControl(\"\", Validators.required),\n      'especialidad': new FormControl(\"\", Validators.required),\n      'correo': new FormControl(\"\", Validators.required),\n      'contraseña': new FormControl(\"\", Validators.required)\n    });\n  }\n  registrarse() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const f = this.formularioregistrod.value;\n      if (this.formularioregistrod.invalid) {\n        const alert = yield this.alertController.create({\n          header: 'Datos incompletos',\n          message: 'Debe de ingresar todos los campos o asegurarse que su contraseña tenga minimo 6 caracteres',\n          buttons: ['Aceptar']\n        });\n        yield alert.present();\n        return;\n      }\n      // if (f.contraseña < 6) {\n      //   const alert3 = await this.alertController.create({\n      //     header: 'Contraseña muy corta',\n      //     message: 'La contraseña debe de tener minimo 6 caracteres',\n      //     buttons: ['Aceptar'],\n      //   });\n      //   await alert3.present() ;\n      //   return;\n      // }\n      else {\n        this.newdoctor.nombre = f.nombre, this.newdoctor.apellido = f.apellido, this.newdoctor.cedula = f.cedula, this.newdoctor.especialidad = f.especialidad, this.newdoctor.correo = f.correo, this.newdoctor.contraseña = f.contraseña, this.newdoctor.rol = \"Doctor\";\n        const res = yield this.auth.registrar(this.newdoctor.correo, this.newdoctor.contraseña).catch(res => {\n          console.log('error');\n        });\n        if (res) {\n          console.log(\"Usuario creado\");\n          const path = 'Doctores';\n          const Id = res.user.uid;\n          this.newdoctor.uid = Id;\n          this.newdoctor.contraseña = \"\";\n          yield this.store.createDoc(this.newdoctor, path, Id);\n          const alert2 = yield this.alertController.create({\n            header: 'Usuario creado',\n            buttons: ['INICIO']\n          });\n          yield alert2.present();\n          this.router.navigate(['../login']);\n        }\n      }\n    });\n  }\n  ngOnInit() {}\n}\nRdoctorPage.ɵfac = function RdoctorPage_Factory(t) {\n  return new (t || RdoctorPage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AlertController), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.FirestoreService), i0.ɵɵdirectiveInject(i5.Router));\n};\nRdoctorPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RdoctorPage,\n  selectors: [[\"app-rdoctor\"]],\n  decls: 50,\n  vars: 1,\n  consts: [[\"color\", \"primary\"], [\"fill\", \"clear\", \"slot\", \"start\"], [\"color\", \"light\"], [3, \"formGroup\", \"ngSubmit\"], [\"position\", \"floating\"], [\"color\", \"danger\"], [\"required\", \"\", \"formControlName\", \"nombre\", \"type\", \"text\"], [\"required\", \"\", \"formControlName\", \"apellido\", \"type\", \"text\"], [\"required\", \"\", \"formControlName\", \"cedula\", \"type\", \"text\"], [\"required\", \"\", \"formControlName\", \"especialidad\", \"type\", \"text\"], [\"required\", \"\", \"formControlName\", \"correo\", \"type\", \"text\"], [\"required\", \"\", \"formControlName\", \"contrase\\u00F1a\", \"type\", \"password\", \"minlength\", \"6\"], [\"block\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n  template: function RdoctorPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0);\n      i0.ɵɵelement(2, \"ion-title\");\n      i0.ɵɵelementStart(3, \"ion-button\", 1);\n      i0.ɵɵelement(4, \"ion-back-button\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"ion-content\")(6, \"ion-card\")(7, \"ion-card-header\")(8, \"ion-card-title\");\n      i0.ɵɵtext(9, \"Registro\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"ion-card-content\")(11, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function RdoctorPage_Template_form_ngSubmit_11_listener() {\n        return ctx.registrarse();\n      });\n      i0.ɵɵelementStart(12, \"ion-item\")(13, \"ion-label\", 4);\n      i0.ɵɵtext(14, \"Nombre \");\n      i0.ɵɵelementStart(15, \"ion-text\", 5);\n      i0.ɵɵtext(16, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(17, \"ion-input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"ion-item\")(19, \"ion-label\", 4);\n      i0.ɵɵtext(20, \"Apellido \");\n      i0.ɵɵelementStart(21, \"ion-text\", 5);\n      i0.ɵɵtext(22, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(23, \"ion-input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(24, \"ion-item\")(25, \"ion-label\", 4);\n      i0.ɵɵtext(26, \"C\\u00E9dula\");\n      i0.ɵɵelementStart(27, \"ion-text\", 5);\n      i0.ɵɵtext(28, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(29, \"ion-input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(30, \"ion-item\")(31, \"ion-label\", 4);\n      i0.ɵɵtext(32, \"Especialidad\");\n      i0.ɵɵelementStart(33, \"ion-text\", 5);\n      i0.ɵɵtext(34, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(35, \"ion-input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"ion-item\")(37, \"ion-label\", 4);\n      i0.ɵɵtext(38, \"Correo electronico \");\n      i0.ɵɵelementStart(39, \"ion-text\", 5);\n      i0.ɵɵtext(40, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(41, \"ion-input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(42, \"ion-item\")(43, \"ion-label\", 4);\n      i0.ɵɵtext(44, \"Contrase\\u00F1a \");\n      i0.ɵɵelementStart(45, \"ion-text\", 5);\n      i0.ɵɵtext(46, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(47, \"ion-input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(48, \"ion-button\", 12);\n      i0.ɵɵtext(49, \" Login \");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"formGroup\", ctx.formularioregistrod);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MinLengthValidator, i1.FormGroupDirective, i1.FormControlName, i2.IonBackButton, i2.IonButton, i2.IonCard, i2.IonCardContent, i2.IonCardHeader, i2.IonCardTitle, i2.IonContent, i2.IonHeader, i2.IonInput, i2.IonItem, i2.IonLabel, i2.IonText, i2.IonTitle, i2.IonToolbar, i2.TextValueAccessor, i2.IonBackButtonDelegate],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","RdoctorPage","constructor","fb","alertController","auth","store","router","uid","nombre","apellido","cedula","especialidad","correo","contraseña","rol","formularioregistrod","group","required","registrarse","f","value","invalid","alert","create","header","message","buttons","present","newdoctor","res","registrar","catch","console","log","path","Id","user","createDoc","alert2","navigate","ngOnInit","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\erick\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\rdoctor\\rdoctor.page.ts","C:\\Users\\erick\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\rdoctor\\rdoctor.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  FormBuilder,\r\n} from '@angular/forms';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { FirestoreService } from '../services/firestore.service';\r\nimport { Router } from '@angular/router';\r\nimport { doctor, paciente } from '../models/interface';\r\n\r\n@Component({\r\n  selector: 'app-rdoctor',\r\n  templateUrl: './rdoctor.page.html',\r\n  styleUrls: ['./rdoctor.page.scss'],\r\n})\r\nexport class RdoctorPage implements OnInit {\r\n\r\n  formularioregistrod: FormGroup;\r\n\r\n  newdoctor : doctor = {\r\n    uid: \"\",\r\n    nombre: \"\",\r\n    apellido: \"\",\r\n    cedula: \"\",\r\n    especialidad: \"\",\r\n    correo: \"\",\r\n    contraseña: \"\",\r\n    rol: \"Doctor\",\r\n\r\n  }\r\n\r\n  constructor(public fb: FormBuilder, public alertController: AlertController,\r\n     private auth: AuthService, private store: FirestoreService, private router: Router ) {\r\n    \r\n    \r\n    this.formularioregistrod = this.fb.group({\r\n      'nombre': new FormControl(\"\",Validators.required),\r\n      'apellido': new FormControl(\"\",Validators.required),\r\n      'cedula': new FormControl(\"\",Validators.required),\r\n      'especialidad': new FormControl(\"\",Validators.required),\r\n      'correo': new FormControl(\"\",Validators.required),\r\n      'contraseña': new FormControl(\"\",Validators.required),\r\n    })\r\n   }\r\n\r\n  async registrarse(){\r\n\r\n\r\n    const f = this.formularioregistrod.value\r\n\r\n    if (this.formularioregistrod.invalid) {\r\n\r\n      const alert = await this.alertController.create({\r\n        header: 'Datos incompletos',\r\n        message: 'Debe de ingresar todos los campos o asegurarse que su contraseña tenga minimo 6 caracteres',\r\n        buttons: ['Aceptar'],\r\n      });\r\n\r\n      await alert.present() ;\r\n      return;\r\n    }\r\n\r\n    // if (f.contraseña < 6) {\r\n\r\n    //   const alert3 = await this.alertController.create({\r\n    //     header: 'Contraseña muy corta',\r\n    //     message: 'La contraseña debe de tener minimo 6 caracteres',\r\n    //     buttons: ['Aceptar'],\r\n    //   });\r\n\r\n    //   await alert3.present() ;\r\n    //   return;\r\n    // }\r\n\r\n    else{\r\n      \r\n      this.newdoctor.nombre= f.nombre,\r\n      this.newdoctor.apellido= f.apellido,\r\n      this.newdoctor.cedula=f.cedula,\r\n      this.newdoctor.especialidad= f.especialidad,\r\n      this.newdoctor.correo= f.correo,\r\n      this.newdoctor.contraseña= f.contraseña,\r\n      this.newdoctor.rol= \"Doctor\";\r\n\r\n      const res = await this.auth.registrar(this.newdoctor.correo, this.newdoctor.contraseña).catch(res => {\r\n      console.log('error');\r\n    })\r\n\r\n    if(res){\r\n      console.log(\"Usuario creado\")\r\n      const path = 'Doctores';\r\n      const Id = res.user!.uid;\r\n      this.newdoctor.uid = Id;\r\n      this.newdoctor.contraseña = \"\";\r\n\r\n      await this.store.createDoc(this.newdoctor, path, Id);\r\n\r\n      const alert2 = await this.alertController.create({\r\n        header: 'Usuario creado',\r\n        buttons: ['INICIO'],\r\n      });\r\n\r\n      await alert2.present();\r\n      this.router.navigate(['../login'])\r\n\r\n    }\r\n      \r\n\r\n    }\r\n    \r\n    \r\n\r\n    \r\n      \r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-title></ion-title>\r\n    <ion-button fill=\"clear\" slot=\"start\">\r\n      <ion-back-button color=\"light\" ></ion-back-button>\r\n    </ion-button>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-card>\r\n    <ion-card-header>\r\n      <ion-card-title>Registro</ion-card-title>\r\n    </ion-card-header>\r\n    <ion-card-content>\r\n      <form [formGroup]=\"formularioregistrod\" (ngSubmit)=\"registrarse()\">\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Nombre <ion-text color=\"danger\">*</ion-text></ion-label>\r\n          <ion-input required formControlName=\"nombre\" type=\"text\"></ion-input>\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Apellido <ion-text color=\"danger\">*</ion-text></ion-label>\r\n          <ion-input required formControlName=\"apellido\" type=\"text\"></ion-input>\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Cédula<ion-text color=\"danger\">*</ion-text></ion-label>\r\n          <ion-input required formControlName=\"cedula\" type=\"text\"></ion-input>\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Especialidad<ion-text color=\"danger\">*</ion-text></ion-label>\r\n          <ion-input required formControlName=\"especialidad\" type=\"text\"></ion-input>\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Correo electronico <ion-text color=\"danger\">*</ion-text></ion-label>\r\n          <ion-input required formControlName=\"correo\" type=\"text\"></ion-input>\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-label position=\"floating\">Contraseña <ion-text color=\"danger\">*</ion-text></ion-label>\r\n          <ion-input required formControlName=\"contraseña\" type=\"password\" minlength= 6></ion-input>\r\n        </ion-item>\r\n        <ion-button block color=\"primary\" type=\"submit\">\r\n          Login\r\n        </ion-button>\r\n      </form>\r\n    </ion-card-content>\r\n  </ion-card>\r\n\r\n</ion-content>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}