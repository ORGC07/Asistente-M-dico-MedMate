{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component } from \"@angular/core\";\nlet SetReportesComponent = class SetReportesComponent {\n  constructor(menuController, firestoreService, loadingCtrl, toastController, alertController, auth) {\n    this.menuController = menuController;\n    this.firestoreService = firestoreService;\n    this.loadingCtrl = loadingCtrl;\n    this.toastController = toastController;\n    this.alertController = alertController;\n    this.auth = auth;\n    this.reporte = [];\n    this.pacientes = [];\n    this.infopacientes = [];\n    this.enablenewReportes = false;\n    this.path = \"reportes/\";\n  }\n  ngOnInit() {\n    this.leertRepo();\n    this.getpacientes();\n  }\n  getpacientes() {\n    this.firestoreService.getCollection(\"Pacientes\").subscribe(res => {\n      if (res) {\n        this.infopacientes = res;\n      }\n    });\n  }\n  openMenu() {\n    this.menuController.toggle(\"main\");\n  }\n  guardarRepo() {\n    const uid = this.auth.getUid();\n    this.showLoading();\n    this.firestoreService.getCollection(\"Pacientes\").subscribe(res => {\n      if (res) {\n        this.pacientes = res;\n        this.pacientes.forEach(pac => {\n          if (pac.uid == this.newReportes.idpaciente) {\n            if (uid) {\n              this.uiddoctor = uid;\n              this.newReportes = {\n                nombre: pac.nombre + \"\" + pac.apellido,\n                idpaciente: pac.uid,\n                edad: pac.edad,\n                peso: this.newReportes.peso,\n                altura: this.newReportes.altura,\n                medicamentos: this.newReportes.medicamentos,\n                condicion: this.newReportes.condicion,\n                iddoctor: this.uiddoctor,\n                id: this.firestoreService.getId(),\n                fecha: new Date()\n              };\n              this.firestoreService.createRepo(this.newReportes, this.path, this.newReportes.id).then(res => {\n                this.loading.dismiss();\n                this.presentToast(\"Guardado con exito\");\n              }).catch(error => {\n                this.presentToast(\"No se pudo guardar\");\n              });\n            }\n          }\n        });\n      }\n    });\n  }\n  leertRepo() {\n    0;\n    this.firestoreService.getCollection(this.path).subscribe(res => {\n      this.reporte = res;\n    });\n  }\n  deleteReporte(Reporte) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const alert = yield this.alertController.create({\n        cssClass: \"normal\",\n        header: \"Advertencia\",\n        message: \"¿Seguro que deseas <strong>eliminar</strong> este reporte?\",\n        buttons: [{\n          text: \"Cancelar\",\n          role: \"cancel\",\n          cssClass: \"normal\",\n          handler: () => {\n            console.log(\"Alert canceled\");\n          }\n        }, {\n          text: \"OK\",\n          role: \"confirm\",\n          handler: () => {\n            console.log(\"Alert confirmed\");\n            this.firestoreService.deletetRepo(this.path, Reporte.id).then(res => {\n              this.alertController.dismiss();\n              this.presentToast(\"Eliminado con exito\");\n            }).catch(error => {\n              this.presentToast(\"No se pudo eliminar\");\n            });\n          }\n        }]\n      });\n      yield alert.present();\n    });\n  }\n  nuevo() {\n    this.enablenewReportes = true;\n    this.newReportes = {\n      nombre: \"\",\n      idpaciente: \"\",\n      edad: 0,\n      peso: 0,\n      altura: 0,\n      medicamentos: \"\",\n      condicion: \"\",\n      id: this.firestoreService.getId(),\n      iddoctor: \"\",\n      fecha: new Date()\n    };\n  }\n  showLoading() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.loading = yield this.loadingCtrl.create({\n        cssClass: \"normal\",\n        message: \"Guardando...\",\n        spinner: \"circles\"\n      });\n      yield this.loading.present();\n    });\n  }\n  presentToast(msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const toast = yield this.toastController.create({\n        cssClass: \"normal\",\n        message: msg,\n        duration: 2000,\n        icon: \"thumbs-up-outline\",\n        color: \"light\"\n      });\n      yield toast.present();\n    });\n  }\n};\nSetReportesComponent = __decorate([Component({\n  selector: \"app-set-reportes\",\n  templateUrl: \"./set-reportes.component.html\",\n  styleUrls: [\"./set-reportes.component.scss\"]\n})], SetReportesComponent);\nexport { SetReportesComponent };","map":{"version":3,"mappings":"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","names":["Component","SetReportesComponent","constructor","menuController","firestoreService","loadingCtrl","toastController","alertController","auth","ngOnInit","leertRepo","getpacientes","getCollection","subscribe","res","infopacientes","openMenu","toggle","guardarRepo","uid","getUid","showLoading","pacientes","forEach","pac","newReportes","idpaciente","uiddoctor","nombre","apellido","edad","peso","altura","medicamentos","condicion","iddoctor","id","getId","fecha","Date","createRepo","path","then","loading","dismiss","presentToast","catch","error","reporte","deleteReporte","Reporte","alert","create","cssClass","header","message","buttons","text","role","handler","console","log","deletetRepo","present","nuevo","enablenewReportes","spinner","msg","toast","duration","icon","color","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\erick\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\backend\\set-reportes\\set-reportes.component.ts"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  AlertController,\r\n  LoadingController,\r\n  MenuController,\r\n  ToastController,\r\n} from \"@ionic/angular\";\r\nimport { mainModule } from \"process\";\r\nimport { FirestoreService } from \"src/app/services/firestore.services\";\r\n\r\nimport { ɵNullViewportScroller } from \"@angular/common\";\r\nimport { error } from \"console\";\r\nimport { Reporte, paciente } from \"src/app/models/interface\";\r\n\r\n\r\n@Component({\r\n  selector: \"app-set-reportes\",\r\n  templateUrl: \"./set-reportes.component.html\",\r\n  styleUrls: [\"./set-reportes.component.scss\"],\r\n})\r\nexport class SetReportesComponent implements OnInit {\r\n  reporte: Reporte[] = [];\r\n  newReportes!: Reporte;\r\n  pacientes: paciente[] = [];\r\n  infopacientes: paciente[] = [];\r\n  uiddoctor: any;\r\n\r\n  enablenewReportes = false;\r\n\r\n  private path = \"reportes/\";\r\n  loading: any;\r\n\r\n  constructor(\r\n    public menuController: MenuController,\r\n    public firestoreService: FirestoreService,\r\n    private loadingCtrl: LoadingController,\r\n    private toastController: ToastController,\r\n    private alertController: AlertController,\r\n    private auth: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.leertRepo();\r\n    this.getpacientes();\r\n  }\r\n\r\n  getpacientes() {\r\n    this.firestoreService\r\n      .getCollection<paciente>(\"Pacientes\")\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.infopacientes = res;\r\n        }\r\n      });\r\n  }\r\n\r\n  openMenu() {\r\n    this.menuController.toggle(\"main\");\r\n  }\r\n\r\n   guardarRepo() {\r\n    \r\n    const uid = this.auth.getUid();\r\n    this.showLoading();\r\n\r\n    this.firestoreService\r\n      .getCollection<paciente>(\"Pacientes\")\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.pacientes = res;\r\n          this.pacientes.forEach((pac) => {\r\n            if (pac.uid == this.newReportes.idpaciente) {\r\n              if(uid){\r\n                this.uiddoctor = uid\r\n                this.newReportes = {\r\n                  nombre: pac.nombre + \"\" + pac.apellido,\r\n                  idpaciente: pac.uid,\r\n                  edad: pac.edad,\r\n                  peso: this.newReportes.peso,\r\n                  altura: this.newReportes.altura,\r\n                  medicamentos: this.newReportes.medicamentos,\r\n                  condicion: this.newReportes.condicion,\r\n                  iddoctor: this.uiddoctor,\r\n                  id: this.firestoreService.getId(),\r\n                  fecha: new Date(),\r\n                }\r\n                this.firestoreService\r\n                  .createRepo(this.newReportes, this.path, this.newReportes.id)\r\n                  .then((res) => {\r\n                    this.loading.dismiss();\r\n                    this.presentToast(\"Guardado con exito\");\r\n                  })\r\n                  .catch((error) => {\r\n                    this.presentToast(\"No se pudo guardar\");\r\n                  });\r\n              }\r\n              \r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n    \r\n  }\r\n  leertRepo() {\r\n    0;\r\n    this.firestoreService.getCollection<Reporte>(this.path).subscribe((res) => {\r\n      this.reporte = res;\r\n    });\r\n  }\r\n  async deleteReporte(Reporte: Reporte) {\r\n    const alert = await this.alertController.create({\r\n      cssClass: \"normal\",\r\n      header: \"Advertencia\",\r\n      message: \"¿Seguro que deseas <strong>eliminar</strong> este reporte?\",\r\n      buttons: [\r\n        {\r\n          text: \"Cancelar\",\r\n          role: \"cancel\",\r\n          cssClass: \"normal\",\r\n          handler: () => {\r\n            console.log(\"Alert canceled\");\r\n          },\r\n        },\r\n        {\r\n          text: \"OK\",\r\n          role: \"confirm\",\r\n          handler: () => {\r\n            console.log(\"Alert confirmed\");\r\n            this.firestoreService\r\n              .deletetRepo(this.path, Reporte.id)\r\n              .then((res) => {\r\n                this.alertController.dismiss();\r\n                this.presentToast(\"Eliminado con exito\");\r\n              })\r\n              .catch((error) => {\r\n                this.presentToast(\"No se pudo eliminar\");\r\n              });\r\n          },\r\n        },\r\n      ],\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  nuevo() {\r\n    \r\n    this.enablenewReportes = true;\r\n    this.newReportes = {\r\n      nombre: \"\",\r\n      idpaciente: \"\",\r\n      edad: 0,\r\n      peso: 0,\r\n      altura: 0,\r\n      medicamentos: \"\",\r\n      condicion: \"\",\r\n      id: this.firestoreService.getId(),\r\n      iddoctor: \"\",\r\n      fecha: new Date(),\r\n    };\r\n  }\r\n  async showLoading() {\r\n    this.loading = await this.loadingCtrl.create({\r\n      cssClass: \"normal\",\r\n      message: \"Guardando...\",\r\n      spinner: \"circles\",\r\n    });\r\n\r\n    await this.loading.present();\r\n  }\r\n  async presentToast(msg: string) {\r\n    const toast = await this.toastController.create({\r\n      cssClass: \"normal\",\r\n      message: msg,\r\n      duration: 2000,\r\n      icon: \"thumbs-up-outline\",\r\n      color: \"light\",\r\n    });\r\n\r\n    await toast.present();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}