{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nexport class FirestoreService {\n  constructor(firestore) {\n    this.firestore = firestore;\n  }\n  createDoc(data, path, id) {\n    const collection = this.firestore.collection(path);\n    return collection.doc(id).set(data);\n  }\n  agregar(data, path) {\n    const collection = this.firestore.collection(path);\n    return collection.doc().set(data);\n  }\n  getId() {\n    return this.firestore.createId();\n  }\n  consultar(path) {\n    const collection = this.firestore.collection(path);\n    return collection.valueChanges();\n  }\n  getDoc(path, id) {\n    return this.firestore.collection(path).doc(id).valueChanges();\n  }\n  update(path, id, data) {\n    return __awaiter(this, void 0, void 0, function* () {\n      return yield this.firestore.collection(path).doc(id);\n    });\n  }\n}\nFirestoreService.ɵfac = function FirestoreService_Factory(t) {\n  return new (t || FirestoreService)(i0.ɵɵinject(i1.AngularFirestore));\n};\nFirestoreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FirestoreService,\n  factory: FirestoreService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;;AAMA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAoBC,SAA2B;IAA3B,cAAS,GAATA,SAAS;EAAsB;EAEnDC,SAAS,CAACC,IAAS,EAAEC,IAAY,EAAEC,EAAS;IAE1C,MAAMC,UAAU,GAAG,IAAI,CAACL,SAAS,CAACK,UAAU,CAACF,IAAI,CAAC;IAClD,OAAOE,UAAU,CAACC,GAAG,CAACF,EAAE,CAAC,CAACG,GAAG,CAACL,IAAI,CAAC;EACrC;EAEAM,OAAO,CAACN,IAAS,EAAEC,IAAY;IAE7B,MAAME,UAAU,GAAG,IAAI,CAACL,SAAS,CAACK,UAAU,CAACF,IAAI,CAAC;IAClD,OAAOE,UAAU,CAACC,GAAG,EAAE,CAACC,GAAG,CAACL,IAAI,CAAC;EACnC;EAEAO,KAAK;IACH,OAAO,IAAI,CAACT,SAAS,CAACU,QAAQ,EAAE;EAClC;EAEAC,SAAS,CAAOR,IAAY;IAC1B,MAAME,UAAU,GAAG,IAAI,CAACL,SAAS,CAACK,UAAU,CAAOF,IAAI,CAAC;IACxD,OAAOE,UAAU,CAACO,YAAY,EAAE;EAClC;EAEAC,MAAM,CAAOV,IAAY,EAAEC,EAAU;IACnC,OAAO,IAAI,CAACJ,SAAS,CAACK,UAAU,CAAOF,IAAI,CAAC,CAACG,GAAG,CAACF,EAAE,CAAC,CAACQ,YAAY,EAAE;EACrE;EAIME,MAAM,CAAOX,IAAY,EAAEC,EAAS,EAAEF,IAAS;;MACnD,OAAO,MAAM,IAAI,CAACF,SAAS,CAACK,UAAU,CAAOF,IAAI,CAAC,CAACG,GAAG,CAACF,EAAE,CAAC;IAC5D,CAAC;;;;mBAjCUN,gBAAgB;AAAA;;SAAhBA,gBAAgB;EAAAiB,SAAhBjB,gBAAgB;EAAAkB,YAFf;AAAM","names":["FirestoreService","constructor","firestore","createDoc","data","path","id","collection","doc","set","agregar","getId","createId","consultar","valueChanges","getDoc","update","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\erick\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\services\\firestore.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AngularFirestore } from '@angular/fire/compat/firestore';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FirestoreService {\r\n\r\n  constructor(private firestore: AngularFirestore) { }\r\n\r\n  createDoc(data: any, path: string, id:string){\r\n\r\n    const collection = this.firestore.collection(path);\r\n    return collection.doc(id).set(data)\r\n  }\r\n\r\n  agregar(data: any, path: string){\r\n\r\n    const collection = this.firestore.collection(path);\r\n    return collection.doc().set(data)\r\n  }\r\n\r\n  getId(){\r\n    return this.firestore.createId();\r\n  }\r\n\r\n  consultar<Tipo>(path: string){\r\n    const collection = this.firestore.collection<Tipo>(path);\r\n    return collection.valueChanges();\r\n  }\r\n\r\n  getDoc<Tipo>(path: string, id: string){\r\n    return this.firestore.collection<Tipo>(path).doc(id).valueChanges();\r\n  }\r\n\r\n  deletedoc(path:)\r\n\r\n  async update<Tipo>(path: string, id:string, data: any){\r\n    return await this.firestore.collection<Tipo>(path).doc(id);\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}