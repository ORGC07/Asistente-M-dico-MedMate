{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../services/firestore.service\";\nimport * as i5 from \"@ionic/angular\";\nimport * as i6 from \"../app.component\";\nconst _c0 = function () {\n  return [\"/registro\"];\n};\nexport class LoginPage {\n  constructor(fb, auth, router, store, alertcontroller, menu) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.store = store;\n    this.alertcontroller = alertcontroller;\n    this.menu = menu;\n    this.formulariologin = this.fb.group({\n      'user': new FormControl(\"\", Validators.required),\n      'password': new FormControl(\"\", Validators.required)\n    });\n  }\n  ingresar() {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      var form = this.formulariologin.value;\n      const res = yield this.auth.login(form.user, form.password);\n      if (res) {\n        console.log(\"Usuario correcto\");\n        const Id = (_a = res.user) === null || _a === void 0 ? void 0 : _a.uid;\n        if (Id) {\n          this.store.getDoc(\"Pacientes\", Id).subscribe(res => {\n            if (res) {\n              this.info = res;\n              if (this.info) {\n                console.log(this.info);\n                this.router.navigate(['./../']);\n              }\n            }\n          });\n          this.store.getDoc(\"Doctores\", Id).subscribe(res => {\n            if (res) {\n              this.info = res;\n              if (this.info) {\n                console.log(this.info);\n                this.router.navigate(['./../mdoctor/home/home.module.ts']);\n              }\n            }\n          });\n        }\n      }\n      if (this.formulariologin.invalid) {\n        console.log(\"Usuario incorrecto\");\n        const alert = yield this.alertcontroller.create({\n          header: 'Contraseña o usuario incorrecto',\n          message: 'Asegurese que su contraseña y usuario sean correctos o registrese',\n          buttons: ['Aceptar']\n        });\n        yield alert.present();\n        return;\n      }\n    });\n  }\n  ngOnInit() {}\n}\nLoginPage.ɵfac = function LoginPage_Factory(t) {\n  return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FirestoreService), i0.ɵɵdirectiveInject(i5.AlertController), i0.ɵɵdirectiveInject(i6.AppComponent));\n};\nLoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: LoginPage,\n  selectors: [[\"app-login\"]],\n  decls: 34,\n  vars: 3,\n  consts: [[\"color\", \"primary\"], [\"color\", \"medium\"], [3, \"formGroup\"], [\"color\", \"primary\", \"position\", \"floating\"], [\"autofocus\", \"on\", \"clearInput\", \"true\", \"clearOnEdit\", \"true\", \"inputmode\", \"text\", \"placeholder\", \"Ingrese su Usuario\", \"required\", \"true\", \"formControlName\", \"user\"], [\"name\", \"person\", \"color\", \"primary\", \"slot\", \"start\"], [\"placeholder\", \"Ingrese su Contrase\\u00F1a\", \"required\", \"true\", \"formControlName\", \"password\", \"type\", \"password\"], [\"name\", \"Keypad-Outline\", \"color\", \"primary\", \"slot\", \"start\"], [\"slot\", \"start\"], [1, \"solid\"], [\"color\", \"primary\", \"expand\", \"block\", 3, \"click\"], [\"color\", \"primary\", \"expand\", \"block\", 3, \"routerLink\"]],\n  template: function LoginPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\");\n      i0.ɵɵtext(3, \"MedMate\");\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-card\");\n      i0.ɵɵelement(6, \"ion-card-header\", 1);\n      i0.ɵɵelementStart(7, \"ion-card-content\")(8, \"form\", 2)(9, \"ion-item\")(10, \"ion-label\", 3);\n      i0.ɵɵtext(11, \"Usuario\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(12, \"ion-input\", 4)(13, \"ion-icon\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"ion-item\")(15, \"ion-label\", 3);\n      i0.ɵɵtext(16, \"Contrase\\u00F1a\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelement(17, \"ion-input\", 6)(18, \"ion-icon\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(19, \"br\");\n      i0.ɵɵelementStart(20, \"ion-item\");\n      i0.ɵɵelement(21, \"ion-checkbox\", 8);\n      i0.ɵɵelementStart(22, \"ion-label\");\n      i0.ɵɵtext(23, \"Recuerdame \");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(24, \"ion-item\")(25, \"ion-label\");\n      i0.ɵɵelement(26, \"hr\", 9);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(27, \"ion-button\", 10);\n      i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_button_click_27_listener() {\n        return ctx.ingresar();\n      });\n      i0.ɵɵtext(28, \" Ingresar \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(29, \"ion-button\", 11);\n      i0.ɵɵtext(30, \" Registrarse \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(31, \"ion-item\")(32, \"ion-label\");\n      i0.ɵɵelement(33, \"hr\", 9);\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(8);\n      i0.ɵɵproperty(\"formGroup\", ctx.formulariologin);\n      i0.ɵɵadvance(21);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i5.IonButton, i5.IonCard, i5.IonCardContent, i5.IonCardHeader, i5.IonCheckbox, i5.IonContent, i5.IonHeader, i5.IonIcon, i5.IonInput, i5.IonItem, i5.IonLabel, i5.IonTitle, i5.IonToolbar, i5.BooleanValueAccessor, i5.TextValueAccessor, i5.RouterLinkDelegate, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink],\n  styles: [\"ion-item-divider[_ngcontent-%COMP%] {\\n  border-top: 3px;\\n  background: None;\\n}\\n\\nion-checkbox[_ngcontent-%COMP%] {\\n  --size: 10px;\\n  --background-checked: clear;\\n}\\n\\nion-checkbox[_ngcontent-%COMP%]::part(container) {\\n  border-radius: 6px;\\n  border: 2px solid blue;\\n}\\n\\nhr.solid[_ngcontent-%COMP%] {\\n  border-top: 3px solid #bbb;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvbG9naW4vbG9naW4ucGFnZS5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRVEsZUFBQTtFQUNBLGdCQUFBO0FBQVI7O0FBSUU7RUFDRSxZQUFBO0VBQ0EsMkJBQUE7QUFESjs7QUFLRTtFQUNFLGtCQUFBO0VBQ0Esc0JBQUE7QUFGSjs7QUFNQztFQUNHLDBCQUFBO0FBSEoiLCJzb3VyY2VzQ29udGVudCI6WyJpb24taXRlbS1kaXZpZGVyIFxyXG4gICAge1xyXG4gICAgICAgIGJvcmRlci10b3A6IDNweDtcclxuICAgICAgICBiYWNrZ3JvdW5kOiBOb25lO1xyXG4gICAgICB9XHJcbiAgXHJcblxyXG4gIGlvbi1jaGVja2JveCB7XHJcbiAgICAtLXNpemU6IDEwcHg7XHJcbiAgICAtLWJhY2tncm91bmQtY2hlY2tlZDogY2xlYXI7XHJcbiAgfVxyXG5cclxuICAvL0Z1ZXJhIGRlIHVzb1xyXG4gIGlvbi1jaGVja2JveDo6cGFydChjb250YWluZXIpIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDZweDtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkIGJsdWU7XHJcbiAgfVxyXG4gLy9GdWVyYSBkZSB1c29cclxuXHJcbiBoci5zb2xpZCB7XHJcbiAgICBib3JkZXItdG9wOiAzcHggc29saWQgI2JiYjtcclxuICB9Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","LoginPage","constructor","fb","auth","router","store","alertcontroller","menu","formulariologin","group","required","ingresar","form","value","res","login","user","password","console","log","Id","uid","getDoc","subscribe","info","navigate","invalid","alert","create","header","message","buttons","present","ngOnInit","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\erick\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\login\\login.page.ts","C:\\Users\\erick\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\login\\login.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport {\r\n  FormGroup,\r\n  FormControl,\r\n  Validators,\r\n  FormBuilder,\r\n} from '@angular/forms';\r\nimport { AuthService } from '../services/auth.service';\r\nimport { Router } from '@angular/router';\r\nimport { FirestoreService } from '../services/firestore.service';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { AppComponent } from '../app.component'\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.page.html',\r\n  styleUrls: ['./login.page.scss'],\r\n})\r\nexport class LoginPage implements OnInit {\r\n\r\n  formulariologin: FormGroup;\r\n  info: {} | undefined;\r\n  \r\n\r\n  constructor(private fb: FormBuilder, private auth: AuthService, private router: Router,\r\n    private store: FirestoreService, private alertcontroller: AlertController, private menu: AppComponent) {\r\n\r\n    this.formulariologin = this.fb.group({\r\n      'user': new FormControl(\"\", Validators.required),\r\n      'password': new FormControl(\"\", Validators.required)\r\n    })\r\n   }\r\n\r\n   async ingresar(){\r\n    var form= this.formulariologin.value;\r\n\r\n    const res = await this.auth.login(form.user, form.password);\r\n\r\n    if(res){\r\n      console.log(\"Usuario correcto\")\r\n      const Id = res.user?.uid;\r\n      if (Id){\r\n       this.store.getDoc(\"Pacientes\", Id).subscribe(res => { \r\n          if (res){\r\n          this.info = res;\r\n          if (this.info) {\r\n            console.log(this.info)\r\n            this.router.navigate(['./../']);\r\n          }\r\n          \r\n          } \r\n        });\r\n        this.store.getDoc(\"Doctores\", Id).subscribe(res => { \r\n          if (res){\r\n          this.info = res;\r\n          if (this.info) {\r\n            console.log(this.info)\r\n            this.router.navigate(['./../mdoctor/home/home.module.ts']);\r\n          }\r\n          \r\n          } \r\n        });\r\n      \r\n      \r\n      }  \r\n\r\n    }\r\n    \r\n    if(this.formulariologin.invalid){\r\n    console.log(\"Usuario incorrecto\")\r\n    const alert = await this.alertcontroller.create({\r\n        header: 'Contraseña o usuario incorrecto',\r\n        message: 'Asegurese que su contraseña y usuario sean correctos o registrese',\r\n        buttons: ['Aceptar'],\r\n      });\r\n\r\n      await alert.present();\r\n      return;\r\n   }\r\n   }\r\n   \r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-title>MedMate</ion-title>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-card>\r\n    <ion-card-header color=\"medium\">\r\n     \r\n    </ion-card-header>\r\n    <ion-card-content>\r\n      <form [formGroup]=\"formulariologin\">\r\n        <ion-item>\r\n          <ion-label color=\"primary\" position=\"floating\">Usuario</ion-label>\r\n          <ion-input autofocus=\"on\" clearInput=\"true\" clearOnEdit=\"true\" inputmode=\"text\" placeholder=\"Ingrese su Usuario\" required=\"true\" formControlName=\"user\"></ion-input>\r\n          <ion-icon name=\"person\" color=\"primary\" slot=\"start\"></ion-icon>\r\n        </ion-item>\r\n      <ion-item>\r\n        <ion-label color=\"primary\" position=\"floating\">Contraseña</ion-label>\r\n        <ion-input placeholder=\"Ingrese su Contraseña\" required=\"true\" formControlName=\"password\" type=\"password\"></ion-input>\r\n        <ion-icon name=\"Keypad-Outline\" color=\"primary\" slot=\"start\"></ion-icon>\r\n      </ion-item>\r\n\r\n    </form>\r\n<br>\r\n    <ion-item>\r\n      <ion-checkbox slot=\"start\"></ion-checkbox>\r\n      <ion-label>Recuerdame </ion-label>  \r\n    </ion-item>\r\n\r\n    <ion-item><ion-label><hr class=\"solid\"></ion-label></ion-item>\r\n\r\n    <ion-button  color=\"primary\" expand=\"block\"  (click)=\"ingresar()\">\r\n      Ingresar\r\n    </ion-button>\r\n\r\n    <ion-button  color=\"primary\" expand=\"block\" [routerLink]=\"['/registro']\">\r\n      Registrarse\r\n    </ion-button>\r\n\r\n\r\n    <ion-item><ion-label><hr class=\"solid\"></ion-label></ion-item>\r\n\r\n    </ion-card-content>\r\n  </ion-card>\r\n   \r\n</ion-content>\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}