{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"../services/auth.service\";\nimport * as i4 from \"../services/firestore.service\";\nimport * as i5 from \"@angular/router\";\nexport class RadministradorPage {\n  constructor(fb, alertController, auth, store, router) {\n    this.fb = fb;\n    this.alertController = alertController;\n    this.auth = auth;\n    this.store = store;\n    this.router = router;\n    this.newadministrador = {\n      uid: \"\",\n      nombre: \"\",\n      apellido: \"\",\n      correo: \"\",\n      contraseña: \"\",\n      llave: \"\",\n      rol: \"Administrador\"\n    };\n    this.formularioregristroad = this.fb.group({\n      nombre: new FormControl(\"\", Validators.required),\n      apellido: new FormControl(\"\", Validators.required),\n      correo: new FormControl(\"\", Validators.required),\n      contraseña: new FormControl(\"\", Validators.required),\n      llave: new FormControl(\"\", Validators.required)\n    });\n  }\n  ngOnInit() {}\n  registrarse() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var f = this.formularioregristroad.value;\n      if (this.formularioregristroad.invalid) {\n        const alert = yield this.alertController.create({\n          header: \"Datos incompletos\",\n          message: \"Debe de ingresar todos los campos o asegurarse que su contraseña tenga minimo 6 caracteres\",\n          buttons: [\"Aceptar\"]\n        });\n        yield alert.present();\n        return;\n      } else {\n        if (f.llave == 1234567) {\n          this.newadministrador.nombre = f.nombre;\n          this.newadministrador.apellido = f.apellido;\n          this.newadministrador.correo = f.correo;\n          this.newadministrador.contraseña = f.contraseña;\n          this.newadministrador.llave = f.llave;\n          this.newadministrador.rol = \"Administrador\";\n          const admin = yield this.auth.registrar(this.newadministrador.correo, this.newadministrador.contraseña);\n          if (admin) {\n            const path = \"Administrador\";\n            const Id = admin.user.uid;\n            this.newadministrador.uid = Id;\n            this.newadministrador.contraseña = \"\";\n            yield this.store.createDoc(this.newadministrador, path, Id);\n            const alert2 = yield this.alertController.create({\n              header: \"Usuario creado\",\n              buttons: [\"INICIO\"]\n            });\n            yield alert2.present();\n            this.router.navigate([\"../login\"]);\n          }\n        } else {\n          const alert = yield this.alertController.create({\n            header: \"Llave de acceso incorrecta\",\n            message: \"Debe de asegurarse que la llave sea la correcta\",\n            buttons: [\"Aceptar\"]\n          });\n          yield alert.present();\n          return;\n        }\n      }\n    });\n  }\n}\nRadministradorPage.ɵfac = function RadministradorPage_Factory(t) {\n  return new (t || RadministradorPage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AlertController), i0.ɵɵdirectiveInject(i3.AuthService), i0.ɵɵdirectiveInject(i4.FirestoreService), i0.ɵɵdirectiveInject(i5.Router));\n};\nRadministradorPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: RadministradorPage,\n  selectors: [[\"app-radministrador\"]],\n  decls: 56,\n  vars: 1,\n  consts: [[\"color\", \"primary\"], [\"fill\", \"clear\", \"slot\", \"start\"], [\"color\", \"light\"], [3, \"formGroup\", \"ngSubmit\"], [\"fill\", \"solid\"], [\"position\", \"floating\"], [\"color\", \"danger\"], [\"placeholder\", \"Ingrese su Nombre\", \"required\", \"\", \"formControlName\", \"nombre\", \"type\", \"text\"], [1, \"solid\"], [\"placeholder\", \"Ingrese su Apellido\", \"required\", \"\", \"formControlName\", \"apellido\", \"type\", \"text\"], [\"placeholder\", \"Ingrese su Correo electronico\", \"required\", \"\", \"formControlName\", \"correo\", \"type\", \"text\"], [\"placeholder\", \"Ingrese su Contrase\\u00F1a\", \"required\", \"\", \"formControlName\", \"contrase\\u00F1a\", \"type\", \"password\", \"minlength\", \"6\"], [\"placeholder\", \"Ingrese su Contrase\\u00F1a\", \"required\", \"\", \"formControlName\", \"llave\", \"type\", \"password\", \"minlength\", \"6\"], [\"block\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n  template: function RadministradorPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0);\n      i0.ɵɵelement(2, \"ion-title\");\n      i0.ɵɵelementStart(3, \"ion-button\", 1);\n      i0.ɵɵelement(4, \"ion-back-button\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(5, \"ion-content\")(6, \"ion-card\")(7, \"ion-card-header\")(8, \"ion-card-title\");\n      i0.ɵɵtext(9, \"Registro\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(10, \"ion-card-content\")(11, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function RadministradorPage_Template_form_ngSubmit_11_listener() {\n        return ctx.registrarse();\n      });\n      i0.ɵɵelementStart(12, \"ion-item\", 4)(13, \"ion-label\", 5);\n      i0.ɵɵtext(14, \"Nombre \");\n      i0.ɵɵelementStart(15, \"ion-text\", 6);\n      i0.ɵɵtext(16, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(17, \"ion-input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(18, \"ion-item\")(19, \"ion-label\");\n      i0.ɵɵelement(20, \"hr\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(21, \"ion-item\", 4)(22, \"ion-label\", 5);\n      i0.ɵɵtext(23, \"Apellido \");\n      i0.ɵɵelementStart(24, \"ion-text\", 6);\n      i0.ɵɵtext(25, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(26, \"ion-input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"ion-item\")(28, \"ion-label\");\n      i0.ɵɵelement(29, \"hr\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(30, \"ion-item\", 4)(31, \"ion-label\", 5);\n      i0.ɵɵtext(32, \"Correo electronico \");\n      i0.ɵɵelementStart(33, \"ion-text\", 6);\n      i0.ɵɵtext(34, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(35, \"ion-input\", 10);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(36, \"ion-item\")(37, \"ion-label\");\n      i0.ɵɵelement(38, \"hr\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(39, \"ion-item\", 4)(40, \"ion-label\", 5);\n      i0.ɵɵtext(41, \"Contrase\\u00F1a \");\n      i0.ɵɵelementStart(42, \"ion-text\", 6);\n      i0.ɵɵtext(43, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(44, \"ion-input\", 11);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(45, \"ion-item\")(46, \"ion-label\");\n      i0.ɵɵelement(47, \"hr\", 8);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(48, \"ion-item\", 4)(49, \"ion-label\", 5);\n      i0.ɵɵtext(50, \"Llave \");\n      i0.ɵɵelementStart(51, \"ion-text\", 6);\n      i0.ɵɵtext(52, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(53, \"ion-input\", 12);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(54, \"ion-button\", 13);\n      i0.ɵɵtext(55, \" Aceptar \");\n      i0.ɵɵelementEnd()()()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"formGroup\", ctx.formularioregristroad);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i1.MinLengthValidator, i1.FormGroupDirective, i1.FormControlName, i2.IonBackButton, i2.IonButton, i2.IonCard, i2.IonCardContent, i2.IonCardHeader, i2.IonCardTitle, i2.IonContent, i2.IonHeader, i2.IonInput, i2.IonItem, i2.IonLabel, i2.IonText, i2.IonTitle, i2.IonToolbar, i2.TextValueAccessor, i2.IonBackButtonDelegate],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","RadministradorPage","constructor","fb","alertController","auth","store","router","uid","nombre","apellido","correo","contraseña","llave","rol","formularioregristroad","group","required","ngOnInit","registrarse","f","value","invalid","alert","create","header","message","buttons","present","newadministrador","admin","registrar","path","Id","user","createDoc","alert2","navigate","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\omarr\\Documents\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\radministrador\\radministrador.page.ts","C:\\Users\\omarr\\Documents\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\radministrador\\radministrador.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { AlertController } from \"@ionic/angular\";\r\nimport { AuthService } from \"../services/auth.service\";\r\nimport { FirestoreService } from \"../services/firestore.service\";\r\nimport { Router } from \"@angular/router\";\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { administrador } from '../models/interface';\r\n\r\n@Component({\r\n  selector: \"app-radministrador\",\r\n  templateUrl: \"./radministrador.page.html\",\r\n  styleUrls: [\"./radministrador.page.scss\"],\r\n})\r\nexport class RadministradorPage implements OnInit {\r\n\r\n  public formularioregristroad: FormGroup;\r\n\r\n  newadministrador: administrador = {\r\n    uid: \"\",\r\n    nombre: \"\",\r\n    apellido: \"\",\r\n    correo: \"\",\r\n    contraseña: \"\",\r\n    llave: \"\",\r\n    rol: \"Administrador\",\r\n  };\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private alertController: AlertController,\r\n    private auth: AuthService,\r\n    private store: FirestoreService,\r\n    private router: Router\r\n  ) {\r\n\r\n    this.formularioregristroad = this.fb.group({\r\n      nombre: new FormControl(\"\", Validators.required),\r\n      apellido: new FormControl(\"\", Validators.required),\r\n      correo: new FormControl(\"\", Validators.required),\r\n      contraseña: new FormControl(\"\", Validators.required),\r\n      llave: new FormControl(\"\", Validators.required),\r\n    });\r\n  }\r\n\r\n  ngOnInit() {}\r\n\r\n  async registrarse(){\r\n\r\n    var f = this.formularioregristroad.value;\r\n\r\n    if (this.formularioregristroad.invalid) {\r\n      const alert = await this.alertController.create({\r\n        header: \"Datos incompletos\",\r\n        message:\r\n          \"Debe de ingresar todos los campos o asegurarse que su contraseña tenga minimo 6 caracteres\",\r\n        buttons: [\"Aceptar\"],\r\n      });\r\n\r\n      await alert.present();\r\n      return;\r\n    }\r\n    else{\r\n      if (f.llave == 1234567) {\r\n\r\n        this.newadministrador.nombre = f.nombre;\r\n        this.newadministrador.apellido = f.apellido;\r\n        this.newadministrador.correo = f.correo;\r\n        this.newadministrador.contraseña = f.contraseña;\r\n        this.newadministrador.llave = f.llave;\r\n        this.newadministrador.rol = \"Administrador\";\r\n\r\n        const admin = await this.auth.registrar(this.newadministrador.correo, this.newadministrador.contraseña)\r\n\r\n        if (admin) {\r\n          const path = \"Administrador\"\r\n          const Id = admin.user!.uid;\r\n          this.newadministrador.uid = Id;\r\n          this.newadministrador.contraseña = \"\";\r\n\r\n          await this.store.createDoc(this.newadministrador, path, Id);\r\n\r\n          const alert2 = await this.alertController.create({\r\n            header: \"Usuario creado\",\r\n            buttons: [\"INICIO\"],\r\n          });\r\n\r\n          await alert2.present();\r\n          this.router.navigate([\"../login\"]);\r\n        }\r\n        \r\n      } else {\r\n        const alert = await this.alertController.create({\r\n          header: \"Llave de acceso incorrecta\",\r\n          message:\r\n            \"Debe de asegurarse que la llave sea la correcta\",\r\n          buttons: [\"Aceptar\"],\r\n        });\r\n\r\n        await alert.present();\r\n        return;\r\n        \r\n      }\r\n    }\r\n\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"primary\">\r\n    <ion-title></ion-title>\r\n    <ion-button fill=\"clear\" slot=\"start\">\r\n      <ion-back-button color=\"light\"></ion-back-button>\r\n    </ion-button>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n  <ion-card>\r\n    <ion-card-header>\r\n      <ion-card-title>Registro</ion-card-title>\r\n    </ion-card-header>\r\n    <ion-card-content>\r\n      <form [formGroup]=\"formularioregristroad\" (ngSubmit)=\"registrarse()\">\r\n        <ion-item fill=\"solid\">\r\n          <ion-label position=\"floating\">Nombre <ion-text color=\"danger\">*</ion-text></ion-label>\r\n          <ion-input placeholder=\"Ingrese su Nombre\" required formControlName=\"nombre\" type=\"text\"></ion-input>\r\n        </ion-item>\r\n        <ion-item><ion-label>\r\n            <hr class=\"solid\">\r\n          </ion-label></ion-item>\r\n        <ion-item fill=\"solid\">\r\n          <ion-label position=\"floating\">Apellido <ion-text color=\"danger\">*</ion-text></ion-label>\r\n          <ion-input placeholder=\"Ingrese su Apellido\" required formControlName=\"apellido\" type=\"text\"></ion-input>\r\n        </ion-item>\r\n        <ion-item><ion-label>\r\n            <hr class=\"solid\">\r\n          </ion-label></ion-item>\r\n        <ion-item fill=\"solid\">\r\n          <ion-label position=\"floating\">Correo electronico <ion-text color=\"danger\">*</ion-text></ion-label>\r\n          <ion-input placeholder=\"Ingrese su Correo electronico\" required formControlName=\"correo\"\r\n            type=\"text\"></ion-input>\r\n        </ion-item>\r\n        <ion-item><ion-label>\r\n            <hr class=\"solid\">\r\n          </ion-label></ion-item>\r\n        <ion-item fill=\"solid\">\r\n          <ion-label position=\"floating\">Contraseña <ion-text color=\"danger\">*</ion-text></ion-label>\r\n          <ion-input placeholder=\"Ingrese su Contraseña\" required formControlName=\"contraseña\" type=\"password\"\r\n            minlength=6></ion-input>\r\n        </ion-item>\r\n        <ion-item><ion-label>\r\n            <hr class=\"solid\">\r\n          </ion-label></ion-item>\r\n        <ion-item fill=\"solid\">\r\n          <ion-label position=\"floating\">Llave <ion-text color=\"danger\">*</ion-text></ion-label>\r\n          <ion-input placeholder=\"Ingrese su Contraseña\" required formControlName=\"llave\" type=\"password\"\r\n            minlength=6></ion-input>\r\n        </ion-item>\r\n  \r\n        <ion-button block color=\"primary\" type=\"submit\">\r\n          Aceptar\r\n        </ion-button>\r\n      </form>\r\n    </ion-card-content>\r\n  </ion-card>\r\n\r\n</ion-content>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}