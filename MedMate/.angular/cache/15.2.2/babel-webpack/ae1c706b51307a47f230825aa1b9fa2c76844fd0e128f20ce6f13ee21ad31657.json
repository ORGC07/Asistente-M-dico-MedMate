{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/omarr/Documents/GitHub/Asistente-M-dico-MedMate/MedMate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { WebPlugin } from '@capacitor/core';\nexport class LocalNotificationsWeb extends WebPlugin {\n  constructor() {\n    super(...arguments);\n    this.pending = [];\n    this.deliveredNotifications = [];\n    this.hasNotificationSupport = () => {\n      if (!('Notification' in window) || !Notification.requestPermission) {\n        return false;\n      }\n      if (Notification.permission !== 'granted') {\n        // don't test for `new Notification` if permission has already been granted\n        // otherwise this sends a real notification on supported browsers\n        try {\n          new Notification('');\n        } catch (e) {\n          if (e.name == 'TypeError') {\n            return false;\n          }\n        }\n      }\n      return true;\n    };\n  }\n  getDeliveredNotifications() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      const deliveredSchemas = [];\n      for (const notification of _this.deliveredNotifications) {\n        const deliveredSchema = {\n          title: notification.title,\n          id: parseInt(notification.tag),\n          body: notification.body\n        };\n        deliveredSchemas.push(deliveredSchema);\n      }\n      return {\n        notifications: deliveredSchemas\n      };\n    })();\n  }\n  removeDeliveredNotifications(delivered) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      for (const toRemove of delivered.notifications) {\n        const found = _this2.deliveredNotifications.find(n => n.tag === String(toRemove.id));\n        found === null || found === void 0 ? void 0 : found.close();\n        _this2.deliveredNotifications = _this2.deliveredNotifications.filter(() => !found);\n      }\n    })();\n  }\n  removeAllDeliveredNotifications() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      for (const notification of _this3.deliveredNotifications) {\n        notification.close();\n      }\n      _this3.deliveredNotifications = [];\n    })();\n  }\n  createChannel() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      throw _this4.unimplemented('Not implemented on web.');\n    })();\n  }\n  deleteChannel() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      throw _this5.unimplemented('Not implemented on web.');\n    })();\n  }\n  listChannels() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      throw _this6.unimplemented('Not implemented on web.');\n    })();\n  }\n  schedule(options) {\n    var _this7 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this7.hasNotificationSupport()) {\n        throw _this7.unavailable('Notifications not supported in this browser.');\n      }\n      for (const notification of options.notifications) {\n        _this7.sendNotification(notification);\n      }\n      return {\n        notifications: options.notifications.map(notification => ({\n          id: notification.id\n        }))\n      };\n    })();\n  }\n  getPending() {\n    var _this8 = this;\n    return _asyncToGenerator(function* () {\n      return {\n        notifications: _this8.pending\n      };\n    })();\n  }\n  registerActionTypes() {\n    var _this9 = this;\n    return _asyncToGenerator(function* () {\n      throw _this9.unimplemented('Not implemented on web.');\n    })();\n  }\n  cancel(pending) {\n    var _this10 = this;\n    return _asyncToGenerator(function* () {\n      _this10.pending = _this10.pending.filter(notification => !pending.notifications.find(n => n.id === notification.id));\n    })();\n  }\n  areEnabled() {\n    var _this11 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        display\n      } = yield _this11.checkPermissions();\n      return {\n        value: display === 'granted'\n      };\n    })();\n  }\n  requestPermissions() {\n    var _this12 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this12.hasNotificationSupport()) {\n        throw _this12.unavailable('Notifications not supported in this browser.');\n      }\n      const display = _this12.transformNotificationPermission(yield Notification.requestPermission());\n      return {\n        display\n      };\n    })();\n  }\n  checkPermissions() {\n    var _this13 = this;\n    return _asyncToGenerator(function* () {\n      if (!_this13.hasNotificationSupport()) {\n        throw _this13.unavailable('Notifications not supported in this browser.');\n      }\n      const display = _this13.transformNotificationPermission(Notification.permission);\n      return {\n        display\n      };\n    })();\n  }\n  transformNotificationPermission(permission) {\n    switch (permission) {\n      case 'granted':\n        return 'granted';\n      case 'denied':\n        return 'denied';\n      default:\n        return 'prompt';\n    }\n  }\n  sendPending() {\n    var _a;\n    const toRemove = [];\n    const now = new Date().getTime();\n    for (const notification of this.pending) {\n      if (((_a = notification.schedule) === null || _a === void 0 ? void 0 : _a.at) && notification.schedule.at.getTime() <= now) {\n        this.buildNotification(notification);\n        toRemove.push(notification);\n      }\n    }\n    this.pending = this.pending.filter(notification => !toRemove.find(n => n === notification));\n  }\n  sendNotification(notification) {\n    var _a;\n    if ((_a = notification.schedule) === null || _a === void 0 ? void 0 : _a.at) {\n      const diff = notification.schedule.at.getTime() - new Date().getTime();\n      this.pending.push(notification);\n      setTimeout(() => {\n        this.sendPending();\n      }, diff);\n      return;\n    }\n    this.buildNotification(notification);\n  }\n  buildNotification(notification) {\n    const localNotification = new Notification(notification.title, {\n      body: notification.body,\n      tag: String(notification.id)\n    });\n    localNotification.addEventListener('click', this.onClick.bind(this, notification), false);\n    localNotification.addEventListener('show', this.onShow.bind(this, notification), false);\n    localNotification.addEventListener('close', () => {\n      this.deliveredNotifications = this.deliveredNotifications.filter(() => !this);\n    }, false);\n    this.deliveredNotifications.push(localNotification);\n    return localNotification;\n  }\n  onClick(notification) {\n    const data = {\n      actionId: 'tap',\n      notification\n    };\n    this.notifyListeners('localNotificationActionPerformed', data);\n  }\n  onShow(notification) {\n    this.notifyListeners('localNotificationReceived', notification);\n  }\n}","map":{"version":3,"names":["WebPlugin","LocalNotificationsWeb","constructor","arguments","pending","deliveredNotifications","hasNotificationSupport","window","Notification","requestPermission","permission","e","name","getDeliveredNotifications","deliveredSchemas","notification","deliveredSchema","title","id","parseInt","tag","body","push","notifications","removeDeliveredNotifications","delivered","toRemove","found","find","n","String","close","filter","removeAllDeliveredNotifications","createChannel","unimplemented","deleteChannel","listChannels","schedule","options","unavailable","sendNotification","map","getPending","registerActionTypes","cancel","areEnabled","display","checkPermissions","value","requestPermissions","transformNotificationPermission","sendPending","_a","now","Date","getTime","at","buildNotification","diff","setTimeout","localNotification","addEventListener","onClick","bind","onShow","data","actionId","notifyListeners"],"sources":["C:/Users/omarr/Documents/GitHub/Asistente-M-dico-MedMate/MedMate/node_modules/@capacitor/local-notifications/dist/esm/web.js"],"sourcesContent":["import { WebPlugin } from '@capacitor/core';\nexport class LocalNotificationsWeb extends WebPlugin {\n    constructor() {\n        super(...arguments);\n        this.pending = [];\n        this.deliveredNotifications = [];\n        this.hasNotificationSupport = () => {\n            if (!('Notification' in window) || !Notification.requestPermission) {\n                return false;\n            }\n            if (Notification.permission !== 'granted') {\n                // don't test for `new Notification` if permission has already been granted\n                // otherwise this sends a real notification on supported browsers\n                try {\n                    new Notification('');\n                }\n                catch (e) {\n                    if (e.name == 'TypeError') {\n                        return false;\n                    }\n                }\n            }\n            return true;\n        };\n    }\n    async getDeliveredNotifications() {\n        const deliveredSchemas = [];\n        for (const notification of this.deliveredNotifications) {\n            const deliveredSchema = {\n                title: notification.title,\n                id: parseInt(notification.tag),\n                body: notification.body,\n            };\n            deliveredSchemas.push(deliveredSchema);\n        }\n        return {\n            notifications: deliveredSchemas,\n        };\n    }\n    async removeDeliveredNotifications(delivered) {\n        for (const toRemove of delivered.notifications) {\n            const found = this.deliveredNotifications.find(n => n.tag === String(toRemove.id));\n            found === null || found === void 0 ? void 0 : found.close();\n            this.deliveredNotifications = this.deliveredNotifications.filter(() => !found);\n        }\n    }\n    async removeAllDeliveredNotifications() {\n        for (const notification of this.deliveredNotifications) {\n            notification.close();\n        }\n        this.deliveredNotifications = [];\n    }\n    async createChannel() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async deleteChannel() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async listChannels() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async schedule(options) {\n        if (!this.hasNotificationSupport()) {\n            throw this.unavailable('Notifications not supported in this browser.');\n        }\n        for (const notification of options.notifications) {\n            this.sendNotification(notification);\n        }\n        return {\n            notifications: options.notifications.map(notification => ({\n                id: notification.id,\n            })),\n        };\n    }\n    async getPending() {\n        return {\n            notifications: this.pending,\n        };\n    }\n    async registerActionTypes() {\n        throw this.unimplemented('Not implemented on web.');\n    }\n    async cancel(pending) {\n        this.pending = this.pending.filter(notification => !pending.notifications.find(n => n.id === notification.id));\n    }\n    async areEnabled() {\n        const { display } = await this.checkPermissions();\n        return {\n            value: display === 'granted',\n        };\n    }\n    async requestPermissions() {\n        if (!this.hasNotificationSupport()) {\n            throw this.unavailable('Notifications not supported in this browser.');\n        }\n        const display = this.transformNotificationPermission(await Notification.requestPermission());\n        return { display };\n    }\n    async checkPermissions() {\n        if (!this.hasNotificationSupport()) {\n            throw this.unavailable('Notifications not supported in this browser.');\n        }\n        const display = this.transformNotificationPermission(Notification.permission);\n        return { display };\n    }\n    transformNotificationPermission(permission) {\n        switch (permission) {\n            case 'granted':\n                return 'granted';\n            case 'denied':\n                return 'denied';\n            default:\n                return 'prompt';\n        }\n    }\n    sendPending() {\n        var _a;\n        const toRemove = [];\n        const now = new Date().getTime();\n        for (const notification of this.pending) {\n            if (((_a = notification.schedule) === null || _a === void 0 ? void 0 : _a.at) &&\n                notification.schedule.at.getTime() <= now) {\n                this.buildNotification(notification);\n                toRemove.push(notification);\n            }\n        }\n        this.pending = this.pending.filter(notification => !toRemove.find(n => n === notification));\n    }\n    sendNotification(notification) {\n        var _a;\n        if ((_a = notification.schedule) === null || _a === void 0 ? void 0 : _a.at) {\n            const diff = notification.schedule.at.getTime() - new Date().getTime();\n            this.pending.push(notification);\n            setTimeout(() => {\n                this.sendPending();\n            }, diff);\n            return;\n        }\n        this.buildNotification(notification);\n    }\n    buildNotification(notification) {\n        const localNotification = new Notification(notification.title, {\n            body: notification.body,\n            tag: String(notification.id),\n        });\n        localNotification.addEventListener('click', this.onClick.bind(this, notification), false);\n        localNotification.addEventListener('show', this.onShow.bind(this, notification), false);\n        localNotification.addEventListener('close', () => {\n            this.deliveredNotifications = this.deliveredNotifications.filter(() => !this);\n        }, false);\n        this.deliveredNotifications.push(localNotification);\n        return localNotification;\n    }\n    onClick(notification) {\n        const data = {\n            actionId: 'tap',\n            notification,\n        };\n        this.notifyListeners('localNotificationActionPerformed', data);\n    }\n    onShow(notification) {\n        this.notifyListeners('localNotificationReceived', notification);\n    }\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}