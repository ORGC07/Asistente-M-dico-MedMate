{"ast":null,"code":"import _asyncToGenerator from \"C:/Users/samee/OneDrive/Documentos/GitHub/Asistente-M-dico-MedMate/medmate/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { ap as debugAssert, aq as _isIOS, ar as _isAndroid, as as _fail, at as _getRedirectUrl, au as _getProjectConfig, av as _isIOS7Or8, aw as _createError, ax as _assert, ay as AuthEventManager, az as _getInstance, b as browserLocalPersistence, aA as _persistenceKeyName, a as browserSessionPersistence, aB as _getRedirectResult, aC as _overrideRedirectResult, aD as _clearRedirectOutcomes, aE as _castAuth } from './index-e3f1fbba.js';\nexport { A as ActionCodeOperation, ad as ActionCodeURL, H as AuthCredential, D as AuthErrorCodes, aG as AuthImpl, aJ as AuthPopup, I as EmailAuthCredential, M as EmailAuthProvider, N as FacebookAuthProvider, F as FactorId, aK as FetchProvider, T as GithubAuthProvider, Q as GoogleAuthProvider, J as OAuthCredential, U as OAuthProvider, O as OperationType, K as PhoneAuthCredential, P as PhoneAuthProvider, m as PhoneMultiFactorGenerator, o as ProviderId, R as RecaptchaVerifier, aL as SAMLAuthCredential, V as SAMLAuthProvider, S as SignInMethod, W as TwitterAuthProvider, aF as UserImpl, ax as _assert, aE as _castAuth, as as _fail, aI as _generateEventId, aH as _getClientVersion, az as _getInstance, aB as _getRedirectResult, aC as _overrideRedirectResult, aA as _persistenceKeyName, a2 as applyActionCode, t as beforeAuthStateChanged, b as browserLocalPersistence, k as browserPopupRedirectResolver, a as browserSessionPersistence, a3 as checkActionCode, a1 as confirmPasswordReset, G as connectAuthEmulator, a5 as createUserWithEmailAndPassword, B as debugErrorMap, z as deleteUser, aa as fetchSignInMethodsForEmail, al as getAdditionalUserInfo, n as getAuth, ai as getIdToken, aj as getIdTokenResult, an as getMultiFactorResolver, j as getRedirectResult, L as inMemoryPersistence, i as indexedDBLocalPersistence, E as initializeAuth, a8 as isSignInWithEmailLink, Z as linkWithCredential, l as linkWithPhoneNumber, d as linkWithPopup, g as linkWithRedirect, ao as multiFactor, v as onAuthStateChanged, q as onIdTokenChanged, ae as parseActionCodeURL, C as prodErrorMap, _ as reauthenticateWithCredential, r as reauthenticateWithPhoneNumber, e as reauthenticateWithPopup, h as reauthenticateWithRedirect, am as reload, ab as sendEmailVerification, a0 as sendPasswordResetEmail, a7 as sendSignInLinkToEmail, p as setPersistence, X as signInAnonymously, Y as signInWithCredential, $ as signInWithCustomToken, a6 as signInWithEmailAndPassword, a9 as signInWithEmailLink, s as signInWithPhoneNumber, c as signInWithPopup, f as signInWithRedirect, y as signOut, ak as unlink, x as updateCurrentUser, ag as updateEmail, ah as updatePassword, u as updatePhoneNumber, af as updateProfile, w as useDeviceLanguage, ac as verifyBeforeUpdateEmail, a4 as verifyPasswordResetCode } from './index-e3f1fbba.js';\nimport { querystringDecode } from '@firebase/util';\nimport '@firebase/app';\nimport '@firebase/logger';\nimport 'tslib';\nimport '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nfunction _cordovaWindow() {\n  return window;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * How long to wait after the app comes back into focus before concluding that\r\n * the user closed the sign in tab.\r\n */\nconst REDIRECT_TIMEOUT_MS = 2000;\n/**\r\n * Generates the URL for the OAuth handler.\r\n */\nfunction _generateHandlerUrl(_x, _x2, _x3) {\n  return _generateHandlerUrl2.apply(this, arguments);\n}\n/**\r\n * Validates that this app is valid for this project configuration\r\n */\nfunction _generateHandlerUrl2() {\n  _generateHandlerUrl2 = _asyncToGenerator(function* (auth, event, provider) {\n    var _a;\n    // Get the cordova plugins\n    const {\n      BuildInfo\n    } = _cordovaWindow();\n    debugAssert(event.sessionId, 'AuthEvent did not contain a session ID');\n    const sessionDigest = yield computeSha256(event.sessionId);\n    const additionalParams = {};\n    if (_isIOS()) {\n      // iOS app identifier\n      additionalParams['ibi'] = BuildInfo.packageName;\n    } else if (_isAndroid()) {\n      // Android app identifier\n      additionalParams['apn'] = BuildInfo.packageName;\n    } else {\n      _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\n    }\n    // Add the display name if available\n    if (BuildInfo.displayName) {\n      additionalParams['appDisplayName'] = BuildInfo.displayName;\n    }\n    // Attached the hashed session ID\n    additionalParams['sessionId'] = sessionDigest;\n    return _getRedirectUrl(auth, provider, event.type, undefined, (_a = event.eventId) !== null && _a !== void 0 ? _a : undefined, additionalParams);\n  });\n  return _generateHandlerUrl2.apply(this, arguments);\n}\nfunction _validateOrigin(_x4) {\n  return _validateOrigin2.apply(this, arguments);\n}\nfunction _validateOrigin2() {\n  _validateOrigin2 = _asyncToGenerator(function* (auth) {\n    const {\n      BuildInfo\n    } = _cordovaWindow();\n    const request = {};\n    if (_isIOS()) {\n      request.iosBundleId = BuildInfo.packageName;\n    } else if (_isAndroid()) {\n      request.androidPackageName = BuildInfo.packageName;\n    } else {\n      _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\n    }\n    // Will fail automatically if package name is not authorized\n    yield _getProjectConfig(auth, request);\n  });\n  return _validateOrigin2.apply(this, arguments);\n}\nfunction _performRedirect(handlerUrl) {\n  // Get the cordova plugins\n  const {\n    cordova\n  } = _cordovaWindow();\n  return new Promise(resolve => {\n    cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {\n      let iabRef = null;\n      if (browserTabIsAvailable) {\n        cordova.plugins.browsertab.openUrl(handlerUrl);\n      } else {\n        // TODO: Return the inappbrowser ref that's returned from the open call\n        iabRef = cordova.InAppBrowser.open(handlerUrl, _isIOS7Or8() ? '_blank' : '_system', 'location=yes');\n      }\n      resolve(iabRef);\n    });\n  });\n}\n/**\r\n * This function waits for app activity to be seen before resolving. It does\r\n * this by attaching listeners to various dom events. Once the app is determined\r\n * to be visible, this promise resolves. AFTER that resolution, the listeners\r\n * are detached and any browser tabs left open will be closed.\r\n */\nfunction _waitForAppResume(_x5, _x6, _x7) {\n  return _waitForAppResume2.apply(this, arguments);\n}\n/**\r\n * Checks the configuration of the Cordova environment. This has no side effect\r\n * if the configuration is correct; otherwise it throws an error with the\r\n * missing plugin.\r\n */\nfunction _waitForAppResume2() {\n  _waitForAppResume2 = _asyncToGenerator(function* (auth, eventListener, iabRef) {\n    // Get the cordova plugins\n    const {\n      cordova\n    } = _cordovaWindow();\n    let cleanup = () => {};\n    try {\n      yield new Promise((resolve, reject) => {\n        let onCloseTimer = null;\n        // DEFINE ALL THE CALLBACKS =====\n        function authEventSeen() {\n          var _a;\n          // Auth event was detected. Resolve this promise and close the extra\n          // window if it's still open.\n          resolve();\n          const closeBrowserTab = (_a = cordova.plugins.browsertab) === null || _a === void 0 ? void 0 : _a.close;\n          if (typeof closeBrowserTab === 'function') {\n            closeBrowserTab();\n          }\n          // Close inappbrowser emebedded webview in iOS7 and 8 case if still\n          // open.\n          if (typeof (iabRef === null || iabRef === void 0 ? void 0 : iabRef.close) === 'function') {\n            iabRef.close();\n          }\n        }\n        function resumed() {\n          if (onCloseTimer) {\n            // This code already ran; do not rerun.\n            return;\n          }\n          onCloseTimer = window.setTimeout(() => {\n            // Wait two seeconds after resume then reject.\n            reject(_createError(auth, \"redirect-cancelled-by-user\" /* AuthErrorCode.REDIRECT_CANCELLED_BY_USER */));\n          }, REDIRECT_TIMEOUT_MS);\n        }\n        function visibilityChanged() {\n          if ((document === null || document === void 0 ? void 0 : document.visibilityState) === 'visible') {\n            resumed();\n          }\n        }\n        // ATTACH ALL THE LISTENERS =====\n        // Listen for the auth event\n        eventListener.addPassiveListener(authEventSeen);\n        // Listen for resume and visibility events\n        document.addEventListener('resume', resumed, false);\n        if (_isAndroid()) {\n          document.addEventListener('visibilitychange', visibilityChanged, false);\n        }\n        // SETUP THE CLEANUP FUNCTION =====\n        cleanup = () => {\n          eventListener.removePassiveListener(authEventSeen);\n          document.removeEventListener('resume', resumed, false);\n          document.removeEventListener('visibilitychange', visibilityChanged, false);\n          if (onCloseTimer) {\n            window.clearTimeout(onCloseTimer);\n          }\n        };\n      });\n    } finally {\n      cleanup();\n    }\n  });\n  return _waitForAppResume2.apply(this, arguments);\n}\nfunction _checkCordovaConfiguration(auth) {\n  var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\n  const win = _cordovaWindow();\n  // Check all dependencies installed.\n  // https://github.com/nordnet/cordova-universal-links-plugin\n  // Note that cordova-universal-links-plugin has been abandoned.\n  // A fork with latest fixes is available at:\n  // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\n  _assert(typeof ((_a = win === null || win === void 0 ? void 0 : win.universalLinks) === null || _a === void 0 ? void 0 : _a.subscribe) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\n    missingPlugin: 'cordova-universal-links-plugin-fix'\n  });\n  // https://www.npmjs.com/package/cordova-plugin-buildinfo\n  _assert(typeof ((_b = win === null || win === void 0 ? void 0 : win.BuildInfo) === null || _b === void 0 ? void 0 : _b.packageName) !== 'undefined', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\n    missingPlugin: 'cordova-plugin-buildInfo'\n  });\n  // https://github.com/google/cordova-plugin-browsertab\n  _assert(typeof ((_e = (_d = (_c = win === null || win === void 0 ? void 0 : win.cordova) === null || _c === void 0 ? void 0 : _c.plugins) === null || _d === void 0 ? void 0 : _d.browsertab) === null || _e === void 0 ? void 0 : _e.openUrl) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\n    missingPlugin: 'cordova-plugin-browsertab'\n  });\n  _assert(typeof ((_h = (_g = (_f = win === null || win === void 0 ? void 0 : win.cordova) === null || _f === void 0 ? void 0 : _f.plugins) === null || _g === void 0 ? void 0 : _g.browsertab) === null || _h === void 0 ? void 0 : _h.isAvailable) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\n    missingPlugin: 'cordova-plugin-browsertab'\n  });\n  // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\n  _assert(typeof ((_k = (_j = win === null || win === void 0 ? void 0 : win.cordova) === null || _j === void 0 ? void 0 : _j.InAppBrowser) === null || _k === void 0 ? void 0 : _k.open) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\n    missingPlugin: 'cordova-plugin-inappbrowser'\n  });\n}\n/**\r\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\r\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\r\n * protocol).\r\n */\nfunction computeSha256(_x8) {\n  return _computeSha.apply(this, arguments);\n}\nfunction _computeSha() {\n  _computeSha = _asyncToGenerator(function* (sessionId) {\n    const bytes = stringToArrayBuffer(sessionId);\n    // TODO: For IE11 crypto has a different name and this operation comes back\n    //       as an object, not a promise. This is the old proposed standard that\n    //       is used by IE11:\n    // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\n    const buf = yield crypto.subtle.digest('SHA-256', bytes);\n    const arr = Array.from(new Uint8Array(buf));\n    return arr.map(num => num.toString(16).padStart(2, '0')).join('');\n  });\n  return _computeSha.apply(this, arguments);\n}\nfunction stringToArrayBuffer(str) {\n  // This function is only meant to deal with an ASCII charset and makes\n  // certain simplifying assumptions.\n  debugAssert(/[0-9a-zA-Z]+/.test(str), 'Can only convert alpha-numeric strings');\n  if (typeof TextEncoder !== 'undefined') {\n    return new TextEncoder().encode(str);\n  }\n  const buff = new ArrayBuffer(str.length);\n  const view = new Uint8Array(buff);\n  for (let i = 0; i < str.length; i++) {\n    view[i] = str.charCodeAt(i);\n  }\n  return view;\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\nconst SESSION_ID_LENGTH = 20;\n/** Custom AuthEventManager that adds passive listeners to events */\nclass CordovaAuthEventManager extends AuthEventManager {\n  constructor() {\n    super(...arguments);\n    this.passiveListeners = new Set();\n    this.initPromise = new Promise(resolve => {\n      this.resolveInialized = resolve;\n    });\n  }\n  addPassiveListener(cb) {\n    this.passiveListeners.add(cb);\n  }\n  removePassiveListener(cb) {\n    this.passiveListeners.delete(cb);\n  }\n  // In a Cordova environment, this manager can live through multiple redirect\n  // operations\n  resetRedirect() {\n    this.queuedRedirectEvent = null;\n    this.hasHandledPotentialRedirect = false;\n  }\n  /** Override the onEvent method */\n  onEvent(event) {\n    this.resolveInialized();\n    this.passiveListeners.forEach(cb => cb(event));\n    return super.onEvent(event);\n  }\n  initialized() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield _this.initPromise;\n    })();\n  }\n}\n/**\r\n * Generates a (partial) {@link AuthEvent}.\r\n */\nfunction _generateNewEvent(auth, type, eventId = null) {\n  return {\n    type,\n    eventId,\n    urlResponse: null,\n    sessionId: generateSessionId(),\n    postBody: null,\n    tenantId: auth.tenantId,\n    error: _createError(auth, \"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\n  };\n}\n\nfunction _savePartialEvent(auth, event) {\n  return storage()._set(persistenceKey(auth), event);\n}\nfunction _getAndRemoveEvent(_x9) {\n  return _getAndRemoveEvent2.apply(this, arguments);\n}\nfunction _getAndRemoveEvent2() {\n  _getAndRemoveEvent2 = _asyncToGenerator(function* (auth) {\n    const event = yield storage()._get(persistenceKey(auth));\n    if (event) {\n      yield storage()._remove(persistenceKey(auth));\n    }\n    return event;\n  });\n  return _getAndRemoveEvent2.apply(this, arguments);\n}\nfunction _eventFromPartialAndUrl(partialEvent, url) {\n  var _a, _b;\n  // Parse the deep link within the dynamic link URL.\n  const callbackUrl = _getDeepLinkFromCallback(url);\n  // Confirm it is actually a callback URL.\n  // Currently the universal link will be of this format:\n  // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\n  // This is a fake URL but is not intended to take the user anywhere\n  // and just redirect to the app.\n  if (callbackUrl.includes('/__/auth/callback')) {\n    // Check if there is an error in the URL.\n    // This mechanism is also used to pass errors back to the app:\n    // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\n    const params = searchParamsOrEmpty(callbackUrl);\n    // Get the error object corresponding to the stringified error if found.\n    const errorObject = params['firebaseError'] ? parseJsonOrNull(decodeURIComponent(params['firebaseError'])) : null;\n    const code = (_b = (_a = errorObject === null || errorObject === void 0 ? void 0 : errorObject['code']) === null || _a === void 0 ? void 0 : _a.split('auth/')) === null || _b === void 0 ? void 0 : _b[1];\n    const error = code ? _createError(code) : null;\n    if (error) {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        error,\n        urlResponse: null,\n        sessionId: null,\n        postBody: null\n      };\n    } else {\n      return {\n        type: partialEvent.type,\n        eventId: partialEvent.eventId,\n        tenantId: partialEvent.tenantId,\n        sessionId: partialEvent.sessionId,\n        urlResponse: callbackUrl,\n        postBody: null\n      };\n    }\n  }\n  return null;\n}\nfunction generateSessionId() {\n  const chars = [];\n  const allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n  for (let i = 0; i < SESSION_ID_LENGTH; i++) {\n    const idx = Math.floor(Math.random() * allowedChars.length);\n    chars.push(allowedChars.charAt(idx));\n  }\n  return chars.join('');\n}\nfunction storage() {\n  return _getInstance(browserLocalPersistence);\n}\nfunction persistenceKey(auth) {\n  return _persistenceKeyName(\"authEvent\" /* KeyName.AUTH_EVENT */, auth.config.apiKey, auth.name);\n}\nfunction parseJsonOrNull(json) {\n  try {\n    return JSON.parse(json);\n  } catch (e) {\n    return null;\n  }\n}\n// Exported for testing\nfunction _getDeepLinkFromCallback(url) {\n  const params = searchParamsOrEmpty(url);\n  const link = params['link'] ? decodeURIComponent(params['link']) : undefined;\n  // Double link case (automatic redirect)\n  const doubleDeepLink = searchParamsOrEmpty(link)['link'];\n  // iOS custom scheme links.\n  const iOSDeepLink = params['deep_link_id'] ? decodeURIComponent(params['deep_link_id']) : undefined;\n  const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\n  return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\n}\n/**\r\n * Optimistically tries to get search params from a string, or else returns an\r\n * empty search params object.\r\n */\nfunction searchParamsOrEmpty(url) {\n  if (!(url === null || url === void 0 ? void 0 : url.includes('?'))) {\n    return {};\n  }\n  const [_, ...rest] = url.split('?');\n  return querystringDecode(rest.join('?'));\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n/**\r\n * How long to wait for the initial auth event before concluding no\r\n * redirect pending\r\n */\nconst INITIAL_EVENT_TIMEOUT_MS = 500;\nclass CordovaPopupRedirectResolver {\n  constructor() {\n    this._redirectPersistence = browserSessionPersistence;\n    this._shouldInitProactively = true; // This is lightweight for Cordova\n    this.eventManagers = new Map();\n    this.originValidationPromises = {};\n    this._completeRedirectFn = _getRedirectResult;\n    this._overrideRedirectResult = _overrideRedirectResult;\n  }\n  _initialize(auth) {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const key = auth._key();\n      let manager = _this2.eventManagers.get(key);\n      if (!manager) {\n        manager = new CordovaAuthEventManager(auth);\n        _this2.eventManagers.set(key, manager);\n        _this2.attachCallbackListeners(auth, manager);\n      }\n      return manager;\n    })();\n  }\n  _openPopup(auth) {\n    _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\n  }\n\n  _openRedirect(auth, provider, authType, eventId) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      _checkCordovaConfiguration(auth);\n      const manager = yield _this3._initialize(auth);\n      yield manager.initialized();\n      // Reset the persisted redirect states. This does not matter on Web where\n      // the redirect always blows away application state entirely. On Cordova,\n      // the app maintains control flow through the redirect.\n      manager.resetRedirect();\n      _clearRedirectOutcomes();\n      yield _this3._originValidation(auth);\n      const event = _generateNewEvent(auth, authType, eventId);\n      yield _savePartialEvent(auth, event);\n      const url = yield _generateHandlerUrl(auth, event, provider);\n      const iabRef = yield _performRedirect(url);\n      return _waitForAppResume(auth, manager, iabRef);\n    })();\n  }\n  _isIframeWebStorageSupported(_auth, _cb) {\n    throw new Error('Method not implemented.');\n  }\n  _originValidation(auth) {\n    const key = auth._key();\n    if (!this.originValidationPromises[key]) {\n      this.originValidationPromises[key] = _validateOrigin(auth);\n    }\n    return this.originValidationPromises[key];\n  }\n  attachCallbackListeners(auth, manager) {\n    // Get the global plugins\n    const {\n      universalLinks,\n      handleOpenURL,\n      BuildInfo\n    } = _cordovaWindow();\n    const noEventTimeout = setTimeout( /*#__PURE__*/_asyncToGenerator(function* () {\n      // We didn't see that initial event. Clear any pending object and\n      // dispatch no event\n      yield _getAndRemoveEvent(auth);\n      manager.onEvent(generateNoEvent());\n    }), INITIAL_EVENT_TIMEOUT_MS);\n    const universalLinksCb = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator(function* (eventData) {\n        // We have an event so we can clear the no event timeout\n        clearTimeout(noEventTimeout);\n        const partialEvent = yield _getAndRemoveEvent(auth);\n        let finalEvent = null;\n        if (partialEvent && (eventData === null || eventData === void 0 ? void 0 : eventData['url'])) {\n          finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\n        }\n        // If finalEvent is never filled, trigger with no event\n        manager.onEvent(finalEvent || generateNoEvent());\n      });\n      return function universalLinksCb(_x10) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n    // Universal links subscriber doesn't exist for iOS, so we need to check\n    if (typeof universalLinks !== 'undefined' && typeof universalLinks.subscribe === 'function') {\n      universalLinks.subscribe(null, universalLinksCb);\n    }\n    // iOS 7 or 8 custom URL schemes.\n    // This is also the current default behavior for iOS 9+.\n    // For this to work, cordova-plugin-customurlscheme needs to be installed.\n    // https://github.com/EddyVerbruggen/Custom-URL-scheme\n    // Do not overwrite the existing developer's URL handler.\n    const existingHandleOpenURL = handleOpenURL;\n    const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;\n    _cordovaWindow().handleOpenURL = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator(function* (url) {\n        if (url.toLowerCase().startsWith(packagePrefix)) {\n          // We want this intentionally to float\n          // eslint-disable-next-line @typescript-eslint/no-floating-promises\n          universalLinksCb({\n            url\n          });\n        }\n        // Call the developer's handler if it is present.\n        if (typeof existingHandleOpenURL === 'function') {\n          try {\n            existingHandleOpenURL(url);\n          } catch (e) {\n            // This is a developer error. Don't stop the flow of the SDK.\n            console.error(e);\n          }\n        }\n      });\n      return function (_x11) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n  }\n}\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\r\n * based applications.\r\n *\r\n * @public\r\n */\nconst cordovaPopupRedirectResolver = CordovaPopupRedirectResolver;\nfunction generateNoEvent() {\n  return {\n    type: \"unknown\" /* AuthEventType.UNKNOWN */,\n    eventId: null,\n    sessionId: null,\n    urlResponse: null,\n    postBody: null,\n    tenantId: null,\n    error: _createError(\"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\n  };\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\n// of autogenerated documentation pages to reduce accidental misuse.\nfunction addFrameworkForLogging(auth, framework) {\n  _castAuth(auth)._logFramework(framework);\n}\nexport { addFrameworkForLogging, cordovaPopupRedirectResolver };","map":{"version":3,"names":["ap","debugAssert","aq","_isIOS","ar","_isAndroid","as","_fail","at","_getRedirectUrl","au","_getProjectConfig","av","_isIOS7Or8","aw","_createError","ax","_assert","ay","AuthEventManager","az","_getInstance","b","browserLocalPersistence","aA","_persistenceKeyName","a","browserSessionPersistence","aB","_getRedirectResult","aC","_overrideRedirectResult","aD","_clearRedirectOutcomes","aE","_castAuth","A","ActionCodeOperation","ad","ActionCodeURL","H","AuthCredential","D","AuthErrorCodes","aG","AuthImpl","aJ","AuthPopup","I","EmailAuthCredential","M","EmailAuthProvider","N","FacebookAuthProvider","F","FactorId","aK","FetchProvider","T","GithubAuthProvider","Q","GoogleAuthProvider","J","OAuthCredential","U","OAuthProvider","O","OperationType","K","PhoneAuthCredential","P","PhoneAuthProvider","m","PhoneMultiFactorGenerator","o","ProviderId","R","RecaptchaVerifier","aL","SAMLAuthCredential","V","SAMLAuthProvider","S","SignInMethod","W","TwitterAuthProvider","aF","UserImpl","aI","_generateEventId","aH","_getClientVersion","a2","applyActionCode","t","beforeAuthStateChanged","k","browserPopupRedirectResolver","a3","checkActionCode","a1","confirmPasswordReset","G","connectAuthEmulator","a5","createUserWithEmailAndPassword","B","debugErrorMap","z","deleteUser","aa","fetchSignInMethodsForEmail","al","getAdditionalUserInfo","n","getAuth","ai","getIdToken","aj","getIdTokenResult","an","getMultiFactorResolver","j","getRedirectResult","L","inMemoryPersistence","i","indexedDBLocalPersistence","E","initializeAuth","a8","isSignInWithEmailLink","Z","linkWithCredential","l","linkWithPhoneNumber","d","linkWithPopup","g","linkWithRedirect","ao","multiFactor","v","onAuthStateChanged","q","onIdTokenChanged","ae","parseActionCodeURL","C","prodErrorMap","_","reauthenticateWithCredential","r","reauthenticateWithPhoneNumber","e","reauthenticateWithPopup","h","reauthenticateWithRedirect","am","reload","ab","sendEmailVerification","a0","sendPasswordResetEmail","a7","sendSignInLinkToEmail","p","setPersistence","X","signInAnonymously","Y","signInWithCredential","$","signInWithCustomToken","a6","signInWithEmailAndPassword","a9","signInWithEmailLink","s","signInWithPhoneNumber","c","signInWithPopup","f","signInWithRedirect","y","signOut","ak","unlink","x","updateCurrentUser","ag","updateEmail","ah","updatePassword","u","updatePhoneNumber","af","updateProfile","w","useDeviceLanguage","ac","verifyBeforeUpdateEmail","a4","verifyPasswordResetCode","querystringDecode","_cordovaWindow","window","REDIRECT_TIMEOUT_MS","_generateHandlerUrl","auth","event","provider","_a","BuildInfo","sessionId","sessionDigest","computeSha256","additionalParams","packageName","displayName","type","undefined","eventId","_validateOrigin","request","iosBundleId","androidPackageName","_performRedirect","handlerUrl","cordova","Promise","resolve","plugins","browsertab","isAvailable","browserTabIsAvailable","iabRef","openUrl","InAppBrowser","open","_waitForAppResume","eventListener","cleanup","reject","onCloseTimer","authEventSeen","closeBrowserTab","close","resumed","setTimeout","visibilityChanged","document","visibilityState","addPassiveListener","addEventListener","removePassiveListener","removeEventListener","clearTimeout","_checkCordovaConfiguration","_b","_c","_d","_e","_f","_g","_h","_j","_k","win","universalLinks","subscribe","missingPlugin","bytes","stringToArrayBuffer","buf","crypto","subtle","digest","arr","Array","from","Uint8Array","map","num","toString","padStart","join","str","test","TextEncoder","encode","buff","ArrayBuffer","length","view","charCodeAt","SESSION_ID_LENGTH","CordovaAuthEventManager","constructor","arguments","passiveListeners","Set","initPromise","resolveInialized","cb","add","delete","resetRedirect","queuedRedirectEvent","hasHandledPotentialRedirect","onEvent","forEach","initialized","_generateNewEvent","urlResponse","generateSessionId","postBody","tenantId","error","_savePartialEvent","storage","_set","persistenceKey","_getAndRemoveEvent","_get","_remove","_eventFromPartialAndUrl","partialEvent","url","callbackUrl","_getDeepLinkFromCallback","includes","params","searchParamsOrEmpty","errorObject","parseJsonOrNull","decodeURIComponent","code","split","chars","allowedChars","idx","Math","floor","random","push","charAt","config","apiKey","name","json","JSON","parse","link","doubleDeepLink","iOSDeepLink","iOSDoubleDeepLink","rest","INITIAL_EVENT_TIMEOUT_MS","CordovaPopupRedirectResolver","_redirectPersistence","_shouldInitProactively","eventManagers","Map","originValidationPromises","_completeRedirectFn","_initialize","key","_key","manager","get","set","attachCallbackListeners","_openPopup","_openRedirect","authType","_originValidation","_isIframeWebStorageSupported","_auth","_cb","Error","handleOpenURL","noEventTimeout","generateNoEvent","universalLinksCb","eventData","finalEvent","existingHandleOpenURL","packagePrefix","toLowerCase","startsWith","console","cordovaPopupRedirectResolver","addFrameworkForLogging","framework","_logFramework"],"sources":["C:/Users/samee/OneDrive/Documentos/GitHub/Asistente-M-dico-MedMate/medmate/node_modules/@firebase/auth/dist/esm2017/internal.js"],"sourcesContent":["import { ap as debugAssert, aq as _isIOS, ar as _isAndroid, as as _fail, at as _getRedirectUrl, au as _getProjectConfig, av as _isIOS7Or8, aw as _createError, ax as _assert, ay as AuthEventManager, az as _getInstance, b as browserLocalPersistence, aA as _persistenceKeyName, a as browserSessionPersistence, aB as _getRedirectResult, aC as _overrideRedirectResult, aD as _clearRedirectOutcomes, aE as _castAuth } from './index-e3f1fbba.js';\nexport { A as ActionCodeOperation, ad as ActionCodeURL, H as AuthCredential, D as AuthErrorCodes, aG as AuthImpl, aJ as AuthPopup, I as EmailAuthCredential, M as EmailAuthProvider, N as FacebookAuthProvider, F as FactorId, aK as FetchProvider, T as GithubAuthProvider, Q as GoogleAuthProvider, J as OAuthCredential, U as OAuthProvider, O as OperationType, K as PhoneAuthCredential, P as PhoneAuthProvider, m as PhoneMultiFactorGenerator, o as ProviderId, R as RecaptchaVerifier, aL as SAMLAuthCredential, V as SAMLAuthProvider, S as SignInMethod, W as TwitterAuthProvider, aF as UserImpl, ax as _assert, aE as _castAuth, as as _fail, aI as _generateEventId, aH as _getClientVersion, az as _getInstance, aB as _getRedirectResult, aC as _overrideRedirectResult, aA as _persistenceKeyName, a2 as applyActionCode, t as beforeAuthStateChanged, b as browserLocalPersistence, k as browserPopupRedirectResolver, a as browserSessionPersistence, a3 as checkActionCode, a1 as confirmPasswordReset, G as connectAuthEmulator, a5 as createUserWithEmailAndPassword, B as debugErrorMap, z as deleteUser, aa as fetchSignInMethodsForEmail, al as getAdditionalUserInfo, n as getAuth, ai as getIdToken, aj as getIdTokenResult, an as getMultiFactorResolver, j as getRedirectResult, L as inMemoryPersistence, i as indexedDBLocalPersistence, E as initializeAuth, a8 as isSignInWithEmailLink, Z as linkWithCredential, l as linkWithPhoneNumber, d as linkWithPopup, g as linkWithRedirect, ao as multiFactor, v as onAuthStateChanged, q as onIdTokenChanged, ae as parseActionCodeURL, C as prodErrorMap, _ as reauthenticateWithCredential, r as reauthenticateWithPhoneNumber, e as reauthenticateWithPopup, h as reauthenticateWithRedirect, am as reload, ab as sendEmailVerification, a0 as sendPasswordResetEmail, a7 as sendSignInLinkToEmail, p as setPersistence, X as signInAnonymously, Y as signInWithCredential, $ as signInWithCustomToken, a6 as signInWithEmailAndPassword, a9 as signInWithEmailLink, s as signInWithPhoneNumber, c as signInWithPopup, f as signInWithRedirect, y as signOut, ak as unlink, x as updateCurrentUser, ag as updateEmail, ah as updatePassword, u as updatePhoneNumber, af as updateProfile, w as useDeviceLanguage, ac as verifyBeforeUpdateEmail, a4 as verifyPasswordResetCode } from './index-e3f1fbba.js';\nimport { querystringDecode } from '@firebase/util';\nimport '@firebase/app';\nimport '@firebase/logger';\nimport 'tslib';\nimport '@firebase/component';\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nfunction _cordovaWindow() {\r\n    return window;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait after the app comes back into focus before concluding that\r\n * the user closed the sign in tab.\r\n */\r\nconst REDIRECT_TIMEOUT_MS = 2000;\r\n/**\r\n * Generates the URL for the OAuth handler.\r\n */\r\nasync function _generateHandlerUrl(auth, event, provider) {\r\n    var _a;\r\n    // Get the cordova plugins\r\n    const { BuildInfo } = _cordovaWindow();\r\n    debugAssert(event.sessionId, 'AuthEvent did not contain a session ID');\r\n    const sessionDigest = await computeSha256(event.sessionId);\r\n    const additionalParams = {};\r\n    if (_isIOS()) {\r\n        // iOS app identifier\r\n        additionalParams['ibi'] = BuildInfo.packageName;\r\n    }\r\n    else if (_isAndroid()) {\r\n        // Android app identifier\r\n        additionalParams['apn'] = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Add the display name if available\r\n    if (BuildInfo.displayName) {\r\n        additionalParams['appDisplayName'] = BuildInfo.displayName;\r\n    }\r\n    // Attached the hashed session ID\r\n    additionalParams['sessionId'] = sessionDigest;\r\n    return _getRedirectUrl(auth, provider, event.type, undefined, (_a = event.eventId) !== null && _a !== void 0 ? _a : undefined, additionalParams);\r\n}\r\n/**\r\n * Validates that this app is valid for this project configuration\r\n */\r\nasync function _validateOrigin(auth) {\r\n    const { BuildInfo } = _cordovaWindow();\r\n    const request = {};\r\n    if (_isIOS()) {\r\n        request.iosBundleId = BuildInfo.packageName;\r\n    }\r\n    else if (_isAndroid()) {\r\n        request.androidPackageName = BuildInfo.packageName;\r\n    }\r\n    else {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    // Will fail automatically if package name is not authorized\r\n    await _getProjectConfig(auth, request);\r\n}\r\nfunction _performRedirect(handlerUrl) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    return new Promise(resolve => {\r\n        cordova.plugins.browsertab.isAvailable(browserTabIsAvailable => {\r\n            let iabRef = null;\r\n            if (browserTabIsAvailable) {\r\n                cordova.plugins.browsertab.openUrl(handlerUrl);\r\n            }\r\n            else {\r\n                // TODO: Return the inappbrowser ref that's returned from the open call\r\n                iabRef = cordova.InAppBrowser.open(handlerUrl, _isIOS7Or8() ? '_blank' : '_system', 'location=yes');\r\n            }\r\n            resolve(iabRef);\r\n        });\r\n    });\r\n}\r\n/**\r\n * This function waits for app activity to be seen before resolving. It does\r\n * this by attaching listeners to various dom events. Once the app is determined\r\n * to be visible, this promise resolves. AFTER that resolution, the listeners\r\n * are detached and any browser tabs left open will be closed.\r\n */\r\nasync function _waitForAppResume(auth, eventListener, iabRef) {\r\n    // Get the cordova plugins\r\n    const { cordova } = _cordovaWindow();\r\n    let cleanup = () => { };\r\n    try {\r\n        await new Promise((resolve, reject) => {\r\n            let onCloseTimer = null;\r\n            // DEFINE ALL THE CALLBACKS =====\r\n            function authEventSeen() {\r\n                var _a;\r\n                // Auth event was detected. Resolve this promise and close the extra\r\n                // window if it's still open.\r\n                resolve();\r\n                const closeBrowserTab = (_a = cordova.plugins.browsertab) === null || _a === void 0 ? void 0 : _a.close;\r\n                if (typeof closeBrowserTab === 'function') {\r\n                    closeBrowserTab();\r\n                }\r\n                // Close inappbrowser emebedded webview in iOS7 and 8 case if still\r\n                // open.\r\n                if (typeof (iabRef === null || iabRef === void 0 ? void 0 : iabRef.close) === 'function') {\r\n                    iabRef.close();\r\n                }\r\n            }\r\n            function resumed() {\r\n                if (onCloseTimer) {\r\n                    // This code already ran; do not rerun.\r\n                    return;\r\n                }\r\n                onCloseTimer = window.setTimeout(() => {\r\n                    // Wait two seeconds after resume then reject.\r\n                    reject(_createError(auth, \"redirect-cancelled-by-user\" /* AuthErrorCode.REDIRECT_CANCELLED_BY_USER */));\r\n                }, REDIRECT_TIMEOUT_MS);\r\n            }\r\n            function visibilityChanged() {\r\n                if ((document === null || document === void 0 ? void 0 : document.visibilityState) === 'visible') {\r\n                    resumed();\r\n                }\r\n            }\r\n            // ATTACH ALL THE LISTENERS =====\r\n            // Listen for the auth event\r\n            eventListener.addPassiveListener(authEventSeen);\r\n            // Listen for resume and visibility events\r\n            document.addEventListener('resume', resumed, false);\r\n            if (_isAndroid()) {\r\n                document.addEventListener('visibilitychange', visibilityChanged, false);\r\n            }\r\n            // SETUP THE CLEANUP FUNCTION =====\r\n            cleanup = () => {\r\n                eventListener.removePassiveListener(authEventSeen);\r\n                document.removeEventListener('resume', resumed, false);\r\n                document.removeEventListener('visibilitychange', visibilityChanged, false);\r\n                if (onCloseTimer) {\r\n                    window.clearTimeout(onCloseTimer);\r\n                }\r\n            };\r\n        });\r\n    }\r\n    finally {\r\n        cleanup();\r\n    }\r\n}\r\n/**\r\n * Checks the configuration of the Cordova environment. This has no side effect\r\n * if the configuration is correct; otherwise it throws an error with the\r\n * missing plugin.\r\n */\r\nfunction _checkCordovaConfiguration(auth) {\r\n    var _a, _b, _c, _d, _e, _f, _g, _h, _j, _k;\r\n    const win = _cordovaWindow();\r\n    // Check all dependencies installed.\r\n    // https://github.com/nordnet/cordova-universal-links-plugin\r\n    // Note that cordova-universal-links-plugin has been abandoned.\r\n    // A fork with latest fixes is available at:\r\n    // https://www.npmjs.com/package/cordova-universal-links-plugin-fix\r\n    _assert(typeof ((_a = win === null || win === void 0 ? void 0 : win.universalLinks) === null || _a === void 0 ? void 0 : _a.subscribe) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-universal-links-plugin-fix'\r\n    });\r\n    // https://www.npmjs.com/package/cordova-plugin-buildinfo\r\n    _assert(typeof ((_b = win === null || win === void 0 ? void 0 : win.BuildInfo) === null || _b === void 0 ? void 0 : _b.packageName) !== 'undefined', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-buildInfo'\r\n    });\r\n    // https://github.com/google/cordova-plugin-browsertab\r\n    _assert(typeof ((_e = (_d = (_c = win === null || win === void 0 ? void 0 : win.cordova) === null || _c === void 0 ? void 0 : _c.plugins) === null || _d === void 0 ? void 0 : _d.browsertab) === null || _e === void 0 ? void 0 : _e.openUrl) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    _assert(typeof ((_h = (_g = (_f = win === null || win === void 0 ? void 0 : win.cordova) === null || _f === void 0 ? void 0 : _f.plugins) === null || _g === void 0 ? void 0 : _g.browsertab) === null || _h === void 0 ? void 0 : _h.isAvailable) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-browsertab'\r\n    });\r\n    // https://cordova.apache.org/docs/en/latest/reference/cordova-plugin-inappbrowser/\r\n    _assert(typeof ((_k = (_j = win === null || win === void 0 ? void 0 : win.cordova) === null || _j === void 0 ? void 0 : _j.InAppBrowser) === null || _k === void 0 ? void 0 : _k.open) === 'function', auth, \"invalid-cordova-configuration\" /* AuthErrorCode.INVALID_CORDOVA_CONFIGURATION */, {\r\n        missingPlugin: 'cordova-plugin-inappbrowser'\r\n    });\r\n}\r\n/**\r\n * Computes the SHA-256 of a session ID. The SubtleCrypto interface is only\r\n * available in \"secure\" contexts, which covers Cordova (which is served on a file\r\n * protocol).\r\n */\r\nasync function computeSha256(sessionId) {\r\n    const bytes = stringToArrayBuffer(sessionId);\r\n    // TODO: For IE11 crypto has a different name and this operation comes back\r\n    //       as an object, not a promise. This is the old proposed standard that\r\n    //       is used by IE11:\r\n    // https://www.w3.org/TR/2013/WD-WebCryptoAPI-20130108/#cryptooperation-interface\r\n    const buf = await crypto.subtle.digest('SHA-256', bytes);\r\n    const arr = Array.from(new Uint8Array(buf));\r\n    return arr.map(num => num.toString(16).padStart(2, '0')).join('');\r\n}\r\nfunction stringToArrayBuffer(str) {\r\n    // This function is only meant to deal with an ASCII charset and makes\r\n    // certain simplifying assumptions.\r\n    debugAssert(/[0-9a-zA-Z]+/.test(str), 'Can only convert alpha-numeric strings');\r\n    if (typeof TextEncoder !== 'undefined') {\r\n        return new TextEncoder().encode(str);\r\n    }\r\n    const buff = new ArrayBuffer(str.length);\r\n    const view = new Uint8Array(buff);\r\n    for (let i = 0; i < str.length; i++) {\r\n        view[i] = str.charCodeAt(i);\r\n    }\r\n    return view;\r\n}\n\n/**\r\n * @license\r\n * Copyright 2020 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\nconst SESSION_ID_LENGTH = 20;\r\n/** Custom AuthEventManager that adds passive listeners to events */\r\nclass CordovaAuthEventManager extends AuthEventManager {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.passiveListeners = new Set();\r\n        this.initPromise = new Promise(resolve => {\r\n            this.resolveInialized = resolve;\r\n        });\r\n    }\r\n    addPassiveListener(cb) {\r\n        this.passiveListeners.add(cb);\r\n    }\r\n    removePassiveListener(cb) {\r\n        this.passiveListeners.delete(cb);\r\n    }\r\n    // In a Cordova environment, this manager can live through multiple redirect\r\n    // operations\r\n    resetRedirect() {\r\n        this.queuedRedirectEvent = null;\r\n        this.hasHandledPotentialRedirect = false;\r\n    }\r\n    /** Override the onEvent method */\r\n    onEvent(event) {\r\n        this.resolveInialized();\r\n        this.passiveListeners.forEach(cb => cb(event));\r\n        return super.onEvent(event);\r\n    }\r\n    async initialized() {\r\n        await this.initPromise;\r\n    }\r\n}\r\n/**\r\n * Generates a (partial) {@link AuthEvent}.\r\n */\r\nfunction _generateNewEvent(auth, type, eventId = null) {\r\n    return {\r\n        type,\r\n        eventId,\r\n        urlResponse: null,\r\n        sessionId: generateSessionId(),\r\n        postBody: null,\r\n        tenantId: auth.tenantId,\r\n        error: _createError(auth, \"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\r\n    };\r\n}\r\nfunction _savePartialEvent(auth, event) {\r\n    return storage()._set(persistenceKey(auth), event);\r\n}\r\nasync function _getAndRemoveEvent(auth) {\r\n    const event = (await storage()._get(persistenceKey(auth)));\r\n    if (event) {\r\n        await storage()._remove(persistenceKey(auth));\r\n    }\r\n    return event;\r\n}\r\nfunction _eventFromPartialAndUrl(partialEvent, url) {\r\n    var _a, _b;\r\n    // Parse the deep link within the dynamic link URL.\r\n    const callbackUrl = _getDeepLinkFromCallback(url);\r\n    // Confirm it is actually a callback URL.\r\n    // Currently the universal link will be of this format:\r\n    // https://<AUTH_DOMAIN>/__/auth/callback<OAUTH_RESPONSE>\r\n    // This is a fake URL but is not intended to take the user anywhere\r\n    // and just redirect to the app.\r\n    if (callbackUrl.includes('/__/auth/callback')) {\r\n        // Check if there is an error in the URL.\r\n        // This mechanism is also used to pass errors back to the app:\r\n        // https://<AUTH_DOMAIN>/__/auth/callback?firebaseError=<STRINGIFIED_ERROR>\r\n        const params = searchParamsOrEmpty(callbackUrl);\r\n        // Get the error object corresponding to the stringified error if found.\r\n        const errorObject = params['firebaseError']\r\n            ? parseJsonOrNull(decodeURIComponent(params['firebaseError']))\r\n            : null;\r\n        const code = (_b = (_a = errorObject === null || errorObject === void 0 ? void 0 : errorObject['code']) === null || _a === void 0 ? void 0 : _a.split('auth/')) === null || _b === void 0 ? void 0 : _b[1];\r\n        const error = code ? _createError(code) : null;\r\n        if (error) {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                error,\r\n                urlResponse: null,\r\n                sessionId: null,\r\n                postBody: null\r\n            };\r\n        }\r\n        else {\r\n            return {\r\n                type: partialEvent.type,\r\n                eventId: partialEvent.eventId,\r\n                tenantId: partialEvent.tenantId,\r\n                sessionId: partialEvent.sessionId,\r\n                urlResponse: callbackUrl,\r\n                postBody: null\r\n            };\r\n        }\r\n    }\r\n    return null;\r\n}\r\nfunction generateSessionId() {\r\n    const chars = [];\r\n    const allowedChars = '1234567890abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\r\n    for (let i = 0; i < SESSION_ID_LENGTH; i++) {\r\n        const idx = Math.floor(Math.random() * allowedChars.length);\r\n        chars.push(allowedChars.charAt(idx));\r\n    }\r\n    return chars.join('');\r\n}\r\nfunction storage() {\r\n    return _getInstance(browserLocalPersistence);\r\n}\r\nfunction persistenceKey(auth) {\r\n    return _persistenceKeyName(\"authEvent\" /* KeyName.AUTH_EVENT */, auth.config.apiKey, auth.name);\r\n}\r\nfunction parseJsonOrNull(json) {\r\n    try {\r\n        return JSON.parse(json);\r\n    }\r\n    catch (e) {\r\n        return null;\r\n    }\r\n}\r\n// Exported for testing\r\nfunction _getDeepLinkFromCallback(url) {\r\n    const params = searchParamsOrEmpty(url);\r\n    const link = params['link'] ? decodeURIComponent(params['link']) : undefined;\r\n    // Double link case (automatic redirect)\r\n    const doubleDeepLink = searchParamsOrEmpty(link)['link'];\r\n    // iOS custom scheme links.\r\n    const iOSDeepLink = params['deep_link_id']\r\n        ? decodeURIComponent(params['deep_link_id'])\r\n        : undefined;\r\n    const iOSDoubleDeepLink = searchParamsOrEmpty(iOSDeepLink)['link'];\r\n    return iOSDoubleDeepLink || iOSDeepLink || doubleDeepLink || link || url;\r\n}\r\n/**\r\n * Optimistically tries to get search params from a string, or else returns an\r\n * empty search params object.\r\n */\r\nfunction searchParamsOrEmpty(url) {\r\n    if (!(url === null || url === void 0 ? void 0 : url.includes('?'))) {\r\n        return {};\r\n    }\r\n    const [_, ...rest] = url.split('?');\r\n    return querystringDecode(rest.join('?'));\r\n}\n\n/**\r\n * @license\r\n * Copyright 2021 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n/**\r\n * How long to wait for the initial auth event before concluding no\r\n * redirect pending\r\n */\r\nconst INITIAL_EVENT_TIMEOUT_MS = 500;\r\nclass CordovaPopupRedirectResolver {\r\n    constructor() {\r\n        this._redirectPersistence = browserSessionPersistence;\r\n        this._shouldInitProactively = true; // This is lightweight for Cordova\r\n        this.eventManagers = new Map();\r\n        this.originValidationPromises = {};\r\n        this._completeRedirectFn = _getRedirectResult;\r\n        this._overrideRedirectResult = _overrideRedirectResult;\r\n    }\r\n    async _initialize(auth) {\r\n        const key = auth._key();\r\n        let manager = this.eventManagers.get(key);\r\n        if (!manager) {\r\n            manager = new CordovaAuthEventManager(auth);\r\n            this.eventManagers.set(key, manager);\r\n            this.attachCallbackListeners(auth, manager);\r\n        }\r\n        return manager;\r\n    }\r\n    _openPopup(auth) {\r\n        _fail(auth, \"operation-not-supported-in-this-environment\" /* AuthErrorCode.OPERATION_NOT_SUPPORTED */);\r\n    }\r\n    async _openRedirect(auth, provider, authType, eventId) {\r\n        _checkCordovaConfiguration(auth);\r\n        const manager = await this._initialize(auth);\r\n        await manager.initialized();\r\n        // Reset the persisted redirect states. This does not matter on Web where\r\n        // the redirect always blows away application state entirely. On Cordova,\r\n        // the app maintains control flow through the redirect.\r\n        manager.resetRedirect();\r\n        _clearRedirectOutcomes();\r\n        await this._originValidation(auth);\r\n        const event = _generateNewEvent(auth, authType, eventId);\r\n        await _savePartialEvent(auth, event);\r\n        const url = await _generateHandlerUrl(auth, event, provider);\r\n        const iabRef = await _performRedirect(url);\r\n        return _waitForAppResume(auth, manager, iabRef);\r\n    }\r\n    _isIframeWebStorageSupported(_auth, _cb) {\r\n        throw new Error('Method not implemented.');\r\n    }\r\n    _originValidation(auth) {\r\n        const key = auth._key();\r\n        if (!this.originValidationPromises[key]) {\r\n            this.originValidationPromises[key] = _validateOrigin(auth);\r\n        }\r\n        return this.originValidationPromises[key];\r\n    }\r\n    attachCallbackListeners(auth, manager) {\r\n        // Get the global plugins\r\n        const { universalLinks, handleOpenURL, BuildInfo } = _cordovaWindow();\r\n        const noEventTimeout = setTimeout(async () => {\r\n            // We didn't see that initial event. Clear any pending object and\r\n            // dispatch no event\r\n            await _getAndRemoveEvent(auth);\r\n            manager.onEvent(generateNoEvent());\r\n        }, INITIAL_EVENT_TIMEOUT_MS);\r\n        const universalLinksCb = async (eventData) => {\r\n            // We have an event so we can clear the no event timeout\r\n            clearTimeout(noEventTimeout);\r\n            const partialEvent = await _getAndRemoveEvent(auth);\r\n            let finalEvent = null;\r\n            if (partialEvent && (eventData === null || eventData === void 0 ? void 0 : eventData['url'])) {\r\n                finalEvent = _eventFromPartialAndUrl(partialEvent, eventData['url']);\r\n            }\r\n            // If finalEvent is never filled, trigger with no event\r\n            manager.onEvent(finalEvent || generateNoEvent());\r\n        };\r\n        // Universal links subscriber doesn't exist for iOS, so we need to check\r\n        if (typeof universalLinks !== 'undefined' &&\r\n            typeof universalLinks.subscribe === 'function') {\r\n            universalLinks.subscribe(null, universalLinksCb);\r\n        }\r\n        // iOS 7 or 8 custom URL schemes.\r\n        // This is also the current default behavior for iOS 9+.\r\n        // For this to work, cordova-plugin-customurlscheme needs to be installed.\r\n        // https://github.com/EddyVerbruggen/Custom-URL-scheme\r\n        // Do not overwrite the existing developer's URL handler.\r\n        const existingHandleOpenURL = handleOpenURL;\r\n        const packagePrefix = `${BuildInfo.packageName.toLowerCase()}://`;\r\n        _cordovaWindow().handleOpenURL = async (url) => {\r\n            if (url.toLowerCase().startsWith(packagePrefix)) {\r\n                // We want this intentionally to float\r\n                // eslint-disable-next-line @typescript-eslint/no-floating-promises\r\n                universalLinksCb({ url });\r\n            }\r\n            // Call the developer's handler if it is present.\r\n            if (typeof existingHandleOpenURL === 'function') {\r\n                try {\r\n                    existingHandleOpenURL(url);\r\n                }\r\n                catch (e) {\r\n                    // This is a developer error. Don't stop the flow of the SDK.\r\n                    console.error(e);\r\n                }\r\n            }\r\n        };\r\n    }\r\n}\r\n/**\r\n * An implementation of {@link PopupRedirectResolver} suitable for Cordova\r\n * based applications.\r\n *\r\n * @public\r\n */\r\nconst cordovaPopupRedirectResolver = CordovaPopupRedirectResolver;\r\nfunction generateNoEvent() {\r\n    return {\r\n        type: \"unknown\" /* AuthEventType.UNKNOWN */,\r\n        eventId: null,\r\n        sessionId: null,\r\n        urlResponse: null,\r\n        postBody: null,\r\n        tenantId: null,\r\n        error: _createError(\"no-auth-event\" /* AuthErrorCode.NO_AUTH_EVENT */)\r\n    };\r\n}\n\n/**\r\n * @license\r\n * Copyright 2017 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *   http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n// This function should only be called by frameworks (e.g. FirebaseUI-web) to log their usage.\r\n// It is not intended for direct use by developer apps. NO jsdoc here to intentionally leave it out\r\n// of autogenerated documentation pages to reduce accidental misuse.\r\nfunction addFrameworkForLogging(auth, framework) {\r\n    _castAuth(auth)._logFramework(framework);\r\n}\n\nexport { addFrameworkForLogging, cordovaPopupRedirectResolver };\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}