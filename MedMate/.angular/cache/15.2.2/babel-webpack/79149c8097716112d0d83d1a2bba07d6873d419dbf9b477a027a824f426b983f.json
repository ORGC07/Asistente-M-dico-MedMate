{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"src/app/services/firestore.services\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nfunction SetReportesComponent_div_11_ion_select_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 19);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const paciente_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", paciente_r3.uid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(paciente_r3.nombre);\n  }\n}\nfunction SetReportesComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\")(1, \"ion-item\")(2, \"ion-buttons\", 9)(3, \"ion-button\", 2);\n    i0.ɵɵlistener(\"click\", function SetReportesComponent_div_11_Template_ion_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.enablenewReportes = false);\n    });\n    i0.ɵɵelement(4, \"ion-icon\", 10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ion-button\", 11);\n    i0.ɵɵlistener(\"click\", function SetReportesComponent_div_11_Template_ion_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.guardarRepo());\n    });\n    i0.ɵɵelement(6, \"ion-icon\", 12);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"H3\", 7);\n    i0.ɵɵtext(8, \"Agregar informacion personal\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"ion-item\")(10, \"ion-label\", 13);\n    i0.ɵɵtext(11, \"Nombre Completo:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"ion-select\", 14);\n    i0.ɵɵlistener(\"ngModelChange\", function SetReportesComponent_div_11_Template_ion_select_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.newReportes.idpaciente = $event);\n    });\n    i0.ɵɵtemplate(13, SetReportesComponent_div_11_ion_select_option_13_Template, 2, 2, \"ion-select-option\", 15);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"ion-item\")(15, \"ion-label\", 13);\n    i0.ɵɵtext(16, \"Peso:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"ion-input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function SetReportesComponent_div_11_Template_ion_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.newReportes.peso = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"ion-item\")(19, \"ion-label\", 13);\n    i0.ɵɵtext(20, \"Altura:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"ion-input\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function SetReportesComponent_div_11_Template_ion_input_ngModelChange_21_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.newReportes.altura = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"ion-item\", 17)(23, \"ion-label\", 13);\n    i0.ɵɵtext(24, \"Medicamentos que consume:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"ion-textarea\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function SetReportesComponent_div_11_Template_ion_textarea_ngModelChange_25_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.newReportes.medicamentos = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"ion-item\", 17)(27, \"ion-label\", 13);\n    i0.ɵɵtext(28, \"Condicion medica:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"ion-textarea\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function SetReportesComponent_div_11_Template_ion_textarea_ngModelChange_29_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.newReportes.condicion = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newReportes.idpaciente);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.infopacientes);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newReportes.peso);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newReportes.altura);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newReportes.medicamentos);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newReportes.condicion);\n  }\n}\nfunction SetReportesComponent_ion_item_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\", 20);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-buttons\", 9)(4, \"ion-button\", 2);\n    i0.ɵɵlistener(\"click\", function SetReportesComponent_ion_item_15_Template_ion_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const Reporte_r12 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      ctx_r13.newReportes = Reporte_r12;\n      return i0.ɵɵresetView(ctx_r13.enablenewReportes = true);\n    });\n    i0.ɵɵelement(5, \"ion-icon\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ion-button\", 2);\n    i0.ɵɵlistener(\"click\", function SetReportesComponent_ion_item_15_Template_ion_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const Reporte_r12 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.deleteReporte(Reporte_r12));\n    });\n    i0.ɵɵelement(7, \"ion-icon\", 22);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const Reporte_r12 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(Reporte_r12.nombre);\n  }\n}\nexport class SetReportesComponent {\n  constructor(menuController, firestoreService, loadingCtrl, toastController, alertController) {\n    this.menuController = menuController;\n    this.firestoreService = firestoreService;\n    this.loadingCtrl = loadingCtrl;\n    this.toastController = toastController;\n    this.alertController = alertController;\n    this.reporte = [];\n    this.pacientes = [];\n    this.infopacientes = [];\n    this.enablenewReportes = false;\n    this.path = \"reportes/\";\n  }\n  ngOnInit() {\n    this.leertRepo();\n    this.getpacientes();\n  }\n  getpacientes() {\n    this.firestoreService.getCollection(\"Pacientes\").subscribe(res => {\n      if (res) {\n        this.infopacientes = res;\n      }\n    });\n  }\n  openMenu() {\n    this.menuController.toggle(\"main\");\n  }\n  guardarRepo() {\n    this.showLoading();\n    this.firestoreService.getCollection(\"Pacientes\").subscribe(res => {\n      if (res) {\n        this.pacientes = res;\n        this.pacientes.forEach(pac => {\n          if (pac.uid == this.newReportes.nombre) {\n            this.newReportes = {\n              nombre: pac.nombre + \"\" + pac.apellido,\n              idpaciente: pac.uid,\n              edad: pac.edad,\n              peso: this.newReportes.peso,\n              altura: this.newReportes.altura,\n              medicamentos: this.newReportes.medicamentos,\n              condicion: this.newReportes.condicion,\n              id: this.firestoreService.getId(),\n              fecha: new Date()\n            };\n          }\n        });\n      }\n    });\n    this.firestoreService.createRepo(this.newReportes, this.path, this.newReportes.id).then(res => {\n      this.loading.dismiss();\n      this.presentToast(\"Guardado con exito\");\n    }).catch(error => {\n      this.presentToast(\"No se pudo guardar\");\n    });\n  }\n  leertRepo() {\n    0;\n    this.firestoreService.getCollection(this.path).subscribe(res => {\n      this.reporte = res;\n    });\n  }\n  deleteReporte(Reporte) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const alert = yield this.alertController.create({\n        cssClass: \"normal\",\n        header: \"Advertencia\",\n        message: \"¿Seguro que deseas <strong>eliminar</strong> este reporte?\",\n        buttons: [{\n          text: \"Cancelar\",\n          role: \"cancel\",\n          cssClass: \"normal\",\n          handler: () => {\n            console.log(\"Alert canceled\");\n          }\n        }, {\n          text: \"OK\",\n          role: \"confirm\",\n          handler: () => {\n            console.log(\"Alert confirmed\");\n            this.firestoreService.deletetRepo(this.path, Reporte.id).then(res => {\n              this.alertController.dismiss();\n              this.presentToast(\"Eliminado con exito\");\n            }).catch(error => {\n              this.presentToast(\"No se pudo eliminar\");\n            });\n          }\n        }]\n      });\n      yield alert.present();\n    });\n  }\n  nuevo() {\n    this.firestoreService.getCollection(\"Pacientes\").subscribe(res => {\n      if (res) {\n        this.pacientes = res;\n        this.pacientes.forEach(pac => {\n          if (pac.uid == this.newReportes.nombre) {\n            this.newReportes = {\n              nombre: pac.nombre + \"\" + pac.apellido,\n              idpaciente: pac.uid,\n              edad: pac.edad,\n              peso: 0,\n              altura: 0,\n              medicamentos: \"\",\n              condicion: \"\",\n              id: this.firestoreService.getId(),\n              fecha: new Date()\n            };\n          }\n        });\n      }\n    });\n    this.enablenewReportes = true;\n    this.newReportes = {\n      nombre: \"\",\n      idpaciente: \"\",\n      edad: 0,\n      peso: 0,\n      altura: 0,\n      medicamentos: \"\",\n      condicion: \"\",\n      id: this.firestoreService.getId(),\n      fecha: new Date()\n    };\n  }\n  showLoading() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.loading = yield this.loadingCtrl.create({\n        cssClass: \"normal\",\n        message: \"Guardando...\",\n        spinner: \"circles\"\n      });\n      yield this.loading.present();\n    });\n  }\n  presentToast(msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const toast = yield this.toastController.create({\n        cssClass: \"normal\",\n        message: msg,\n        duration: 2000,\n        icon: \"thumbs-up-outline\",\n        color: \"light\"\n      });\n      yield toast.present();\n    });\n  }\n}\nSetReportesComponent.ɵfac = function SetReportesComponent_Factory(t) {\n  return new (t || SetReportesComponent)(i0.ɵɵdirectiveInject(i1.MenuController), i0.ɵɵdirectiveInject(i2.FirestoreService), i0.ɵɵdirectiveInject(i1.LoadingController), i0.ɵɵdirectiveInject(i1.ToastController), i0.ɵɵdirectiveInject(i1.AlertController));\n};\nSetReportesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: SetReportesComponent,\n  selectors: [[\"app-set-reportes\"]],\n  decls: 16,\n  vars: 2,\n  consts: [[1, \"subtitulo\"], [\"slot\", \"start\"], [3, \"click\"], [\"color\", \"primary\", \"slot\", \"icon-only\", \"name\", \"menu-outline\"], [2, \"text-align\", \"end\", \"margin\", \"10px\"], [\"color\", \"dark\", 1, \"normal\", 3, \"click\"], [4, \"ngIf\"], [1, \"subtitulo\", \"p-3\", \"encabezado\"], [4, \"ngFor\", \"ngForOf\"], [\"slot\", \"end\"], [\"slot\", \"icon-only\", \"color\", \"dark\", \"name\", \"close\"], [\"color\", \"color1\", 3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"save-outline\"], [\"position\", \"floating\", 1, \"normal\"], [\"interface\", \"popover\", \"placeholder\", \"Selecciona Paciente\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"number\", \"inputmode\", \"numeric\", 1, \"normal\", 3, \"ngModel\", \"ngModelChange\"], [\"counter\", \"true\"], [\"type\", \"text\", \"inputmode\", \"text\", \"maxlength\", \"120\", 1, \"normal\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"], [1, \"normal\"], [\"slot\", \"icon-only\", \"name\", \"create-outline\", 1, \"color1\"], [\"slot\", \"icon-only\", \"color\", \"danger\", \"name\", \"trash-outline\"]],\n  template: function SetReportesComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\", 0);\n      i0.ɵɵtext(3, \" Agregar Reporte \");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-buttons\", 1)(5, \"ion-button\", 2);\n      i0.ɵɵlistener(\"click\", function SetReportesComponent_Template_ion_button_click_5_listener() {\n        return ctx.openMenu();\n      });\n      i0.ɵɵelement(6, \"ion-icon\", 3);\n      i0.ɵɵelementEnd()()()();\n      i0.ɵɵelementStart(7, \"ion-content\")(8, \"div\", 4)(9, \"ion-button\", 5);\n      i0.ɵɵlistener(\"click\", function SetReportesComponent_Template_ion_button_click_9_listener() {\n        return ctx.nuevo();\n      });\n      i0.ɵɵtext(10, \"Nuevo\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵtemplate(11, SetReportesComponent_div_11_Template, 30, 6, \"div\", 6);\n      i0.ɵɵelementStart(12, \"ion-card\")(13, \"H3\", 7);\n      i0.ɵɵtext(14, \"Lista de reportes\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵtemplate(15, SetReportesComponent_ion_item_15_Template, 8, 1, \"ion-item\", 8);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(11);\n      i0.ɵɵproperty(\"ngIf\", ctx.enablenewReportes);\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngForOf\", ctx.reporte);\n    }\n  },\n  dependencies: [i3.NgForOf, i3.NgIf, i1.IonButton, i1.IonButtons, i1.IonCard, i1.IonContent, i1.IonHeader, i1.IonIcon, i1.IonInput, i1.IonItem, i1.IonLabel, i1.IonSelect, i1.IonSelectOption, i1.IonTextarea, i1.IonTitle, i1.IonToolbar, i1.NumericValueAccessor, i1.SelectValueAccessor, i1.TextValueAccessor, i4.NgControlStatus, i4.MaxLengthValidator, i4.NgModel],\n  styles: [\".encabezado[_ngcontent-%COMP%] {\\n  margin: 30px;\\n  border-radius: 20px;\\n  background: #e9ecef;\\n  text-align: center;\\n}\\n\\n.color1[_ngcontent-%COMP%] {\\n  color: #00d4ff;\\n}\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8uL3NyYy9hcHAvYmFja2VuZC9zZXQtcmVwb3J0ZXMvc2V0LXJlcG9ydGVzLmNvbXBvbmVudC5zY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBRUUsWUFBQTtFQUNBLG1CQUFBO0VBQ0EsbUJBQUE7RUFDQSxrQkFBQTtBQUFGOztBQUVBO0VBQ0EsY0FBQTtBQUNBIiwic291cmNlc0NvbnRlbnQiOlsiLmVuY2FiZXphZG9cclxue1xyXG4gIG1hcmdpbjogMzBweDtcclxuICBib3JkZXItcmFkaXVzOiAyMHB4O1xyXG4gIGJhY2tncm91bmQ6ICNlOWVjZWY7XHJcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xyXG59XHJcbi5jb2xvcjF7XHJcbmNvbG9yOiAjMDBkNGZmO1xyXG59Il0sInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","ctx_r13","SetReportesComponent","constructor","menuController","firestoreService","loadingCtrl","toastController","alertController","ngOnInit","leertRepo","getpacientes","getCollection","subscribe","res","infopacientes","openMenu","toggle","guardarRepo","showLoading","pacientes","forEach","pac","uid","newReportes","nombre","apellido","idpaciente","edad","peso","altura","medicamentos","condicion","id","getId","fecha","Date","createRepo","path","then","loading","dismiss","presentToast","catch","error","reporte","deleteReporte","Reporte","alert","create","cssClass","header","message","buttons","text","role","handler","console","log","deletetRepo","present","nuevo","enablenewReportes","spinner","msg","toast","duration","icon","color","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\erick\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\backend\\set-reportes\\set-reportes.component.html","C:\\Users\\erick\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\backend\\set-reportes\\set-reportes.component.ts"],"sourcesContent":["<ion-header>\r\n  <ion-toolbar>\r\n    <ion-title class=\"subtitulo\">\r\n      Agregar Reporte\r\n    </ion-title>\r\n    <ion-buttons slot=\"start\">\r\n      <ion-button (click)=\"openMenu()\">\r\n        <ion-icon color=\"primary\" slot=\"icon-only\" name=\"menu-outline\"></ion-icon>      \r\n      </ion-button>\r\n    </ion-buttons>\r\n  </ion-toolbar>\r\n</ion-header>\r\n<ion-content>\r\n  <div style=\"text-align: end; margin: 10px;\" >\r\n    <ion-button class=\"normal\" (click)=\"nuevo()\" color=\"dark\">Nuevo</ion-button>\r\n  </div>\r\n  <div *ngIf=\"enablenewReportes\">\r\n    <ion-item>\r\n      <ion-buttons slot=\"end\">\r\n          <ion-button (click)=\"enablenewReportes = false\">\r\n      <ion-icon slot=\"icon-only\" color=\"dark\" name=\"close\"></ion-icon>\r\n    </ion-button>\r\n    <ion-button color=\"color1\" (click)=\"guardarRepo( )\">\r\n      <ion-icon slot=\"icon-only\" name=\"save-outline\"></ion-icon>\r\n    </ion-button>\r\n    </ion-buttons>\r\n    </ion-item>\r\n    <H3  class=\"subtitulo p-3 encabezado\">Agregar informacion personal</H3>\r\n        <ion-item>\r\n          <ion-label class=\"normal\" position=\"floating\">Nombre Completo:</ion-label>\r\n          <!-- <ion-input [(ngModel)]=\"newReportes.nombre\" class=\"normal\" type=\"text\" inputmode=\"text\"></ion-input> -->\r\n          <ion-select [(ngModel)]=\"newReportes.idpaciente\" interface=\"popover\" placeholder=\"Selecciona Paciente\">\r\n            <ion-select-option *ngFor=\"let paciente of infopacientes\" [value]=\"paciente.uid\">{{paciente.nombre}}</ion-select-option>\r\n          </ion-select>\r\n        </ion-item>\r\n        <!-- <ion-item>\r\n          <ion-label class=\"normal\" position=\"floating\">Identificador:</ion-label>\r\n          <ion-input [(ngModel)]=\"newReportes.identificador\" class=\"normal\" type=\"number\" inputmode=\"numeric\"></ion-input>\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-label class=\"normal\" position=\"floating\">Edad:</ion-label>\r\n          <ion-input [(ngModel)]=\"newReportes.edad\" class=\"normal\" type=\"number\" inputmode=\"numeric\"></ion-input>\r\n        </ion-item> -->\r\n        <ion-item>\r\n          <ion-label class=\"normal\" position=\"floating\">Peso:</ion-label>\r\n          <ion-input [(ngModel)]=\"newReportes.peso\" class=\"normal\" type=\"number\" inputmode=\"numeric\"></ion-input>\r\n        </ion-item>\r\n        <ion-item>\r\n          <ion-label class=\"normal\" position=\"floating\">Altura:</ion-label>\r\n          <ion-input [(ngModel)]=\"newReportes.altura\" class=\"normal\" type=\"number\" inputmode=\"numeric\"></ion-input>\r\n        </ion-item>\r\n        <ion-item counter=\"true\">\r\n          <ion-label class=\"normal\" position=\"floating\">Medicamentos que consume:</ion-label>\r\n          <ion-textarea [(ngModel)]=\"newReportes.medicamentos\" class=\"normal\" type=\"text\" inputmode=\"text\" maxlength=\"120\"></ion-textarea>\r\n        </ion-item>\r\n        <ion-item counter=\"true\">\r\n          <ion-label class=\"normal\"position=\"floating\">Condicion medica:</ion-label>\r\n          <ion-textarea [(ngModel)]=\"newReportes.condicion\" class=\"normal\" type=\"text\" inputmode=\"text\" maxlength=\"120\"></ion-textarea>\r\n        </ion-item>\r\n  </div>\r\n\r\n<ion-card>\r\n  <H3  class=\"subtitulo p-3 encabezado\">Lista de reportes</H3>\r\n        <ion-item *ngFor=\"let Reporte of reporte\">\r\n          <ion-label class=\"normal\">{{Reporte.nombre}}</ion-label>\r\n          <ion-buttons slot=\"end\">\r\n            <ion-button (click)=\"newReportes = Reporte ; enablenewReportes = true\">\r\n              <ion-icon slot=\"icon-only\" class=\"color1\" name=\"create-outline\"></ion-icon>\r\n            </ion-button>\r\n            <ion-button (click)=\"deleteReporte(Reporte)\">\r\n              <ion-icon slot=\"icon-only\" color=\"danger\" name=\"trash-outline\"></ion-icon>\r\n            </ion-button>\r\n          </ion-buttons>\r\n        </ion-item>\r\n</ion-card>\r\n\r\n</ion-content>\r\n","import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  AlertController,\r\n  LoadingController,\r\n  MenuController,\r\n  ToastController,\r\n} from \"@ionic/angular\";\r\nimport { mainModule } from \"process\";\r\nimport { FirestoreService } from \"src/app/services/firestore.services\";\r\n\r\nimport { ɵNullViewportScroller } from \"@angular/common\";\r\nimport { error } from \"console\";\r\nimport { Reporte, paciente } from \"src/app/models/interface\";\r\n\r\n@Component({\r\n  selector: \"app-set-reportes\",\r\n  templateUrl: \"./set-reportes.component.html\",\r\n  styleUrls: [\"./set-reportes.component.scss\"],\r\n})\r\nexport class SetReportesComponent implements OnInit {\r\n  reporte: Reporte[] = [];\r\n  newReportes!: Reporte;\r\n  pacientes: paciente[] = [];\r\n  public infopacientes: paciente[] = [];\r\n\r\n  enablenewReportes = false;\r\n\r\n  private path = \"reportes/\";\r\n  loading: any;\r\n\r\n  constructor(\r\n    public menuController: MenuController,\r\n    public firestoreService: FirestoreService,\r\n    private loadingCtrl: LoadingController,\r\n    private toastController: ToastController,\r\n    private alertController: AlertController\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    this.leertRepo();\r\n    this.getpacientes();\r\n  }\r\n\r\n  getpacientes() {\r\n    this.firestoreService\r\n      .getCollection<paciente>(\"Pacientes\")\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.infopacientes = res;\r\n        }\r\n      });\r\n  }\r\n\r\n  openMenu() {\r\n    this.menuController.toggle(\"main\");\r\n  }\r\n\r\n  guardarRepo() {\r\n    this.showLoading();\r\n    this.firestoreService\r\n      .getCollection<paciente>(\"Pacientes\")\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.pacientes = res;\r\n          this.pacientes.forEach((pac) => {\r\n            if (pac.uid == this.newReportes.nombre) {\r\n              this.newReportes = {\r\n                nombre: pac.nombre + \"\" + pac.apellido,\r\n                idpaciente: pac.uid,\r\n                edad: pac.edad,\r\n                peso: this.newReportes.peso,\r\n                altura: this.newReportes.altura,\r\n                medicamentos: this.newReportes.medicamentos,\r\n                condicion: this.newReportes.condicion,\r\n                id: this.firestoreService.getId(),\r\n                fecha: new Date(),\r\n              };\r\n            }\r\n          });\r\n        }\r\n      });\r\n\r\n    this.firestoreService\r\n      .createRepo(this.newReportes, this.path, this.newReportes.id)\r\n      .then((res) => {\r\n        this.loading.dismiss();\r\n        this.presentToast(\"Guardado con exito\");\r\n      })\r\n      .catch((error) => {\r\n        this.presentToast(\"No se pudo guardar\");\r\n      });\r\n  }\r\n  leertRepo() {\r\n    0;\r\n    this.firestoreService.getCollection<Reporte>(this.path).subscribe((res) => {\r\n      this.reporte = res;\r\n    });\r\n  }\r\n  async deleteReporte(Reporte: Reporte) {\r\n    const alert = await this.alertController.create({\r\n      cssClass: \"normal\",\r\n      header: \"Advertencia\",\r\n      message: \"¿Seguro que deseas <strong>eliminar</strong> este reporte?\",\r\n      buttons: [\r\n        {\r\n          text: \"Cancelar\",\r\n          role: \"cancel\",\r\n          cssClass: \"normal\",\r\n          handler: () => {\r\n            console.log(\"Alert canceled\");\r\n          },\r\n        },\r\n        {\r\n          text: \"OK\",\r\n          role: \"confirm\",\r\n          handler: () => {\r\n            console.log(\"Alert confirmed\");\r\n            this.firestoreService\r\n              .deletetRepo(this.path, Reporte.id)\r\n              .then((res) => {\r\n                this.alertController.dismiss();\r\n                this.presentToast(\"Eliminado con exito\");\r\n              })\r\n              .catch((error) => {\r\n                this.presentToast(\"No se pudo eliminar\");\r\n              });\r\n          },\r\n        },\r\n      ],\r\n    });\r\n    await alert.present();\r\n  }\r\n\r\n  nuevo() {\r\n    this.firestoreService\r\n      .getCollection<paciente>(\"Pacientes\")\r\n      .subscribe((res) => {\r\n        if (res) {\r\n          this.pacientes = res;\r\n            this.pacientes.forEach((pac) => {\r\n              if (pac.uid == this.newReportes.nombre) {\r\n                this.newReportes = {\r\n                  nombre: pac.nombre + \"\" + pac.apellido,\r\n                  idpaciente: pac.uid,\r\n                  edad: pac.edad,\r\n                  peso: 0,\r\n                  altura: 0,\r\n                  medicamentos: \"\",\r\n                  condicion: \"\",\r\n                  id: this.firestoreService.getId(),\r\n                  fecha: new Date(),\r\n                };\r\n              }\r\n            });\r\n        }\r\n      });\r\n    this.enablenewReportes = true;\r\n     this.newReportes = {\r\n       nombre: \"\",\r\n       idpaciente:\"\",\r\n       edad: 0,\r\n       peso: 0,\r\n       altura: 0,\r\n       medicamentos: \"\",\r\n       condicion: \"\",\r\n       id: this.firestoreService.getId(),\r\n       fecha: new Date(),\r\n     };\r\n  }\r\n  async showLoading() {\r\n    this.loading = await this.loadingCtrl.create({\r\n      cssClass: \"normal\",\r\n      message: \"Guardando...\",\r\n      spinner: \"circles\",\r\n    });\r\n\r\n    await this.loading.present();\r\n  }\r\n  async presentToast(msg: string) {\r\n    const toast = await this.toastController.create({\r\n      cssClass: \"normal\",\r\n      message: msg,\r\n      duration: 2000,\r\n      icon: \"thumbs-up-outline\",\r\n      color: \"light\",\r\n    });\r\n\r\n    await toast.present();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}