{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/services/firestore.service\";\nimport * as i5 from \"@ionic/angular\";\nconst _c0 = function () {\n  return [\"/home\"];\n};\nexport class MedicacionPage {\n  constructor(fb, auth, router, store, alertcontroller) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.store = store;\n    this.alertcontroller = alertcontroller;\n    this.newmedicamento = {\n      medicamento: \"\",\n      cdias: 0,\n      fecha: \"\",\n      hora: 0,\n      userid: \"\"\n    };\n    this.medicamentoform = this.fb.group({\n      'medicamento': new FormControl(\"\", Validators.required),\n      'cdias': new FormControl(\"\", Validators.required),\n      'hora': new FormControl(\"\", Validators.required)\n    });\n  }\n  ingresar() {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const uid = yield this.auth.getUid();\n      if (uid) {\n        this.uid = uid;\n      }\n      const path = \"Pacientes\";\n      this.store.getDoc(path, this.uid).subscribe(res => {\n        if (res) {\n          this.info = res;\n        }\n      });\n      if (((_a = this.info) === null || _a === void 0 ? void 0 : _a.uid) == this.uid) {\n        var f = this.medicamentoform.value;\n        if (this.medicamentoform.invalid) {\n          const alert = yield this.alertcontroller.create({\n            header: 'Datos incompletos',\n            message: 'Debe de ingresar todos los campos'\n          });\n          yield alert.present();\n          return;\n        } else {\n          this.newmedicamento.medicamento = f.medicamento, this.newmedicamento.cdias = f.cdias;\n          this.newmedicamento.hora = f.hora;\n          this.newmedicamento.fecha = '2022-06-03';\n          this.newmedicamento.userid = this.uid;\n          console.log(this.newmedicamento);\n          this.store.agregar(this.newmedicamento, \"Medicamentos\");\n          const alert2 = yield this.alertcontroller.create({\n            header: 'Medicamento agregado'\n          });\n          yield alert2.present();\n          this.router.navigate(['../home']);\n        }\n      }\n    });\n  }\n  ngOnInit() {}\n}\nMedicacionPage.ɵfac = function MedicacionPage_Factory(t) {\n  return new (t || MedicacionPage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FirestoreService), i0.ɵɵdirectiveInject(i5.AlertController));\n};\nMedicacionPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: MedicacionPage,\n  selectors: [[\"app-medicacion\"]],\n  decls: 28,\n  vars: 3,\n  consts: [[\"fill\", \"clear\", \"slot\", \"start\", 3, \"routerLink\"], [\"name\", \"arrow-back-outline\"], [3, \"formGroup\", \"ngSubmit\"], [\"position\", \"floating\"], [\"color\", \"danger\"], [\"required\", \"\", \"formControlName\", \"medicamento\", \"type\", \"text\"], [\"required\", \"\", \"formControlName\", \"cdias\", \"type\", \"number\"], [\"required\", \"\", \"value\", \"number\", \"formControlName\", \"hora\", \"type\", \"time\"], [\"block\", \"\", \"color\", \"primary\", \"type\", \"submit\"]],\n  template: function MedicacionPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Medicacion\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-button\", 0);\n      i0.ɵɵelement(5, \"ion-icon\", 1);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"ion-content\")(7, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function MedicacionPage_Template_form_ngSubmit_7_listener() {\n        return ctx.ingresar();\n      });\n      i0.ɵɵelementStart(8, \"ion-item\")(9, \"ion-label\", 3);\n      i0.ɵɵtext(10, \"Medicamento \");\n      i0.ɵɵelementStart(11, \"ion-text\", 4);\n      i0.ɵɵtext(12, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(13, \"ion-input\", 5);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(14, \"ion-item\")(15, \"ion-label\", 3);\n      i0.ɵɵtext(16, \"Cuantos dias \");\n      i0.ɵɵelementStart(17, \"ion-text\", 4);\n      i0.ɵɵtext(18, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(19, \"ion-input\", 6);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(20, \"ion-item\")(21, \"ion-label\", 3);\n      i0.ɵɵtext(22, \"Hora \");\n      i0.ɵɵelementStart(23, \"ion-text\", 4);\n      i0.ɵɵtext(24, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(25, \"ion-input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(26, \"ion-button\", 8);\n      i0.ɵɵtext(27, \" Aceptar \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.medicamentoform);\n    }\n  },\n  dependencies: [i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i5.IonButton, i5.IonContent, i5.IonHeader, i5.IonIcon, i5.IonInput, i5.IonItem, i5.IonLabel, i5.IonText, i5.IonTitle, i5.IonToolbar, i5.NumericValueAccessor, i5.TextValueAccessor, i5.RouterLinkDelegate, i3.RouterLink, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","MedicacionPage","constructor","fb","auth","router","store","alertcontroller","medicamento","cdias","fecha","hora","userid","medicamentoform","group","required","ingresar","uid","getUid","path","getDoc","subscribe","res","info","f","value","invalid","alert","create","header","message","present","newmedicamento","console","log","agregar","alert2","navigate","ngOnInit","selectors","decls","vars","consts","template","i0","ctx"],"sourceRoot":"","sources":["C:\\Users\\erick\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\mpacientes\\medicacion\\medicacion.page.ts","C:\\Users\\erick\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\mpacientes\\medicacion\\medicacion.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup,FormControl,\r\n  Validators, ReactiveFormsModule} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { time } from 'console';\r\nimport { TimeInterval } from 'rxjs/internal/operators/timeInterval';\r\nimport { medicacion, paciente } from 'src/app/models/interface';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { FirestoreService } from 'src/app/services/firestore.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-medicacion',\r\n  templateUrl: './medicacion.page.html',\r\n  styleUrls: ['./medicacion.page.scss'],\r\n})\r\nexport class MedicacionPage implements OnInit {\r\n\r\n  public medicamentoform: FormGroup;\r\n\r\n  uid: any;\r\n  info: paciente | undefined;\r\n  newmedicamento: medicacion = {\r\n    medicamento: \"\",\r\n    cdias : 0,\r\n    fecha : \"\",\r\n    hora: 0,\r\n    userid: \"\",\r\n\r\n  }\r\n\r\n  constructor(private fb: FormBuilder, private auth: AuthService, private router: Router,\r\n    private store: FirestoreService, private alertcontroller: AlertController) {\r\n\r\n      this.medicamentoform = this.fb.group({\r\n        'medicamento': new FormControl(\"\", Validators.required),\r\n        'cdias': new FormControl(\"\", Validators.required),\r\n        'hora': new FormControl(\"\", Validators.required),\r\n      })\r\n     }\r\n\r\n  async ingresar(){\r\n    const uid = await this.auth.getUid()\r\n    if (uid){\r\n      this.uid = uid;\r\n    }\r\n\r\n    const path = \"Pacientes\"\r\n    this.store.getDoc<paciente>(path,this.uid).subscribe(res => {\r\n      if(res){\r\n        this.info = res;\r\n      }\r\n    })\r\n\r\n    if (this.info?.uid == this.uid) {\r\n      var f = this.medicamentoform.value;\r\n\r\n      if (this.medicamentoform.invalid) {\r\n\r\n      const alert = await this.alertcontroller.create({\r\n        header: 'Datos incompletos',\r\n        message: 'Debe de ingresar todos los campos',\r\n      });\r\n\r\n      await alert.present();\r\n      return;\r\n    }\r\n\r\n    else{\r\n\r\n      this.newmedicamento.medicamento = f.medicamento,\r\n      this.newmedicamento.cdias = f.cdias;\r\n      this.newmedicamento.hora = f.hora;\r\n      this.newmedicamento.fecha = '2022-06-03';\r\n      this.newmedicamento.userid = this.uid;\r\n\r\n      console.log(this.newmedicamento);\r\n\r\n      this.store.agregar(this.newmedicamento, \"Medicamentos\")     \r\n\r\n      const alert2 = await this.alertcontroller.create({\r\n        header: 'Medicamento agregado',\r\n      });\r\n\r\n      await alert2.present();\r\n      this.router.navigate(['../home'])\r\n\r\n    }\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>Medicacion</ion-title>\n    <ion-button fill=\"clear\" slot=\"start\" [routerLink]=\"['/home']\"><ion-icon name=\"arrow-back-outline\"></ion-icon>\n    </ion-button>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <form [formGroup]=\"medicamentoform\" (ngSubmit)=\"ingresar()\">\n    <ion-item>\n      <ion-label position=\"floating\">Medicamento <ion-text color=\"danger\">*</ion-text></ion-label>\n      <ion-input required formControlName=\"medicamento\" type=\"text\"></ion-input>\n    </ion-item>\n    <ion-item>\n      <ion-label position=\"floating\">Cuantos dias <ion-text color=\"danger\">*</ion-text></ion-label>\n      <ion-input required formControlName=\"cdias\" type=\"number\"></ion-input>\n    </ion-item>\n    <ion-item>\n      <ion-label position=\"floating\">Hora <ion-text color=\"danger\">*</ion-text></ion-label>\n      <ion-input required value=\"number\" formControlName=\"hora\" type=\"time\"></ion-input>\n    </ion-item>\n    <ion-button block color=\"primary\" type=\"submit\">\n      Aceptar\n    </ion-button>\n  </form>\n</ion-content>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}