{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/fire/compat/firestore\";\nexport class FirestoreService {\n  constructor(database) {\n    this.database = database;\n  }\n  createRepo(data, path, id) {\n    const collection = this.database.collection(path);\n    return collection.doc(id).set(data);\n  }\n  getRepo(path, id) {\n    const collection = this.database.collection(path);\n    return collection.doc(id).valueChanges();\n  }\n  deletetRepo(path, id) {\n    const collection = this.database.collection(path);\n    return collection.doc(id).delete();\n  }\n  updateRepo(data, path, id) {\n    const collection = this.database.collection(path);\n    return collection.doc(id).update(data);\n  }\n  getId() {\n    return this.database.createId();\n  }\n  getCollection(path) {\n    const collection = this.database.collection(path);\n    return collection.valueChanges();\n  }\n}\nFirestoreService.ɵfac = function FirestoreService_Factory(t) {\n  return new (t || FirestoreService)(i0.ɵɵinject(i1.AngularFirestore));\n};\nFirestoreService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: FirestoreService,\n  factory: FirestoreService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":";;AAMA,OAAM,MAAOA,gBAAgB;EAE3BC,YAAmBC,QAA0B;IAA1B,aAAQ,GAARA,QAAQ;EAAqB;EAChDC,UAAU,CAACC,IAAS,EAAEC,IAAY,EAAEC,EAAU;IAC5C,MAAMC,UAAU,GAAG,IAAI,CAACL,QAAQ,CAACK,UAAU,CAACF,IAAI,CAAC;IACjD,OAAOE,UAAU,CAACC,GAAG,CAACF,EAAE,CAAC,CAACG,GAAG,CAACL,IAAI,CAAC;EACrC;EACAM,OAAO,CAAEL,IAAY,EAAEC,EAAU;IAC/B,MAAMC,UAAU,GAAG,IAAI,CAACL,QAAQ,CAACK,UAAU,CAACF,IAAI,CAAC;IACjD,OAAOE,UAAU,CAACC,GAAG,CAACF,EAAE,CAAC,CAACK,YAAY,EAAE;EAC1C;EACAC,WAAW,CAAEP,IAAY,EAAEC,EAAU;IACnC,MAAMC,UAAU,GAAG,IAAI,CAACL,QAAQ,CAACK,UAAU,CAACF,IAAI,CAAC;IACjD,OAAOE,UAAU,CAACC,GAAG,CAACF,EAAE,CAAC,CAACO,MAAM,EAAE;EACpC;EACAC,UAAU,CAACV,IAAS,EAAEC,IAAY,EAAEC,EAAU;IAC5C,MAAMC,UAAU,GAAG,IAAI,CAACL,QAAQ,CAACK,UAAU,CAACF,IAAI,CAAC;IACjD,OAAOE,UAAU,CAACC,GAAG,CAACF,EAAE,CAAC,CAACS,MAAM,CAACX,IAAI,CAAC;EACxC;EACAY,KAAK;IACJ,OAAO,IAAI,CAACd,QAAQ,CAACe,QAAQ,EAAE;EAChC;EACAC,aAAa,CAAOb,IAAY;IAC9B,MAAME,UAAU,GAAG,IAAI,CAACL,QAAQ,CAACK,UAAU,CAAOF,IAAI,CAAC;IACvD,OAAOE,UAAU,CAACI,YAAY,EAAE;EAClC;;;mBAzBWX,gBAAgB;AAAA;;SAAhBA,gBAAgB;EAAAmB,SAAhBnB,gBAAgB;EAAAoB,YAFf;AAAM","names":["FirestoreService","constructor","database","createRepo","data","path","id","collection","doc","set","getRepo","valueChanges","deletetRepo","delete","updateRepo","update","getId","createId","getCollection","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\samee\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\medmate\\src\\app\\services\\firestore.services.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { AngularFirestore} from '@angular/fire/compat/firestore';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class FirestoreService {\r\n\r\n  constructor(public database: AngularFirestore) {}\r\n  createRepo(data: any, path: string, id: string){\r\n    const collection = this.database.collection(path);\r\n    return collection.doc(id).set(data);\r\n  }\r\n  getRepo( path: string, id: string){\r\n    const collection = this.database.collection(path);\r\n    return collection.doc(id).valueChanges();\r\n  }\r\n  deletetRepo( path: string, id: string){\r\n    const collection = this.database.collection(path);\r\n    return collection.doc(id).delete();\r\n  }\r\n  updateRepo(data: any, path: string, id: string){\r\n    const collection = this.database.collection(path);\r\n    return collection.doc(id).update(data);\r\n  }\r\n  getId(){\r\n   return this.database.createId();\r\n  }\r\n  getCollection<tipo>(path: string){\r\n    const collection = this.database.collection<tipo>(path);\r\n    return collection.valueChanges();\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}