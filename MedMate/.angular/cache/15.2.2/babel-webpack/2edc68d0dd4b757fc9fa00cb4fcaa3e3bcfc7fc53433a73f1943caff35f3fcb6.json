{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/services/firestore.service\";\nimport * as i5 from \"@ionic/angular\";\nimport * as i6 from \"@angular/common\";\nfunction ACitasPage_ion_select_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const doctor_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", doctor_r1.uid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(doctor_r1.nombre);\n  }\n}\nconst _c0 = function () {\n  return [\"/home\"];\n};\nexport let ACitasPage = /*#__PURE__*/(() => {\n  class ACitasPage {\n    constructor(fb, auth, router, store, alertcontroller) {\n      this.fb = fb;\n      this.auth = auth;\n      this.router = router;\n      this.store = store;\n      this.alertcontroller = alertcontroller;\n      this.pathpaciente = \"Pacientes\";\n      this.pathdoctor = \"Doctores\";\n      this.infodoctor = [];\n      this.doctores = [];\n      this.pacientes = [];\n      this.doctor = {\n        uid: \"\",\n        nombre: \"\",\n        apellido: \"\",\n        cedula: \"\",\n        especialidad: \"\",\n        correo: \"\",\n        contraseña: \"\",\n        rol: \"Doctor\"\n      };\n      this.paciente = {\n        uid: \"\",\n        nombre: \"\",\n        apellido: \"\",\n        cedula: \"\",\n        fnacimiento: \"\",\n        edad: 0,\n        correo: \"\",\n        contraseña: \"\",\n        rol: \"Paciente\"\n      };\n      this.newcita = {\n        doctor: \"\",\n        iddoctor: \"\",\n        paciente: \"\",\n        idpaciente: \"\",\n        especialidad: \"\",\n        fecha: new Date(),\n        hora: 0,\n        id: this.store.getId(),\n        estado: \"\"\n      };\n      this.acitasform = this.fb.group({\n        doctor: new FormControl(\"\", Validators.required),\n        fecha: new FormControl(\"\", Validators.required),\n        hora: new FormControl(\"\", Validators.required)\n      });\n    }\n    ngOnInit() {\n      this.getdoctores();\n    }\n    getdoctores() {\n      this.store.consultar(this.pathdoctor).subscribe(res => {\n        if (res) {\n          this.infodoctor = res;\n        }\n      });\n    }\n    agregar() {\n      return __awaiter(this, void 0, void 0, function* () {\n        var f = this.acitasform.value;\n        const uid = yield this.auth.getUid();\n        let citaCreada = false;\n        this.uiddoctor = f.doctor;\n        this.store.consultar(this.pathdoctor).subscribe(res => {\n          if (res) {\n            this.doctores = res;\n            this.doctores.forEach(docs => __awaiter(this, void 0, void 0, function* () {\n              if (docs.uid == this.uiddoctor) {\n                this.doctor = docs;\n                if (uid) {\n                  this.uidpaciente = uid;\n                  this.store.consultar(this.pathpaciente).subscribe(pac => {\n                    if (pac) {\n                      this.pacientes = pac;\n                      this.pacientes.forEach(pac2 => __awaiter(this, void 0, void 0, function* () {\n                        if (pac2.uid == this.uidpaciente) {\n                          this.paciente = pac2;\n                          if (this.acitasform.invalid) {\n                            const alert = yield this.alertcontroller.create({\n                              header: \"Datos incompletos\",\n                              message: \"Debe de ingresar todos los campos\"\n                            });\n                            yield alert.present();\n                            return;\n                          } else {\n                            if (!citaCreada) {\n                              this.newcita.doctor = this.doctor.nombre + \" \" + this.doctor.apellido;\n                              this.newcita.especialidad = this.doctor.especialidad;\n                              this.newcita.fecha = f.fecha;\n                              this.newcita.hora = f.hora;\n                              this.newcita.iddoctor = this.doctor.uid;\n                              this.newcita.idpaciente = this.uidpaciente;\n                              this.newcita.paciente = this.paciente.nombre + \" \" + this.paciente.apellido;\n                              this.newcita.id = this.store.getId();\n                              this.newcita.estado = \"En espera\";\n                              console.log(this.newcita);\n                              this.store.createDoc(this.newcita, \"Citas\", this.newcita.id);\n                              citaCreada = true;\n                              const alert2 = yield this.alertcontroller.create({\n                                header: \"Cita agregada\"\n                              });\n                              yield alert2.present();\n                              this.router.navigate([\"../home\"]);\n                            }\n                          }\n                        }\n                      }));\n                    }\n                  });\n                }\n              }\n            }));\n          }\n        });\n      });\n    }\n  }\n  ACitasPage.ɵfac = function ACitasPage_Factory(t) {\n    return new (t || ACitasPage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FirestoreService), i0.ɵɵdirectiveInject(i5.AlertController));\n  };\n  ACitasPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ACitasPage,\n    selectors: [[\"app-a-citas\"]],\n    decls: 35,\n    vars: 6,\n    consts: [[\"color\", \"principal\"], [\"color\", \"blanco\", \"fill\", \"clear\", \"slot\", \"start\", 3, \"routerLink\"], [\"name\", \"arrow-back-outline\"], [1, \"ion-padding\"], [1, \"form-container\"], [1, \"titulo\"], [3, \"formGroup\", \"ngSubmit\"], [\"position\", \"stacked\"], [\"color\", \"danger\"], [\"formControlName\", \"doctor\", \"interface\", \"popover\", \"placeholder\", \"Selecciona Doctor\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"required\", \"\", \"formControlName\", \"fecha\", \"type\", \"date\"], [\"required\", \"\", \"formControlName\", \"hora\", \"type\", \"time\"], [1, \"botones\"], [\"color\", \"secondary\", \"expand\", \"block\", \"type\", \"submit\"], [\"color\", \"light\", \"expand\", \"block\", \"type\", \"reset\", 3, \"routerLink\"], [3, \"value\"]],\n    template: function ACitasPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Agendar Citas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-button\", 1);\n        i0.ɵɵelement(5, \"ion-icon\", 2);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 3)(7, \"div\", 4)(8, \"h2\", 5);\n        i0.ɵɵtext(9, \"Nueva cita\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"form\", 6);\n        i0.ɵɵlistener(\"ngSubmit\", function ACitasPage_Template_form_ngSubmit_10_listener() {\n          return ctx.agregar();\n        });\n        i0.ɵɵelementStart(11, \"ion-item\")(12, \"ion-label\", 7);\n        i0.ɵɵtext(13, \"Doctor \");\n        i0.ɵɵelementStart(14, \"ion-text\", 8);\n        i0.ɵɵtext(15, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(16, \"ion-select\", 9);\n        i0.ɵɵtemplate(17, ACitasPage_ion_select_option_17_Template, 2, 2, \"ion-select-option\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(18, \"ion-item\")(19, \"ion-label\", 7);\n        i0.ɵɵtext(20, \"Fecha \");\n        i0.ɵɵelementStart(21, \"ion-text\", 8);\n        i0.ɵɵtext(22, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(23, \"ion-input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"ion-item\")(25, \"ion-label\", 7);\n        i0.ɵɵtext(26, \"Hora \");\n        i0.ɵɵelementStart(27, \"ion-text\", 8);\n        i0.ɵɵtext(28, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(29, \"ion-input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 13)(31, \"ion-button\", 14);\n        i0.ɵɵtext(32, \" Aceptar \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"ion-button\", 15);\n        i0.ɵɵtext(34, \" Cancelar \");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c0));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.acitasform);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.infodoctor);\n        i0.ɵɵadvance(16);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(5, _c0));\n      }\n    },\n    dependencies: [i6.NgForOf, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i5.IonButton, i5.IonContent, i5.IonHeader, i5.IonIcon, i5.IonInput, i5.IonItem, i5.IonLabel, i5.IonSelect, i5.IonSelectOption, i5.IonText, i5.IonTitle, i5.IonToolbar, i5.SelectValueAccessor, i5.TextValueAccessor, i5.RouterLinkDelegate, i3.RouterLink, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"@charset \\\"UTF-8\\\";ion-content[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;height:50%;margin-top:50px}.titulo[_ngcontent-%COMP%]{font-size:2rem;margin-bottom:2rem}form[_ngcontent-%COMP%]{width:100%;max-width:500px;margin-bottom:2rem;padding:2rem;border-radius:10px;box-shadow:0 0 15px #0000001a}.botones[_ngcontent-%COMP%]{display:flex;justify-content:space-between;margin-top:4rem}\", \".form-container[_ngcontent-%COMP%] {\\n    max-width: 400px;\\n    margin: auto;\\n  }\\n  \\n  .form-title[_ngcontent-%COMP%] {\\n    font-size: 24px;\\n    margin-bottom: 16px;\\n  }\\n  \\n  ion-item[_ngcontent-%COMP%] {\\n    margin-bottom: 16px;\\n  }\"]\n  });\n  return ACitasPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}