{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/services/firestore.service\";\nimport * as i5 from \"@ionic/angular\";\nimport * as i6 from \"@angular/common\";\nfunction ACitasPage_ion_select_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 10);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const doctor_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", doctor_r1.uid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(doctor_r1.nombre);\n  }\n}\nconst _c0 = function () {\n  return [\"/home\"];\n};\nexport class ACitasPage {\n  constructor(fb, auth, router, store, alertcontroller) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.store = store;\n    this.alertcontroller = alertcontroller;\n    this.pathpaciente = \"Pacientes\";\n    this.pathdoctor = \"Doctores\";\n    this.infodoctor = [];\n    this.doctores = [];\n    this.pacientes = [];\n    this.instanceof = cita;\n    this.doctor = {\n      uid: \"\",\n      nombre: \"\",\n      apellido: \"\",\n      cedula: \"\",\n      especialidad: \"\",\n      correo: \"\",\n      contraseña: \"\",\n      rol: \"Doctor\"\n    };\n    this.paciente = {\n      uid: \"\",\n      nombre: \"\",\n      apellido: \"\",\n      cedula: \"\",\n      fnacimiento: \"\",\n      edad: 0,\n      correo: \"\",\n      contraseña: \"\",\n      rol: \"Paciente\"\n    };\n    this.newcita = {\n      doctor: \"\",\n      iddoctor: \"\",\n      paciente: \"\",\n      idpaciente: \"\",\n      especialidad: \"\",\n      fecha: new Date(),\n      hora: 0\n    };\n    this.acitasform = this.fb.group({\n      doctor: new FormControl(\"\", Validators.required),\n      fecha: new FormControl(\"\", Validators.required),\n      hora: new FormControl(\"\", Validators.required)\n    });\n  }\n  ngOnInit() {\n    this.getdoctores();\n  }\n  getdoctores() {\n    this.store.consultar(this.pathdoctor).subscribe(res => {\n      if (res) {\n        this.infodoctor = res;\n      }\n    });\n  }\n  agregar() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var f = this.acitasform.value;\n      const uid = yield this.auth.getUid();\n      this.uiddoctor = f.doctor;\n      this.store.consultar(this.pathdoctor).subscribe(res => {\n        if (res) {\n          this.doctores = res;\n          this.doctores.forEach(docs => __awaiter(this, void 0, void 0, function* () {\n            if (docs.uid == this.uiddoctor) {\n              this.doctor = docs;\n              if (uid) {\n                this.uidpaciente = uid;\n                this.store.consultar(this.pathpaciente).subscribe(pac => {\n                  if (pac) {\n                    this.pacientes = pac;\n                    this.pacientes.forEach(pac2 => __awaiter(this, void 0, void 0, function* () {\n                      if (pac2.uid == this.uidpaciente) {\n                        this.paciente = pac2;\n                        if (this.acitasform.invalid) {\n                          const alert = yield this.alertcontroller.create({\n                            header: \"Datos incompletos\",\n                            message: \"Debe de ingresar todos los campos\"\n                          });\n                          yield alert.present();\n                          return;\n                        } else {\n                          this.newcita.doctor = this.doctor.nombre;\n                          this.newcita.especialidad = this.doctor.especialidad;\n                          this.newcita.fecha = f.fecha;\n                          this.newcita.hora = f.hora;\n                          this.newcita.iddoctor = this.doctor.uid;\n                          this.newcita.idpaciente = this.uidpaciente;\n                          this.newcita.paciente = this.paciente.nombre;\n                          console.log(this.newcita);\n                          this.store.agregar(this.newcita, \"Citas\");\n                          const alert2 = yield this.alertcontroller.create({\n                            header: \"Cita agregado\"\n                          });\n                          yield alert2.present();\n                          this.router.navigate([\"../home\"]);\n                        }\n                      }\n                    }));\n                  }\n                });\n              }\n            }\n          }));\n        }\n      });\n    });\n  }\n}\nACitasPage.ɵfac = function ACitasPage_Factory(t) {\n  return new (t || ACitasPage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FirestoreService), i0.ɵɵdirectiveInject(i5.AlertController));\n};\nACitasPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ACitasPage,\n  selectors: [[\"app-a-citas\"]],\n  decls: 29,\n  vars: 4,\n  consts: [[\"fill\", \"clear\", \"slot\", \"start\", 3, \"routerLink\"], [\"name\", \"arrow-back-outline\"], [3, \"formGroup\", \"ngSubmit\"], [\"position\", \"floating\"], [\"color\", \"danger\"], [\"formControlName\", \"doctor\", \"interface\", \"popover\", \"placeholder\", \"Selecciona Doctor\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"required\", \"\", \"formControlName\", \"fecha\", \"type\", \"number\"], [\"required\", \"\", \"value\", \"number\", \"formControlName\", \"hora\", \"type\", \"time\"], [\"block\", \"\", \"color\", \"primary\", \"type\", \"submit\"], [3, \"value\"]],\n  template: function ACitasPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Agendar Citas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-button\", 0);\n      i0.ɵɵelement(5, \"ion-icon\", 1);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"ion-content\")(7, \"form\", 2);\n      i0.ɵɵlistener(\"ngSubmit\", function ACitasPage_Template_form_ngSubmit_7_listener() {\n        return ctx.agregar();\n      });\n      i0.ɵɵelementStart(8, \"ion-item\")(9, \"ion-label\", 3);\n      i0.ɵɵtext(10, \"Doctor \");\n      i0.ɵɵelementStart(11, \"ion-text\", 4);\n      i0.ɵɵtext(12, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"ion-select\", 5);\n      i0.ɵɵtemplate(14, ACitasPage_ion_select_option_14_Template, 2, 2, \"ion-select-option\", 6);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"ion-item\")(16, \"ion-label\", 3);\n      i0.ɵɵtext(17, \"Fecha\");\n      i0.ɵɵelementStart(18, \"ion-text\", 4);\n      i0.ɵɵtext(19, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(20, \"ion-input\", 7);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"ion-item\")(22, \"ion-label\", 3);\n      i0.ɵɵtext(23, \"Hora \");\n      i0.ɵɵelementStart(24, \"ion-text\", 4);\n      i0.ɵɵtext(25, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(26, \"ion-input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"ion-button\", 9);\n      i0.ɵɵtext(28, \" Aceptar \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.acitasform);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.infodoctor);\n    }\n  },\n  dependencies: [i6.NgForOf, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i5.IonButton, i5.IonContent, i5.IonHeader, i5.IonIcon, i5.IonInput, i5.IonItem, i5.IonLabel, i5.IonSelect, i5.IonSelectOption, i5.IonText, i5.IonTitle, i5.IonToolbar, i5.NumericValueAccessor, i5.SelectValueAccessor, i5.TextValueAccessor, i5.RouterLinkDelegate, i3.RouterLink, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["FormControl","Validators","i0","ACitasPage","constructor","fb","auth","router","store","alertcontroller","cita","uid","nombre","apellido","cedula","especialidad","correo","contraseña","rol","fnacimiento","edad","doctor","iddoctor","paciente","idpaciente","fecha","Date","hora","acitasform","group","required","ngOnInit","getdoctores","consultar","pathdoctor","subscribe","res","infodoctor","agregar","f","value","getUid","uiddoctor","doctores","forEach","docs","__awaiter","uidpaciente","pathpaciente","pac","pacientes","pac2","invalid","alert","create","header","message","present","newcita","console","log","alert2","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\erick\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\mpacientes\\a-citas\\a-citas.page.ts","C:\\Users\\erick\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\mpacientes\\a-citas\\a-citas.page.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\nimport {\n  FormBuilder,\n  FormControl,\n  FormGroup,\n  Validators,\n} from \"@angular/forms\";\nimport { Router } from \"@angular/router\";\nimport { AlertController } from \"@ionic/angular\";\nimport { cita, doctor, paciente } from \"src/app/models/interface\";\nimport { AuthService } from \"src/app/services/auth.service\";\nimport { FirestoreService } from \"src/app/services/firestore.service\";\n\n@Component({\n  selector: \"app-a-citas\",\n  templateUrl: \"./a-citas.page.html\",\n  styleUrls: [\"./a-citas.page.scss\"],\n})\nexport class ACitasPage implements OnInit {\n  public acitasform: FormGroup;\n\n  pathpaciente = \"Pacientes\";\n  pathdoctor = \"Doctores\";\n  uidpaciente: any;\n  uiddoctor: any;\n  infodoctor: doctor[] = [];\n  doctores: doctor[] = [];\n  pacientes: paciente[] = [];\n  private instanceof = cita ;\n\n  doctor: doctor = {\n    uid: \"\",\n    nombre: \"\",\n    apellido: \"\",\n    cedula: \"\",\n    especialidad: \"\",\n    correo: \"\",\n    contraseña: \"\",\n    rol: \"Doctor\",\n  };\n  paciente: paciente = {\n    uid: \"\",\n    nombre: \"\",\n    apellido: \"\",\n    cedula: \"\",\n    fnacimiento: \"\",\n    edad: 0,\n    correo: \"\",\n    contraseña: \"\",\n    rol: \"Paciente\",\n  };\n\n  newcita: cita = {\n    doctor: \"\",\n    iddoctor: \"\",\n    paciente: \"\",\n    idpaciente: \"\",\n    especialidad: \"\",\n    fecha: new Date(),\n    hora: 0,\n  };\n\n  constructor(\n    private fb: FormBuilder,\n    private auth: AuthService,\n    private router: Router,\n    private store: FirestoreService,\n    private alertcontroller: AlertController\n  ) {\n    this.acitasform = this.fb.group({\n      doctor: new FormControl(\"\", Validators.required),\n      fecha: new FormControl(\"\", Validators.required),\n      hora: new FormControl(\"\", Validators.required),\n    });\n  }\n\n  ngOnInit() {\n    this.getdoctores();\n  }\n\n  getdoctores() {\n    this.store.consultar<doctor>(this.pathdoctor).subscribe((res) => {\n      if (res) {\n        this.infodoctor = res;\n      }\n    });\n  }\n\n  async agregar() {\n    var f = this.acitasform.value;\n    const uid = await this.auth.getUid();\n\n    this.uiddoctor = f.doctor;\n\n    this.store.consultar<doctor>(this.pathdoctor).subscribe((res) => {\n      if (res) {\n        this.doctores = res;\n        this.doctores.forEach(async (docs) => {\n          if (docs.uid == this.uiddoctor) {\n            this.doctor = docs;\n            if (uid) {\n              this.uidpaciente = uid;\n              this.store\n                .consultar<paciente>(this.pathpaciente)\n                .subscribe((pac) => {\n                  if (pac) {\n                    this.pacientes = pac;\n                    this.pacientes.forEach(async (pac2) => {\n                      if (pac2.uid == this.uidpaciente) {\n                        this.paciente = pac2;\n                        if (this.acitasform.invalid) {\n                          const alert = await this.alertcontroller.create({\n                            header: \"Datos incompletos\",\n                            message: \"Debe de ingresar todos los campos\",\n                          });\n\n                          await alert.present();\n                          return;\n                        } else {\n                          this.newcita.doctor = this.doctor.nombre;\n                          this.newcita.especialidad = this.doctor.especialidad;\n                          this.newcita.fecha = f.fecha;\n                          this.newcita.hora = f.hora;\n                          this.newcita.iddoctor = this.doctor.uid;\n                          this.newcita.idpaciente = this.uidpaciente;\n                          this.newcita.paciente = this.paciente.nombre;\n\n                          console.log(this.newcita);\n\n                          this.store.agregar(this.newcita, \"Citas\");\n\n                          const alert2 = await this.alertcontroller.create({\n                            header: \"Cita agregado\",\n                          });\n\n                          await alert2.present();\n                          this.router.navigate([\"../home\"]);\n                        }\n                      }\n                    });\n                  }\n                });\n            }\n          }\n        });\n      }\n    });\n  }\n}\n","<ion-header>\n  <ion-toolbar>\n    <ion-title>Agendar Citas</ion-title>\n    <ion-button fill=\"clear\" slot=\"start\" [routerLink]=\"['/home']\"><ion-icon name=\"arrow-back-outline\"></ion-icon>\n    </ion-button>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n\n  <form [formGroup]=\"acitasform\" (ngSubmit)=\"agregar()\">\n    <ion-item>\n      <ion-label position=\"floating\">Doctor <ion-text color=\"danger\">*</ion-text></ion-label>\n      <ion-select formControlName=\"doctor\" interface=\"popover\" placeholder=\"Selecciona Doctor\">\n        <ion-select-option *ngFor=\"let doctor of infodoctor\" [value]=\"doctor.uid\">{{doctor.nombre}}</ion-select-option>\n      </ion-select>\n    </ion-item>\n    <ion-item>\n      <ion-label position=\"floating\">Fecha<ion-text color=\"danger\">*</ion-text></ion-label>\n      <ion-input required formControlName=\"fecha\" type=\"number\"></ion-input>\n    </ion-item>\n    <ion-item>\n      <ion-label position=\"floating\">Hora <ion-text color=\"danger\">*</ion-text></ion-label>\n      <ion-input required value=\"number\" formControlName=\"hora\" type=\"time\"></ion-input>\n    </ion-item>\n    <ion-button block color=\"primary\" type=\"submit\">\n      Aceptar\n    </ion-button>\n  </form>\n\n</ion-content>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}