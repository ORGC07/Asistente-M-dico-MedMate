{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"src/app/services/firestore.services\";\nimport * as i3 from \"src/app/services/auth.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/forms\";\nfunction SetReportesComponent_div_11_ion_select_option_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 21);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const paciente_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", paciente_r3.uid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(paciente_r3.nombre);\n  }\n}\nfunction SetReportesComponent_div_11_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 10)(1, \"ion-item\")(2, \"ion-buttons\", 11)(3, \"ion-button\", 3);\n    i0.ɵɵlistener(\"click\", function SetReportesComponent_div_11_Template_ion_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.enablenewReportes = false);\n    });\n    i0.ɵɵelement(4, \"ion-icon\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"ion-button\", 13);\n    i0.ɵɵlistener(\"click\", function SetReportesComponent_div_11_Template_ion_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r6.guardarRepo());\n    });\n    i0.ɵɵelement(6, \"ion-icon\", 14);\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(7, \"h3\", 8);\n    i0.ɵɵtext(8, \"Agregar informaci\\u00F3n personal\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"ion-item\")(10, \"ion-label\", 15);\n    i0.ɵɵtext(11, \"Nombre Completo:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"ion-select\", 16);\n    i0.ɵɵlistener(\"ngModelChange\", function SetReportesComponent_div_11_Template_ion_select_ngModelChange_12_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r7.newReportes.idpaciente = $event);\n    });\n    i0.ɵɵtemplate(13, SetReportesComponent_div_11_ion_select_option_13_Template, 2, 2, \"ion-select-option\", 17);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(14, \"ion-item\")(15, \"ion-label\", 15);\n    i0.ɵɵtext(16, \"Peso:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"ion-input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function SetReportesComponent_div_11_Template_ion_input_ngModelChange_17_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r8.newReportes.peso = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(18, \"ion-item\")(19, \"ion-label\", 15);\n    i0.ɵɵtext(20, \"Altura:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(21, \"ion-input\", 18);\n    i0.ɵɵlistener(\"ngModelChange\", function SetReportesComponent_div_11_Template_ion_input_ngModelChange_21_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r9.newReportes.altura = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(22, \"ion-item\", 19)(23, \"ion-label\", 15);\n    i0.ɵɵtext(24, \"Medicamentos que consume:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(25, \"ion-textarea\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function SetReportesComponent_div_11_Template_ion_textarea_ngModelChange_25_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r10.newReportes.medicamentos = $event);\n    });\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(26, \"ion-item\", 19)(27, \"ion-label\", 15);\n    i0.ɵɵtext(28, \"Condici\\u00F3n m\\u00E9dica:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(29, \"ion-textarea\", 20);\n    i0.ɵɵlistener(\"ngModelChange\", function SetReportesComponent_div_11_Template_ion_textarea_ngModelChange_29_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r11 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r11.newReportes.condicion = $event);\n    });\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(12);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newReportes.idpaciente);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.infopacientes);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newReportes.peso);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newReportes.altura);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newReportes.medicamentos);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngModel\", ctx_r0.newReportes.condicion);\n  }\n}\nfunction SetReportesComponent_ion_item_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\")(1, \"ion-label\", 22);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"ion-buttons\", 11)(4, \"ion-button\", 3);\n    i0.ɵɵlistener(\"click\", function SetReportesComponent_ion_item_15_Template_ion_button_click_4_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const Reporte_r12 = restoredCtx.$implicit;\n      const ctx_r13 = i0.ɵɵnextContext();\n      ctx_r13.newReportes = Reporte_r12;\n      return i0.ɵɵresetView(ctx_r13.enablenewReportes = true);\n    });\n    i0.ɵɵelement(5, \"ion-icon\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"ion-button\", 3);\n    i0.ɵɵlistener(\"click\", function SetReportesComponent_ion_item_15_Template_ion_button_click_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r14);\n      const Reporte_r12 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r15.deleteReporte(Reporte_r12));\n    });\n    i0.ɵɵelement(7, \"ion-icon\", 24);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const Reporte_r12 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(Reporte_r12.nombre);\n  }\n}\nexport let SetReportesComponent = /*#__PURE__*/(() => {\n  class SetReportesComponent {\n    constructor(menuController, firestoreService, loadingCtrl, toastController, alertController, auth) {\n      this.menuController = menuController;\n      this.firestoreService = firestoreService;\n      this.loadingCtrl = loadingCtrl;\n      this.toastController = toastController;\n      this.alertController = alertController;\n      this.auth = auth;\n      this.almacenarReporte = [];\n      this.pacientes = [];\n      this.doctores = [];\n      this.infopacientes = [];\n      this.reporte = {\n        nombre: \"\",\n        idpaciente: \"\",\n        edad: 0,\n        peso: 0,\n        altura: 0,\n        medicamentos: \"\",\n        condicion: \"\",\n        id: this.firestoreService.getId(),\n        iddoctor: \"\",\n        especialidad: \"\",\n        doctorname: \"\",\n        fecha: new Date()\n      };\n      this.enablenewReportes = false;\n      this.path = \"reportes/\";\n    }\n    ngOnInit() {\n      this.leertRepo();\n      this.getpacientes();\n    }\n    getpacientes() {\n      this.firestoreService.getCollection(\"Pacientes\").subscribe(res => {\n        if (res) {\n          this.infopacientes = res;\n        }\n      });\n    }\n    openMenu() {\n      this.menuController.toggle(\"main\");\n    }\n    guardarRepo() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let reporteCreado = false;\n        const uid = yield this.auth.getUid();\n        this.showLoading();\n        this.firestoreService.getCollection(\"Pacientes\").subscribe(res => {\n          if (res) {\n            this.pacientes = res;\n            this.pacientes.forEach(pac => {\n              if (pac.uid == this.newReportes.idpaciente) {\n                this.firestoreService.getCollection(\"Doctores\").subscribe(res2 => {\n                  this.doctores = res2;\n                  this.doctores.forEach(doc => {\n                    if (doc.uid == uid) {\n                      if (uid) {\n                        this.uiddoctor = uid;\n                        this.newReportes = {\n                          nombre: pac.nombre + \" \" + pac.apellido,\n                          idpaciente: pac.uid,\n                          edad: pac.edad,\n                          peso: this.newReportes.peso,\n                          altura: this.newReportes.altura,\n                          medicamentos: this.newReportes.medicamentos,\n                          condicion: this.newReportes.condicion,\n                          iddoctor: uid,\n                          especialidad: doc.especialidad,\n                          doctorname: doc.nombre + \" \" + doc.apellido,\n                          id: this.firestoreService.getId(),\n                          fecha: new Date()\n                        };\n                        if (!reporteCreado) {\n                          this.firestoreService.createRepo(this.newReportes, this.path, this.newReportes.id).then(res => {\n                            this.loading.dismiss();\n                            this.presentToast(\"Guardado con exito\");\n                          }).catch(error => {\n                            this.presentToast(\"No se pudo guardar\");\n                          });\n                          reporteCreado = true;\n                        }\n                      }\n                    }\n                  });\n                });\n              }\n            });\n          }\n        });\n      });\n    }\n    leertRepo() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.uiddoctor = yield this.auth.getUid();\n        this.firestoreService.getCollection(this.path).subscribe(res => {\n          this.almacenarReporte = [];\n          res.forEach(r => {\n            if (r.iddoctor == this.uiddoctor) {\n              this.reporte = r;\n              this.almacenarReporte.push(r);\n            }\n          });\n        });\n      });\n    }\n    deleteReporte(Reporte) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const alert = yield this.alertController.create({\n          cssClass: \"normal\",\n          header: \"Advertencia\",\n          message: \"¿Seguro que deseas <strong>eliminar</strong> este reporte?\",\n          buttons: [{\n            text: \"Cancelar\",\n            role: \"cancel\",\n            cssClass: \"normal\",\n            handler: () => {\n              console.log(\"Alert canceled\");\n            }\n          }, {\n            text: \"OK\",\n            role: \"confirm\",\n            handler: () => {\n              console.log(\"Alert confirmed\");\n              this.firestoreService.deletetRepo(this.path, Reporte.id).then(res => {\n                this.alertController.dismiss();\n                this.presentToast(\"Eliminado con exito\");\n              }).catch(error => {\n                this.presentToast(\"No se pudo eliminar\");\n              });\n            }\n          }]\n        });\n        yield alert.present();\n      });\n    }\n    nuevo() {\n      this.enablenewReportes = true;\n      this.newReportes = {\n        nombre: \"\",\n        idpaciente: \"\",\n        edad: 0,\n        peso: 0,\n        altura: 0,\n        medicamentos: \"\",\n        condicion: \"\",\n        id: this.firestoreService.getId(),\n        iddoctor: \"\",\n        especialidad: \"\",\n        doctorname: \"\",\n        fecha: new Date()\n      };\n    }\n    showLoading() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.loading = yield this.loadingCtrl.create({\n          cssClass: \"normal\",\n          message: \"Guardando...\",\n          spinner: \"circles\"\n        });\n        yield this.loading.present();\n      });\n    }\n    presentToast(msg) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const toast = yield this.toastController.create({\n          cssClass: \"normal\",\n          message: msg,\n          duration: 2000,\n          icon: \"thumbs-up-outline\",\n          color: \"light\"\n        });\n        yield toast.present();\n      });\n    }\n  }\n  SetReportesComponent.ɵfac = function SetReportesComponent_Factory(t) {\n    return new (t || SetReportesComponent)(i0.ɵɵdirectiveInject(i1.MenuController), i0.ɵɵdirectiveInject(i2.FirestoreService), i0.ɵɵdirectiveInject(i1.LoadingController), i0.ɵɵdirectiveInject(i1.ToastController), i0.ɵɵdirectiveInject(i1.AlertController), i0.ɵɵdirectiveInject(i3.AuthService));\n  };\n  SetReportesComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SetReportesComponent,\n    selectors: [[\"app-set-reportes\"]],\n    decls: 16,\n    vars: 2,\n    consts: [[\"color\", \"principal\"], [1, \"subtitulo\"], [\"slot\", \"start\"], [3, \"click\"], [\"color\", \"blanco\", \"slot\", \"icon-only\", \"name\", \"menu-outline\"], [1, \"header\"], [\"color\", \"dark\", 1, \"normal\", 3, \"click\"], [\"class\", \"new-report\", 4, \"ngIf\"], [1, \"subtitulo\", \"p-3\", \"encabezado\"], [4, \"ngFor\", \"ngForOf\"], [1, \"new-report\"], [\"slot\", \"end\"], [\"slot\", \"icon-only\", \"color\", \"dark\", \"name\", \"close\"], [\"color\", \"color1\", 3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"save-outline\"], [\"position\", \"floating\", 1, \"normal\"], [\"interface\", \"popover\", \"placeholder\", \"Selecciona Paciente\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"type\", \"number\", \"inputmode\", \"numeric\", 1, \"normal\", 3, \"ngModel\", \"ngModelChange\"], [\"counter\", \"true\"], [\"type\", \"text\", \"inputmode\", \"text\", \"maxlength\", \"120\", 1, \"normal\", 3, \"ngModel\", \"ngModelChange\"], [3, \"value\"], [1, \"normal\"], [\"slot\", \"icon-only\", \"name\", \"create-outline\", 1, \"color1\"], [\"slot\", \"icon-only\", \"color\", \"danger\", \"name\", \"trash-outline\"]],\n    template: function SetReportesComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\", 1);\n        i0.ɵɵtext(3, \" Agregar Reporte \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-buttons\", 2)(5, \"ion-button\", 3);\n        i0.ɵɵlistener(\"click\", function SetReportesComponent_Template_ion_button_click_5_listener() {\n          return ctx.openMenu();\n        });\n        i0.ɵɵelement(6, \"ion-icon\", 4);\n        i0.ɵɵelementEnd()()()();\n        i0.ɵɵelementStart(7, \"ion-content\")(8, \"div\", 5)(9, \"ion-button\", 6);\n        i0.ɵɵlistener(\"click\", function SetReportesComponent_Template_ion_button_click_9_listener() {\n          return ctx.nuevo();\n        });\n        i0.ɵɵtext(10, \"Nuevo\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(11, SetReportesComponent_div_11_Template, 30, 6, \"div\", 7);\n        i0.ɵɵelementStart(12, \"ion-card\")(13, \"h3\", 8);\n        i0.ɵɵtext(14, \"Lista de reportes\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, SetReportesComponent_ion_item_15_Template, 8, 1, \"ion-item\", 9);\n        i0.ɵɵelementEnd()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"ngIf\", ctx.enablenewReportes);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.almacenarReporte);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i1.IonButton, i1.IonButtons, i1.IonCard, i1.IonContent, i1.IonHeader, i1.IonIcon, i1.IonInput, i1.IonItem, i1.IonLabel, i1.IonSelect, i1.IonSelectOption, i1.IonTextarea, i1.IonTitle, i1.IonToolbar, i1.NumericValueAccessor, i1.SelectValueAccessor, i1.TextValueAccessor, i5.NgControlStatus, i5.MaxLengthValidator, i5.NgModel],\n    styles: [\".color1[_ngcontent-%COMP%]{color:#00d4ff}ion-content[_ngcontent-%COMP%]{background-color:#f2f;height:calc(100vh - 60px);display:flex;flex-direction:column;justify-content:center}.divider[_ngcontent-%COMP%]{background-color:#e5e5e5;margin-top:.5rem}.item[_ngcontent-%COMP%]{padding:1rem;margin-top:.5rem;border-radius:.5rem;box-shadow:0 0 10px #0000001a;transition:box-shadow .3s ease}.item[_ngcontent-%COMP%]:hover{box-shadow:0 0 20px #0003}h4[_ngcontent-%COMP%]{margin:.25rem 0;font-weight:500;font-size:1rem}ion-select[_ngcontent-%COMP%]{--padding-end: .5rem;font-size:1rem;font-weight:500}.encabezado[_ngcontent-%COMP%]{font-size:1rem;font-weight:700;color:#333;margin-bottom:1rem}.normal[_ngcontent-%COMP%]{font-size:1rem;font-weight:500;color:#333}.color1[_ngcontent-%COMP%]{color:#3880ff}\"]\n  });\n  return SetReportesComponent;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}