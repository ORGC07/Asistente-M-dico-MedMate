{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nlet HomePage = class HomePage {\n  constructor(router, auth, store, priavte, comp) {\n    this.router = router;\n    this.auth = auth;\n    this.store = store;\n    this.infom = {\n      medicamento: \"\",\n      cdias: 0,\n      fecha: \"\",\n      hora: 0,\n      userid: \"\"\n    };\n    this.infoc = {\n      doctor: \"\",\n      iddoctor: \"\",\n      paciente: \"\",\n      idpaciente: \"\",\n      especialidad: \"\",\n      fecha: new Date(),\n      hora: 0\n    };\n    this.drugs = [];\n    this.dates = [];\n  }\n  ngOnInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const uid = yield this.auth.getUid();\n      if (uid) {\n        this.uid = uid;\n        this.medicamentos();\n        this.citas();\n        console.log(\"entro1\");\n        this.comp.menu();\n      }\n    });\n  }\n  menu() {}\n  medicamentos() {\n    const path = \"Medicamentos\";\n    this.store.consultar(path).subscribe(res => {\n      if (res) {\n        this.drugs = [];\n        res.forEach(r => {\n          if (r.userid == this.uid) {\n            this.infom = r;\n            this.drugs.push(this.infom), console.log(this.drugs);\n          }\n        });\n      }\n    });\n  }\n  citas() {\n    const path = \"Citas\";\n    this.store.consultar(path).subscribe(res => {\n      if (res) {\n        this.dates = [];\n        res.forEach(r => {\n          if (r.idpaciente == this.uid) {\n            this.infoc = r;\n            this.dates.push(this.infom), console.log(this.dates);\n          }\n        });\n      }\n    });\n  }\n};\nHomePage = __decorate([Component({\n  selector: \"app-home\",\n  templateUrl: \"./home.page.html\",\n  styleUrls: [\"./home.page.scss\"]\n})], HomePage);\nexport { HomePage };","map":{"version":3,"mappings":";AAAA,SAASA,SAAS,QAA2B,eAAe;AAarD,IAAMC,QAAQ,GAAd,MAAMA,QAAQ;EAqBnBC,YACUC,MAAc,EACdC,IAAiB,EACjBC,KAAuB,EAC/BC,OAAO,EAACC,IAAkB;IAHlB,WAAM,GAANJ,MAAM;IACN,SAAI,GAAJC,IAAI;IACJ,UAAK,GAALC,KAAK;IAvBf,UAAK,GAAe;MAClBG,WAAW,EAAE,EAAE;MACfC,KAAK,EAAE,CAAC;MACRC,KAAK,EAAE,EAAE;MACTC,IAAI,EAAE,CAAC;MACPC,MAAM,EAAE;KACT;IACD,UAAK,GAAS;MACZC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdC,YAAY,EAAE,EAAE;MAChBP,KAAK,EAAE,IAAIQ,IAAI,EAAE;MACjBP,IAAI,EAAE;KACP;IACD,UAAK,GAAU,EAAE;IACjB,UAAK,GAAU,EAAE;EAQd;EAEGQ,QAAQ;;MACZ,MAAMC,GAAG,GAAG,MAAM,IAAI,CAAChB,IAAI,CAACiB,MAAM,EAAE;MACpC,IAAID,GAAG,EAAE;QACP,IAAI,CAACA,GAAG,GAAGA,GAAG;QACd,IAAI,CAACE,YAAY,EAAE;QACnB,IAAI,CAACC,KAAK,EAAE;QACZC,OAAO,CAACC,GAAG,CAAC,QAAQ,CAAC;QACrB,IAAI,CAAClB,IAAI,CAACmB,IAAI,EAAE;;IAEpB,CAAC;;EAEDA,IAAI,IAEJ;EAEAJ,YAAY;IACV,MAAMK,IAAI,GAAG,cAAc;IAC3B,IAAI,CAACtB,KAAK,CAACuB,SAAS,CAAaD,IAAI,CAAC,CAACE,SAAS,CAAEC,GAAG,IAAI;MACvD,IAAIA,GAAG,EAAE;QACP,IAAI,CAACC,KAAK,GAAG,EAAE;QACfD,GAAG,CAACE,OAAO,CAAEC,CAAC,IAAI;UAChB,IAAIA,CAAC,CAACrB,MAAM,IAAI,IAAI,CAACQ,GAAG,EAAE;YACxB,IAAI,CAACc,KAAK,GAAGD,CAAC;YACd,IAAI,CAACF,KAAK,CAACI,IAAI,CAAC,IAAI,CAACD,KAAK,CAAC,EAAEV,OAAO,CAACC,GAAG,CAAC,IAAI,CAACM,KAAK,CAAC;;QAExD,CAAC,CAAC;;IAEN,CAAC,CAAC;EACJ;EACAR,KAAK;IACH,MAAMI,IAAI,GAAG,OAAO;IACpB,IAAI,CAACtB,KAAK,CAACuB,SAAS,CAAOD,IAAI,CAAC,CAACE,SAAS,CAAEC,GAAG,IAAI;MACjD,IAAIA,GAAG,EAAE;QACP,IAAI,CAACM,KAAK,GAAG,EAAE;QACfN,GAAG,CAACE,OAAO,CAAEC,CAAC,IAAI;UAChB,IAAIA,CAAC,CAACjB,UAAU,IAAI,IAAI,CAACI,GAAG,EAAE;YAC5B,IAAI,CAACiB,KAAK,GAAGJ,CAAC;YACd,IAAI,CAACG,KAAK,CAACD,IAAI,CAAC,IAAI,CAACD,KAAK,CAAC,EAAEV,OAAO,CAACC,GAAG,CAAC,IAAI,CAACW,KAAK,CAAC;;QAExD,CAAC,CAAC;;IAEN,CAAC,CAAC;EACJ;CACD;AAvEYnC,QAAQ,eALpBD,SAAS,CAAC;EACTsC,QAAQ,EAAE,UAAU;EACpBC,WAAW,EAAE,kBAAkB;EAC/BC,SAAS,EAAE,CAAC,kBAAkB;CAC/B,CAAC,GACWvC,QAAQ,CAuEpB;SAvEYA,QAAQ","names":["Component","HomePage","constructor","router","auth","store","priavte","comp","medicamento","cdias","fecha","hora","userid","doctor","iddoctor","paciente","idpaciente","especialidad","Date","ngOnInit","uid","getUid","medicamentos","citas","console","log","menu","path","consultar","subscribe","res","drugs","forEach","r","infom","push","dates","infoc","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\erick\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\mpacientes\\home\\home.page.ts"],"sourcesContent":["import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { IonFooter } from '@ionic/angular';\r\nimport { AppComponent } from 'src/app/app.component';\r\nimport { cita, medicacion } from 'src/app/models/interface';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { FirestoreService } from 'src/app/services/firestore.service';\r\n\r\n@Component({\r\n  selector: \"app-home\",\r\n  templateUrl: \"./home.page.html\",\r\n  styleUrls: [\"./home.page.scss\"],\r\n})\r\nexport class HomePage implements OnInit {\r\n  infom: medicacion = {\r\n    medicamento: \"\",\r\n    cdias: 0,\r\n    fecha: \"\",\r\n    hora: 0,\r\n    userid: \"\",\r\n  };\r\n  infoc: cita = {\r\n    doctor: \"\",\r\n    iddoctor: \"\",\r\n    paciente: \"\",\r\n    idpaciente: \"\",\r\n    especialidad: \"\",\r\n    fecha: new Date(),\r\n    hora: 0,\r\n  };\r\n  drugs: any[] = [];\r\n  dates: any[] = [];\r\n  uid: any;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private auth: AuthService,\r\n    private store: FirestoreService,\r\n    priavte comp: AppComponent\r\n  ) {}\r\n\r\n  async ngOnInit() {\r\n    const uid = await this.auth.getUid();\r\n    if (uid) {\r\n      this.uid = uid;\r\n      this.medicamentos();\r\n      this.citas();\r\n      console.log(\"entro1\");\r\n      this.comp.menu();\r\n    }\r\n  }\r\n\r\n  menu() {\r\n    \r\n  }\r\n\r\n  medicamentos() {\r\n    const path = \"Medicamentos\";\r\n    this.store.consultar<medicacion>(path).subscribe((res) => {\r\n      if (res) {\r\n        this.drugs = [];\r\n        res.forEach((r) => {\r\n          if (r.userid == this.uid) {\r\n            this.infom = r;\r\n            this.drugs.push(this.infom), console.log(this.drugs);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n  citas() {\r\n    const path = \"Citas\";\r\n    this.store.consultar<cita>(path).subscribe((res) => {\r\n      if (res) {\r\n        this.dates = [];\r\n        res.forEach((r) => {\r\n          if (r.idpaciente == this.uid) {\r\n            this.infoc = r;\r\n            this.dates.push(this.infom), console.log(this.dates);\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}