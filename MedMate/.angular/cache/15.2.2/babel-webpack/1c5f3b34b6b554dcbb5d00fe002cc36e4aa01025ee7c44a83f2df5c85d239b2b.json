{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, Validators } from \"@angular/forms\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/services/firestore.service\";\nimport * as i5 from \"@ionic/angular\";\nimport * as i6 from \"@angular/common\";\nfunction ACitasPage_ion_select_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-select-option\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const doctor_r1 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", doctor_r1.uid);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(doctor_r1.nombre);\n  }\n}\nconst _c0 = function () {\n  return [\"/home\"];\n};\nexport class ACitasPage {\n  constructor(fb, auth, router, store, alertcontroller) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.store = store;\n    this.alertcontroller = alertcontroller;\n    this.pathpaciente = \"Pacientes\";\n    this.pathdoctor = \"Doctores\";\n    this.infodoctor = [];\n    this.doctores = [];\n    this.pacientes = [];\n    this.doctor = {\n      uid: \"\",\n      nombre: \"\",\n      apellido: \"\",\n      cedula: \"\",\n      especialidad: \"\",\n      correo: \"\",\n      contraseña: \"\",\n      rol: \"Doctor\"\n    };\n    this.paciente = {\n      uid: \"\",\n      nombre: \"\",\n      apellido: \"\",\n      cedula: \"\",\n      fnacimiento: \"\",\n      edad: 0,\n      correo: \"\",\n      contraseña: \"\",\n      rol: \"Paciente\"\n    };\n    this.newcita = {\n      doctor: \"\",\n      iddoctor: \"\",\n      paciente: \"\",\n      idpaciente: \"\",\n      especialidad: \"\",\n      fecha: new Date(),\n      hora: 0\n    };\n    this.acitasform = this.fb.group({\n      doctor: new FormControl(\"\", Validators.required),\n      fecha: new FormControl(\"\", Validators.required),\n      hora: new FormControl(\"\", Validators.required)\n    });\n  }\n  ngOnInit() {\n    this.getdoctores();\n  }\n  getdoctores() {\n    this.store.consultar(this.pathdoctor).subscribe(res => {\n      if (res) {\n        this.infodoctor = res;\n      }\n    });\n  }\n  agregar() {\n    return __awaiter(this, void 0, void 0, function* () {\n      var f = this.acitasform.value;\n      const uid = yield this.auth.getUid();\n      let citaCreada = false;\n      this.uiddoctor = f.doctor;\n      this.store.consultar(this.pathdoctor).subscribe(res => {\n        if (res) {\n          this.doctores = res;\n          this.doctores.forEach(docs => __awaiter(this, void 0, void 0, function* () {\n            if (docs.uid == this.uiddoctor) {\n              this.doctor = docs;\n              if (uid) {\n                this.uidpaciente = uid;\n                this.store.consultar(this.pathpaciente).subscribe(pac => {\n                  if (pac) {\n                    this.pacientes = pac;\n                    this.pacientes.forEach(pac2 => __awaiter(this, void 0, void 0, function* () {\n                      if (pac2.uid == this.uidpaciente) {\n                        this.paciente = pac2;\n                        if (this.acitasform.invalid) {\n                          const alert = yield this.alertcontroller.create({\n                            header: \"Datos incompletos\",\n                            message: \"Debe de ingresar todos los campos\"\n                          });\n                          yield alert.present();\n                          return;\n                        } else {\n                          if (!citaCreada) {\n                            this.newcita.doctor = this.doctor.nombre;\n                            this.newcita.especialidad = this.doctor.especialidad;\n                            this.newcita.fecha = f.fecha;\n                            this.newcita.hora = f.hora;\n                            this.newcita.iddoctor = this.doctor.uid;\n                            this.newcita.idpaciente = this.uidpaciente;\n                            this.newcita.paciente = this.paciente.nombre;\n                            console.log(this.newcita);\n                            this.store.agregar(this.newcita, \"Citas\");\n                            citaCreada = true;\n                            const alert2 = yield this.alertcontroller.create({\n                              header: \"Cita agregado\"\n                            });\n                            yield alert2.present();\n                            this.router.navigate([\"../home\"]);\n                          }\n                        }\n                      }\n                    }));\n                  }\n                });\n              }\n            }\n          }));\n        }\n      });\n    });\n  }\n}\nACitasPage.ɵfac = function ACitasPage_Factory(t) {\n  return new (t || ACitasPage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FirestoreService), i0.ɵɵdirectiveInject(i5.AlertController));\n};\nACitasPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: ACitasPage,\n  selectors: [[\"app-a-citas\"]],\n  decls: 29,\n  vars: 4,\n  consts: [[\"color\", \"principal\"], [\"color\", \"blanco\", \"fill\", \"clear\", \"slot\", \"start\", 3, \"routerLink\"], [\"name\", \"arrow-back-outline\"], [3, \"formGroup\", \"ngSubmit\"], [\"position\", \"floating\"], [\"color\", \"danger\"], [\"formControlName\", \"doctor\", \"interface\", \"popover\", \"placeholder\", \"Selecciona Doctor\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"required\", \"\", \"value\", \"number\", \"formControlName\", \"fecha\", \"type\", \"date\"], [\"required\", \"\", \"value\", \"number\", \"formControlName\", \"hora\", \"type\", \"time\"], [\"block\", \"\", \"color\", \"secundario\", \"type\", \"submit\"], [3, \"value\"]],\n  template: function ACitasPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Agendar Citas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-button\", 1);\n      i0.ɵɵelement(5, \"ion-icon\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"ion-content\")(7, \"form\", 3);\n      i0.ɵɵlistener(\"ngSubmit\", function ACitasPage_Template_form_ngSubmit_7_listener() {\n        return ctx.agregar();\n      });\n      i0.ɵɵelementStart(8, \"ion-item\")(9, \"ion-label\", 4);\n      i0.ɵɵtext(10, \"Doctor \");\n      i0.ɵɵelementStart(11, \"ion-text\", 5);\n      i0.ɵɵtext(12, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(13, \"ion-select\", 6);\n      i0.ɵɵtemplate(14, ACitasPage_ion_select_option_14_Template, 2, 2, \"ion-select-option\", 7);\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelementStart(15, \"ion-item\")(16, \"ion-label\", 4);\n      i0.ɵɵtext(17, \"Fecha \");\n      i0.ɵɵelementStart(18, \"ion-text\", 5);\n      i0.ɵɵtext(19, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(20, \"ion-input\", 8);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(21, \"ion-item\")(22, \"ion-label\", 4);\n      i0.ɵɵtext(23, \"Hora \");\n      i0.ɵɵelementStart(24, \"ion-text\", 5);\n      i0.ɵɵtext(25, \"*\");\n      i0.ɵɵelementEnd()();\n      i0.ɵɵelement(26, \"ion-input\", 9);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(27, \"ion-button\", 10);\n      i0.ɵɵtext(28, \" Aceptar \");\n      i0.ɵɵelementEnd()()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n      i0.ɵɵadvance(3);\n      i0.ɵɵproperty(\"formGroup\", ctx.acitasform);\n      i0.ɵɵadvance(7);\n      i0.ɵɵproperty(\"ngForOf\", ctx.infodoctor);\n    }\n  },\n  dependencies: [i6.NgForOf, i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i5.IonButton, i5.IonContent, i5.IonHeader, i5.IonIcon, i5.IonInput, i5.IonItem, i5.IonLabel, i5.IonSelect, i5.IonSelectOption, i5.IonText, i5.IonTitle, i5.IonToolbar, i5.SelectValueAccessor, i5.TextValueAccessor, i5.RouterLinkDelegate, i3.RouterLink, i1.FormGroupDirective, i1.FormControlName],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAEEA,WAAW,EAEXC,UAAU,QACL,gBAAgB;;;;;;;;;;ICQfC,6CAA0E;IAAAA,YAAiB;IAAAA,iBAAoB;;;;IAA1DA,qCAAoB;IAACA,eAAiB;IAAjBA,sCAAiB;;;;;;ADInG,OAAM,MAAOC,UAAU;EA2CrBC,YACUC,EAAe,EACfC,IAAiB,EACjBC,MAAc,EACdC,KAAuB,EACvBC,eAAgC;IAJhC,OAAE,GAAFJ,EAAE;IACF,SAAI,GAAJC,IAAI;IACJ,WAAM,GAANC,MAAM;IACN,UAAK,GAALC,KAAK;IACL,oBAAe,GAAfC,eAAe;IA7CzB,iBAAY,GAAG,WAAW;IAC1B,eAAU,GAAG,UAAU;IAGvB,eAAU,GAAa,EAAE;IACzB,aAAQ,GAAa,EAAE;IACvB,cAAS,GAAe,EAAE;IAE1B,WAAM,GAAW;MACfC,GAAG,EAAE,EAAE;MACPC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVC,YAAY,EAAE,EAAE;MAChBC,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE,EAAE;MACdC,GAAG,EAAE;KACN;IACD,aAAQ,GAAa;MACnBP,GAAG,EAAE,EAAE;MACPC,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,MAAM,EAAE,EAAE;MACVK,WAAW,EAAE,EAAE;MACfC,IAAI,EAAE,CAAC;MACPJ,MAAM,EAAE,EAAE;MACVC,UAAU,EAAE,EAAE;MACdC,GAAG,EAAE;KACN;IAED,YAAO,GAAS;MACdG,MAAM,EAAE,EAAE;MACVC,QAAQ,EAAE,EAAE;MACZC,QAAQ,EAAE,EAAE;MACZC,UAAU,EAAE,EAAE;MACdT,YAAY,EAAE,EAAE;MAChBU,KAAK,EAAE,IAAIC,IAAI,EAAE;MACjBC,IAAI,EAAE;KACP;IASC,IAAI,CAACC,UAAU,GAAG,IAAI,CAACtB,EAAE,CAACuB,KAAK,CAAC;MAC9BR,MAAM,EAAE,IAAIpB,WAAW,CAAC,EAAE,EAAEC,UAAU,CAAC4B,QAAQ,CAAC;MAChDL,KAAK,EAAE,IAAIxB,WAAW,CAAC,EAAE,EAAEC,UAAU,CAAC4B,QAAQ,CAAC;MAC/CH,IAAI,EAAE,IAAI1B,WAAW,CAAC,EAAE,EAAEC,UAAU,CAAC4B,QAAQ;KAC9C,CAAC;EACJ;EAEAC,QAAQ;IACN,IAAI,CAACC,WAAW,EAAE;EACpB;EAEAA,WAAW;IACT,IAAI,CAACvB,KAAK,CAACwB,SAAS,CAAS,IAAI,CAACC,UAAU,CAAC,CAACC,SAAS,CAAEC,GAAG,IAAI;MAC9D,IAAIA,GAAG,EAAE;QACP,IAAI,CAACC,UAAU,GAAGD,GAAG;;IAEzB,CAAC,CAAC;EACJ;EAEME,OAAO;;MACX,IAAIC,CAAC,GAAG,IAAI,CAACX,UAAU,CAACY,KAAK;MAC7B,MAAM7B,GAAG,GAAG,MAAM,IAAI,CAACJ,IAAI,CAACkC,MAAM,EAAE;MAEpC,IAAIC,UAAU,GAAG,KAAK;MAEtB,IAAI,CAACC,SAAS,GAAGJ,CAAC,CAAClB,MAAM;MAEzB,IAAI,CAACZ,KAAK,CAACwB,SAAS,CAAS,IAAI,CAACC,UAAU,CAAC,CAACC,SAAS,CAAEC,GAAG,IAAI;QAC9D,IAAIA,GAAG,EAAE;UACP,IAAI,CAACQ,QAAQ,GAAGR,GAAG;UACnB,IAAI,CAACQ,QAAQ,CAACC,OAAO,CAAQC,IAAI,IAAIC;YACnC,IAAID,IAAI,CAACnC,GAAG,IAAI,IAAI,CAACgC,SAAS,EAAE;cAC9B,IAAI,CAACtB,MAAM,GAAGyB,IAAI;cAClB,IAAInC,GAAG,EAAE;gBACP,IAAI,CAACqC,WAAW,GAAGrC,GAAG;gBACtB,IAAI,CAACF,KAAK,CACPwB,SAAS,CAAW,IAAI,CAACgB,YAAY,CAAC,CACtCd,SAAS,CAAEe,GAAG,IAAI;kBACjB,IAAIA,GAAG,EAAE;oBACP,IAAI,CAACC,SAAS,GAAGD,GAAG;oBACpB,IAAI,CAACC,SAAS,CAACN,OAAO,CAAQO,IAAI,IAAIL;sBACpC,IAAIK,IAAI,CAACzC,GAAG,IAAI,IAAI,CAACqC,WAAW,EAAE;wBAChC,IAAI,CAACzB,QAAQ,GAAG6B,IAAI;wBACpB,IAAI,IAAI,CAACxB,UAAU,CAACyB,OAAO,EAAE;0BAC3B,MAAMC,KAAK,GAAG,MAAM,IAAI,CAAC5C,eAAe,CAAC6C,MAAM,CAAC;4BAC9CC,MAAM,EAAE,mBAAmB;4BAC3BC,OAAO,EAAE;2BACV,CAAC;0BAEF,MAAMH,KAAK,CAACI,OAAO,EAAE;0BACrB;yBACD,MAAM;0BACL,IAAI,CAAChB,UAAU,EAAE;4BACf,IAAI,CAACiB,OAAO,CAACtC,MAAM,GAAG,IAAI,CAACA,MAAM,CAACT,MAAM;4BACxC,IAAI,CAAC+C,OAAO,CAAC5C,YAAY,GAAG,IAAI,CAACM,MAAM,CAACN,YAAY;4BACpD,IAAI,CAAC4C,OAAO,CAAClC,KAAK,GAAGc,CAAC,CAACd,KAAK;4BAC5B,IAAI,CAACkC,OAAO,CAAChC,IAAI,GAAGY,CAAC,CAACZ,IAAI;4BAC1B,IAAI,CAACgC,OAAO,CAACrC,QAAQ,GAAG,IAAI,CAACD,MAAM,CAACV,GAAG;4BACvC,IAAI,CAACgD,OAAO,CAACnC,UAAU,GAAG,IAAI,CAACwB,WAAW;4BAC1C,IAAI,CAACW,OAAO,CAACpC,QAAQ,GAAG,IAAI,CAACA,QAAQ,CAACX,MAAM;4BAE5CgD,OAAO,CAACC,GAAG,CAAC,IAAI,CAACF,OAAO,CAAC;4BAEzB,IAAI,CAAClD,KAAK,CAAC6B,OAAO,CAAC,IAAI,CAACqB,OAAO,EAAE,OAAO,CAAC;4BAEzCjB,UAAU,GAAG,IAAI;4BAEjB,MAAMoB,MAAM,GAAG,MAAM,IAAI,CAACpD,eAAe,CAAC6C,MAAM,CAAC;8BAC/CC,MAAM,EAAE;6BACT,CAAC;4BAEF,MAAMM,MAAM,CAACJ,OAAO,EAAE;4BACtB,IAAI,CAAClD,MAAM,CAACuD,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC;;;;oBAIzC,CAAC,EAAC;;gBAEN,CAAC,CAAC;;;UAGV,CAAC,EAAC;;MAEN,CAAC,CAAC;IACJ,CAAC;;;;mBAtIU3D,UAAU;AAAA;;QAAVA,UAAU;EAAA4D;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MClBvBjE,kCAAY;MAEGA,6BAAa;MAAAA,iBAAY;MACpCA,qCAA8E;MAAAA,8BAA+C;MAC7HA,iBAAa;MAIjBA,mCAAa;MAEoBA;QAAA,OAAYkE,aAAS;MAAA,EAAC;MACnDlE,gCAAU;MACuBA,wBAAO;MAAAA,oCAAyB;MAAAA,kBAAC;MAAAA,iBAAW;MAC3EA,sCAAyF;MACvFA,yFAA+G;MACjHA,iBAAa;MAEfA,iCAAU;MACuBA,uBAAM;MAAAA,oCAAyB;MAAAA,kBAAC;MAAAA,iBAAW;MAC1EA,gCAAmF;MACrFA,iBAAW;MACXA,iCAAU;MACuBA,sBAAK;MAAAA,oCAAyB;MAAAA,kBAAC;MAAAA,iBAAW;MACzEA,gCAAkF;MACpFA,iBAAW;MACXA,uCAAmD;MACjDA,0BACF;MAAAA,iBAAa;;;MAxBwCA,eAAwB;MAAxBA,uDAAwB;MAOzEA,eAAwB;MAAxBA,0CAAwB;MAIcA,eAAa;MAAbA,wCAAa","names":["FormControl","Validators","i0","ACitasPage","constructor","fb","auth","router","store","alertcontroller","uid","nombre","apellido","cedula","especialidad","correo","contraseña","rol","fnacimiento","edad","doctor","iddoctor","paciente","idpaciente","fecha","Date","hora","acitasform","group","required","ngOnInit","getdoctores","consultar","pathdoctor","subscribe","res","infodoctor","agregar","f","value","getUid","citaCreada","uiddoctor","doctores","forEach","docs","__awaiter","uidpaciente","pathpaciente","pac","pacientes","pac2","invalid","alert","create","header","message","present","newcita","console","log","alert2","navigate","selectors","decls","vars","consts","template","ctx"],"sourceRoot":"","sources":["C:\\Users\\samee\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\medmate\\src\\app\\mpacientes\\a-citas\\a-citas.page.ts","C:\\Users\\samee\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\medmate\\src\\app\\mpacientes\\a-citas\\a-citas.page.html"],"sourcesContent":["import { Component, OnInit } from \"@angular/core\";\r\nimport {\r\n  FormBuilder,\r\n  FormControl,\r\n  FormGroup,\r\n  Validators,\r\n} from \"@angular/forms\";\r\nimport { Router } from \"@angular/router\";\r\nimport { AlertController } from \"@ionic/angular\";\r\nimport { cita, doctor, paciente } from \"src/app/models/interface\";\r\nimport { AuthService } from \"src/app/services/auth.service\";\r\nimport { FirestoreService } from \"src/app/services/firestore.service\";\r\n\r\n@Component({\r\n  selector: \"app-a-citas\",\r\n  templateUrl: \"./a-citas.page.html\",\r\n  styleUrls: [\"./a-citas.page.scss\"],\r\n})\r\nexport class ACitasPage implements OnInit {\r\n  public acitasform: FormGroup;\r\n\r\n  pathpaciente = \"Pacientes\";\r\n  pathdoctor = \"Doctores\";\r\n  uidpaciente: any;\r\n  uiddoctor: any;\r\n  infodoctor: doctor[] = [];\r\n  doctores: doctor[] = [];\r\n  pacientes: paciente[] = [];\r\n\r\n  doctor: doctor = {\r\n    uid: \"\",\r\n    nombre: \"\",\r\n    apellido: \"\",\r\n    cedula: \"\",\r\n    especialidad: \"\",\r\n    correo: \"\",\r\n    contraseña: \"\",\r\n    rol: \"Doctor\",\r\n  };\r\n  paciente: paciente = {\r\n    uid: \"\",\r\n    nombre: \"\",\r\n    apellido: \"\",\r\n    cedula: \"\",\r\n    fnacimiento: \"\",\r\n    edad: 0,\r\n    correo: \"\",\r\n    contraseña: \"\",\r\n    rol: \"Paciente\",\r\n  };\r\n\r\n  newcita: cita = {\r\n    doctor: \"\",\r\n    iddoctor: \"\",\r\n    paciente: \"\",\r\n    idpaciente: \"\",\r\n    especialidad: \"\",\r\n    fecha: new Date(),\r\n    hora: 0,\r\n  };\r\n\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private auth: AuthService,\r\n    private router: Router,\r\n    private store: FirestoreService,\r\n    private alertcontroller: AlertController\r\n  ) {\r\n    this.acitasform = this.fb.group({\r\n      doctor: new FormControl(\"\", Validators.required),\r\n      fecha: new FormControl(\"\", Validators.required),\r\n      hora: new FormControl(\"\", Validators.required),\r\n    });\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.getdoctores();\r\n  }\r\n\r\n  getdoctores() {\r\n    this.store.consultar<doctor>(this.pathdoctor).subscribe((res) => {\r\n      if (res) {\r\n        this.infodoctor = res;\r\n      }\r\n    });\r\n  }\r\n\r\n  async agregar() {\r\n    var f = this.acitasform.value;\r\n    const uid = await this.auth.getUid();\r\n\r\n    let citaCreada = false; \r\n\r\n    this.uiddoctor = f.doctor;\r\n\r\n    this.store.consultar<doctor>(this.pathdoctor).subscribe((res) => {\r\n      if (res) {\r\n        this.doctores = res;\r\n        this.doctores.forEach(async (docs) => {\r\n          if (docs.uid == this.uiddoctor) {\r\n            this.doctor = docs;\r\n            if (uid) {\r\n              this.uidpaciente = uid;\r\n              this.store\r\n                .consultar<paciente>(this.pathpaciente)\r\n                .subscribe((pac) => {\r\n                  if (pac) {\r\n                    this.pacientes = pac;\r\n                    this.pacientes.forEach(async (pac2) => {\r\n                      if (pac2.uid == this.uidpaciente) {\r\n                        this.paciente = pac2;\r\n                        if (this.acitasform.invalid) {\r\n                          const alert = await this.alertcontroller.create({\r\n                            header: \"Datos incompletos\",\r\n                            message: \"Debe de ingresar todos los campos\",\r\n                          });\r\n\r\n                          await alert.present();\r\n                          return;\r\n                        } else {\r\n                          if (!citaCreada) {\r\n                            this.newcita.doctor = this.doctor.nombre;\r\n                            this.newcita.especialidad = this.doctor.especialidad;\r\n                            this.newcita.fecha = f.fecha;\r\n                            this.newcita.hora = f.hora;\r\n                            this.newcita.iddoctor = this.doctor.uid;\r\n                            this.newcita.idpaciente = this.uidpaciente;\r\n                            this.newcita.paciente = this.paciente.nombre;\r\n\r\n                            console.log(this.newcita);\r\n\r\n                            this.store.agregar(this.newcita, \"Citas\");\r\n\r\n                            citaCreada = true; \r\n\r\n                            const alert2 = await this.alertcontroller.create({\r\n                              header: \"Cita agregado\",\r\n                            });\r\n\r\n                            await alert2.present();\r\n                            this.router.navigate([\"../home\"]);\r\n                          }\r\n                        }\r\n                      }\r\n                    });\r\n                  }\r\n                });\r\n            }\r\n          }\r\n        });\r\n      }\r\n    });\r\n  }\r\n}\r\n","<ion-header>\r\n  <ion-toolbar color=\"principal\">\r\n    <ion-title>Agendar Citas</ion-title>\r\n    <ion-button color=\"blanco\" fill=\"clear\" slot=\"start\" [routerLink]=\"['/home']\"><ion-icon name=\"arrow-back-outline\"></ion-icon>\r\n    </ion-button>\r\n  </ion-toolbar>\r\n</ion-header>\r\n\r\n<ion-content>\r\n\r\n  <form [formGroup]=\"acitasform\" (ngSubmit)=\"agregar()\">\r\n    <ion-item>\r\n      <ion-label position=\"floating\">Doctor <ion-text color=\"danger\">*</ion-text></ion-label>\r\n      <ion-select formControlName=\"doctor\" interface=\"popover\" placeholder=\"Selecciona Doctor\">\r\n        <ion-select-option *ngFor=\"let doctor of infodoctor\" [value]=\"doctor.uid\">{{doctor.nombre}}</ion-select-option>\r\n      </ion-select>\r\n    </ion-item>\r\n    <ion-item>\r\n      <ion-label position=\"floating\">Fecha <ion-text color=\"danger\">*</ion-text></ion-label>\r\n      <ion-input required value=\"number\" formControlName=\"fecha\" type=\"date\"></ion-input>\r\n    </ion-item>  \r\n    <ion-item>\r\n      <ion-label position=\"floating\">Hora <ion-text color=\"danger\">*</ion-text></ion-label>\r\n      <ion-input required value=\"number\" formControlName=\"hora\" type=\"time\"></ion-input>\r\n    </ion-item>\r\n    <ion-button block color=\"secundario\" type=\"submit\">\r\n      Aceptar\r\n    </ion-button>\r\n  </form>\r\n\r\n</ion-content>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}