{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, Validators } from '@angular/forms';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"../services/firestore.service\";\nimport * as i5 from \"@ionic/angular\";\nimport * as i6 from \"../app.component\";\nconst _c0 = function () {\n  return [\"/rpaciente\"];\n};\nconst _c1 = function () {\n  return [\"/rdoctor\"];\n};\nexport let LoginPage = /*#__PURE__*/(() => {\n  class LoginPage {\n    constructor(fb, auth, router, store, alertcontroller, menu) {\n      this.fb = fb;\n      this.auth = auth;\n      this.router = router;\n      this.store = store;\n      this.alertcontroller = alertcontroller;\n      this.menu = menu;\n      this.formulariologin = this.fb.group({\n        'user': new FormControl(\"\", Validators.required),\n        'password': new FormControl(\"\", Validators.required)\n      });\n    }\n    ingresar() {\n      var _a;\n      return __awaiter(this, void 0, void 0, function* () {\n        var form = this.formulariologin.value;\n        const res = yield this.auth.login(form.user, form.password);\n        if (res) {\n          console.log(\"Usuario correcto\");\n          const Id = (_a = res.user) === null || _a === void 0 ? void 0 : _a.uid;\n          if (Id) {\n            this.store.getDoc(\"Pacientes\", Id).subscribe(res => {\n              if (res) {\n                this.info = res;\n                if (this.info) {\n                  console.log(this.info);\n                  this.router.navigate(['home']);\n                }\n              }\n            });\n            this.store.getDoc(\"Doctores\", Id).subscribe(res => {\n              if (res) {\n                this.info = res;\n                if (this.info) {\n                  console.log(this.info);\n                  this.router.navigate(['homed']);\n                }\n              }\n            });\n          }\n        }\n        if (this.formulariologin.invalid) {\n          console.log(\"Usuario incorrecto\");\n          const alert = yield this.alertcontroller.create({\n            header: 'Contraseña o usuario incorrecto',\n            message: 'Asegurese que su contraseña y usuario sean correctos o registrese',\n            buttons: ['Aceptar']\n          });\n          yield alert.present();\n          return;\n        }\n      });\n    }\n    ngOnInit() {}\n  }\n  LoginPage.ɵfac = function LoginPage_Factory(t) {\n    return new (t || LoginPage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FirestoreService), i0.ɵɵdirectiveInject(i5.AlertController), i0.ɵɵdirectiveInject(i6.AppComponent));\n  };\n  LoginPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: LoginPage,\n    selectors: [[\"app-login\"]],\n    decls: 30,\n    vars: 5,\n    consts: [[\"color\", \"principal\"], [1, \"login-card\"], [1, \"login-card-content\"], [3, \"formGroup\"], [1, \"login-item\"], [\"color\", \"Contraste\", \"position\", \"floating\", \"for\", \"username\"], [\"id\", \"username\", \"autofocus\", \"on\", \"clearInput\", \"true\", \"clearOnEdit\", \"true\", \"inputmode\", \"text\", \"placeholder\", \"Ingrese su Usuario\", \"required\", \"true\", \"formControlName\", \"user\", \"color\", \"Contraste\"], [\"name\", \"person\", \"color\", \"Contraste\", \"slot\", \"start\", 1, \"ion-align-self-center\"], [\"color\", \"Contraste\", \"position\", \"floating\", \"for\", \"password\"], [\"id\", \"password\", \"placeholder\", \"Ingrese su Contrase\\u00F1a\", \"required\", \"true\", \"formControlName\", \"password\", \"type\", \"password\", \"color\", \"Contraste\"], [\"name\", \"lock-closed\", \"color\", \"Contraste\", \"slot\", \"start\", 1, \"ion-align-self-center\"], [1, \"login-row\"], [\"expand\", \"block\", 1, \"login-button\", 3, \"click\"], [1, \"login-header\"], [\"shape\", \"round\", \"color\", \"dark\", \"expand\", \"block\", 3, \"routerLink\"]],\n    template: function LoginPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\");\n        i0.ɵɵtext(3, \"MedMate\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(4, \"ion-content\")(5, \"ion-card\", 1)(6, \"ion-card-content\", 2)(7, \"form\", 3)(8, \"ion-item\", 4)(9, \"ion-label\", 5);\n        i0.ɵɵtext(10, \"Usuario\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(11, \"ion-input\", 6)(12, \"ion-icon\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"ion-item\", 4)(14, \"ion-label\", 8);\n        i0.ɵɵtext(15, \"Contrase\\u00F1a\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"ion-input\", 9)(17, \"ion-icon\", 10);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(18, \"br\")(19, \"ion-row\", 11);\n        i0.ɵɵelementStart(20, \"ion-button\", 12);\n        i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_button_click_20_listener() {\n          return ctx.ingresar();\n        });\n        i0.ɵɵtext(21, \" Ingresar \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"ion-row\", 11);\n        i0.ɵɵelementStart(23, \"h3\", 13);\n        i0.ɵɵtext(24, \"\\u00BFDesea crear una cuenta?\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"ion-button\", 14);\n        i0.ɵɵtext(26, \" Crear cuenta como Paciente \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(27, \"ion-row\", 11);\n        i0.ɵɵelementStart(28, \"ion-button\", 14);\n        i0.ɵɵtext(29, \" Crear cuenta como Doctor \");\n        i0.ɵɵelementEnd()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.formulariologin);\n        i0.ɵɵadvance(18);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(3, _c0));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(4, _c1));\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i5.IonButton, i5.IonCard, i5.IonCardContent, i5.IonContent, i5.IonHeader, i5.IonIcon, i5.IonInput, i5.IonItem, i5.IonLabel, i5.IonRow, i5.IonTitle, i5.IonToolbar, i5.TextValueAccessor, i5.RouterLinkDelegate, i1.FormGroupDirective, i1.FormControlName, i3.RouterLink],\n    styles: [\".login-card[_ngcontent-%COMP%]{max-width:800px;margin:auto;background-color:#f5f5f5;box-shadow:0 2px 4px #0003;border-radius:10px}.login-card-content[_ngcontent-%COMP%]{padding:40px}.login-item[_ngcontent-%COMP%]{--background: #ffffff;--border-color: #cccccc;--border-radius: 5px;--box-shadow: none}.login-button[_ngcontent-%COMP%]{--background: #314e52;--color: #ffffff;--border-radius: 5px;--box-shadow: none;font-weight:700}.login-row[_ngcontent-%COMP%]{height:20px}.login-header[_ngcontent-%COMP%]{font-weight:700;font-size:18px;margin-bottom:20px;color:#777}.login-item[_ngcontent-%COMP%]{--padding-start: 30px;--padding-end: 30px;--inner-padding-start: 10px;--inner-padding-end: 10px;margin-bottom:20px;background-color:#fff;border-radius:20px;box-shadow:0 0 10px #0003}.login-item[_ngcontent-%COMP%]   ion-label[_ngcontent-%COMP%]{font-size:16px;font-weight:700;margin-bottom:5px}.login-item[_ngcontent-%COMP%]   ion-icon[_ngcontent-%COMP%]{font-size:18px;margin-right:10px;margin-top:4px}.login-item[_ngcontent-%COMP%]   ion-input[_ngcontent-%COMP%]{font-size:16px;padding:var(--inner-padding-start) var(--inner-padding-end)}\"]\n  });\n  return LoginPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}