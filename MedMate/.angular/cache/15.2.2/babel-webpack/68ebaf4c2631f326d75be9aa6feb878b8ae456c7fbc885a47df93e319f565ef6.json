{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"src/app/services/firestore.service\";\nimport * as i4 from \"src/app/app.component\";\nimport * as i5 from \"@ionic/angular\";\nimport * as i6 from \"@angular/common\";\nfunction HomePage_ion_item_group_7_ion_card_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 7)(1, \"ion-card-header\")(2, \"ion-card-title\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ion-card-content\")(5, \"h4\")(6, \"b\");\n    i0.ɵɵtext(7, \"Hora:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const drug_r3 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Medicamento: \", drug_r3.medicamento, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", drug_r3.hora, \"\");\n  }\n}\nfunction HomePage_ion_item_group_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item-group\")(1, \"ion-item-divider\", 4)(2, \"ion-label\", 5)(3, \"h1\");\n    i0.ɵɵtext(4, \"Medicamentos\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(5, HomePage_ion_item_group_7_ion_card_5_Template, 9, 2, \"ion-card\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.drugs);\n  }\n}\nfunction HomePage_ion_item_group_8_ion_card_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-card\", 7)(1, \"ion-card-header\")(2, \"ion-card-title\", 8);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ion-card-content\")(5, \"h4\")(6, \"b\");\n    i0.ɵɵtext(7, \"Doctor:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"h4\")(10, \"b\");\n    i0.ɵɵtext(11, \"Fecha:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"h4\")(14, \"b\");\n    i0.ɵɵtext(15, \"Hora:\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const date_r5 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Especialidad: \", date_r5.especialidad, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", date_r5.doctor, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", date_r5.fecha, \"\");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", date_r5.hora, \"\");\n  }\n}\nfunction HomePage_ion_item_group_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item-group\")(1, \"ion-item-divider\", 4)(2, \"ion-label\", 5)(3, \"h1\");\n    i0.ɵɵtext(4, \"Pr\\u00F3ximas citas\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵtemplate(5, HomePage_ion_item_group_8_ion_card_5_Template, 17, 4, \"ion-card\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r1.dates);\n  }\n}\nconst fecha = new Date(); // crea un objeto Date con la fecha y hora actual del sistema\nconst horasistema = fecha.getHours(); // obtiene la hora actual (en formato de 24 horas)\nconst minutossistema = fecha.getMinutes(); // obtiene los minutos actuales\nexport let HomePage = /*#__PURE__*/(() => {\n  class HomePage {\n    constructor(router, auth, store, comp, alertController) {\n      this.router = router;\n      this.auth = auth;\n      this.store = store;\n      this.comp = comp;\n      this.alertController = alertController;\n      this.infom = {\n        medicamento: \"\",\n        cdias: 0,\n        fecha: \"\",\n        hora: 0,\n        userid: \"\",\n        id: \"\"\n      };\n      this.infoc = {\n        doctor: \"\",\n        iddoctor: \"\",\n        paciente: \"\",\n        idpaciente: \"\",\n        especialidad: \"\",\n        fecha: new Date(),\n        hora: 0,\n        id: \"\",\n        estado: \"\"\n      };\n      this.info = null;\n      this.drugs = [];\n      this.dates = [];\n    }\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const uid = yield this.auth.getUid();\n        if (uid) {\n          this.uid = uid;\n          this.medicamentos();\n          this.citas();\n          console.log(\"entro1\");\n          this.comp.menu();\n          const path = \"Pacientes\";\n          this.store.getDoc(path, uid).subscribe(res => __awaiter(this, void 0, void 0, function* () {\n            if (res) {\n              this.info = res;\n              console.log(this.info);\n              const alert = yield this.alertController.create({\n                header: \"Bienvenido\",\n                message: this.info.nombre + \" \" + this.info.apellido,\n                buttons: [\"Aceptar\"]\n              });\n              yield alert.present();\n              return;\n            }\n          }));\n        }\n      });\n    }\n    medicamentos() {\n      const path = 'Medicamentos';\n      this.store.consultar(path).subscribe(res => {\n        if (res) {\n          this.drugs = [];\n          res.filter(med => med.userid == this.uid) // Filtrar medicamentos del usuario actual\n          .sort((a, b) => {\n            // Ordenar por hora más cercana a la hora actual\n            const horaA = new Date(a.fecha + ' ' + a.hora + ':00').getTime();\n            const horaB = new Date(b.fecha + ' ' + b.hora + ':00').getTime();\n            return Math.abs(horaA - fecha.getTime()) - Math.abs(horaB - fecha.getTime());\n          }).slice(0, 2) // Mostrar solo los dos medicamentos más cercanos a la hora actual\n          .forEach(med => this.drugs.push(med));\n          console.log(this.drugs);\n        }\n      });\n    }\n    citas() {\n      const path = 'Citas';\n      this.store.consultar(path).subscribe(res => {\n        if (res) {\n          this.dates = [];\n          res.filter(cita => cita.idpaciente == this.uid && cita.estado == \"Aceptada\") // Filtrar citas del usuario actual\n          .filter(cita => {\n            const fechaCita = new Date(cita.fecha + ' ' + cita.hora + ':00');\n            if (fechaCita.getTime() == fecha.getTime()) {\n              // Si la cita es para hoy, solo mostrar si la hora es mayor que la hora actual\n              return cita.hora > horasistema;\n            } else if (fechaCita.getTime() > fecha.getTime()) {\n              // Si la cita es para otro día, mostrar solo si la fecha no ha pasado\n              return true;\n            } else {\n              // Si la cita es para otro día y la fecha ya pasó, no mostrar\n              return false;\n            }\n          }).sort((a, b) => {\n            // Ordenar por hora más cercana a la hora actual\n            const horaA = new Date(a.fecha + ' ' + a.hora + ':00').getTime();\n            const horaB = new Date(b.fecha + ' ' + b.hora + ':00').getTime();\n            return Math.abs(horaA - fecha.getTime()) - Math.abs(horaB - fecha.getTime());\n          }).slice(0, 2) // Mostrar solo las dos citas más cercanas a la hora actual\n          .forEach(cita => this.dates.push(cita));\n          console.log(this.dates);\n        }\n      });\n    }\n  }\n  HomePage.ɵfac = function HomePage_Factory(t) {\n    return new (t || HomePage)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.FirestoreService), i0.ɵɵdirectiveInject(i4.AppComponent), i0.ɵɵdirectiveInject(i5.AlertController));\n  };\n  HomePage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomePage,\n    selectors: [[\"app-home\"]],\n    decls: 9,\n    vars: 2,\n    consts: [[\"color\", \"principal\"], [\"slot\", \"start\"], [1, \"ion-padding\", \"custom-content\"], [4, \"ngIf\"], [1, \"custom-divider\"], [1, \"subtitle\", \"p-3\", \"header\"], [\"class\", \"custom-card\", 4, \"ngFor\", \"ngForOf\"], [1, \"custom-card\"], [1, \"normal\"]],\n    template: function HomePage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Home\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-buttons\", 1);\n        i0.ɵɵelement(5, \"ion-menu-button\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\", 2);\n        i0.ɵɵtemplate(7, HomePage_ion_item_group_7_Template, 6, 1, \"ion-item-group\", 3);\n        i0.ɵɵtemplate(8, HomePage_ion_item_group_8_Template, 6, 1, \"ion-item-group\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngIf\", ctx.drugs);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dates);\n      }\n    },\n    dependencies: [i6.NgForOf, i6.NgIf, i5.IonButtons, i5.IonCard, i5.IonCardContent, i5.IonCardHeader, i5.IonCardTitle, i5.IonContent, i5.IonHeader, i5.IonItemDivider, i5.IonItemGroup, i5.IonLabel, i5.IonMenuButton, i5.IonTitle, i5.IonToolbar]\n  });\n  return HomePage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}