{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"src/app/services/auth.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"src/app/services/firestore.service\";\nimport * as i4 from \"@ionic/angular\";\nimport * as i5 from \"@angular/common\";\nfunction VcitasPage_ion_item_group_8_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"ion-item\", 6)(1, \"ion-label\")(2, \"h2\");\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"h4\");\n    i0.ɵɵelement(5, \"br\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"h4\");\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"h4\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(11, \"ion-buttons\", 7)(12, \"ion-button\", 8);\n    i0.ɵɵlistener(\"click\", function VcitasPage_ion_item_group_8_ion_item_1_Template_ion_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const cita_r2 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext(2);\n      return i0.ɵɵresetView(ctx_r3.delete(cita_r2));\n    });\n    i0.ɵɵelement(13, \"ion-icon\", 9);\n    i0.ɵɵelementEnd()()();\n  }\n  if (rf & 2) {\n    const cita_r2 = ctx.$implicit;\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"Dr. \", cita_r2.doctor, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", cita_r2.especialidad, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cita_r2.fecha);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(cita_r2.hora);\n  }\n}\nfunction VcitasPage_ion_item_group_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-item-group\");\n    i0.ɵɵtemplate(1, VcitasPage_ion_item_group_8_ion_item_1_Template, 14, 4, \"ion-item\", 5);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.citas);\n  }\n}\nconst _c0 = function () {\n  return [\"/home\"];\n};\nexport class VcitasPage {\n  constructor(auth, router, store, loadingCtrl, toastController, alertController) {\n    this.auth = auth;\n    this.router = router;\n    this.store = store;\n    this.loadingCtrl = loadingCtrl;\n    this.toastController = toastController;\n    this.alertController = alertController;\n    this.citas = [];\n    this.infoc = {\n      doctor: \"\",\n      iddoctor: \"\",\n      paciente: \"\",\n      idpaciente: \"\",\n      especialidad: \"\",\n      fecha: new Date(),\n      hora: 0,\n      id: \"\"\n    };\n    this.path = \"Citas\";\n  }\n  ngOnInit() {\n    return __awaiter(this, void 0, void 0, function* () {\n      const uid = yield this.auth.getUid();\n      if (uid) {\n        this.uid = uid;\n        this.cita();\n      }\n    });\n  }\n  cita() {\n    this.store.consultar(this.path).subscribe(res => {\n      if (res) {\n        this.citas = [];\n        res.forEach(r => {\n          if (r.idpaciente == this.uid) {\n            this.infoc = r;\n            this.citas.push(this.infoc);\n          }\n        });\n      }\n    });\n  }\n  delete(medicamento) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const alert = yield this.alertController.create({\n        cssClass: \"normal\",\n        header: \"Advertencia\",\n        message: \"¿Seguro que deseas <strong>eliminar</strong> esta cita?\",\n        buttons: [{\n          text: \"Cancelar\",\n          role: \"cancel\",\n          cssClass: \"normal\",\n          handler: () => {\n            console.log(\"Alert canceled\");\n          }\n        }, {\n          text: \"OK\",\n          role: \"confirm\",\n          handler: () => {\n            console.log(\"Alert confirmed\");\n            this.store.deletedoc(this.path, medicamento.id).then(res => {\n              this.alertController.dismiss();\n              this.presentToast(\"Eliminado con exito\");\n            }).catch(error => {\n              this.presentToast(\"No se pudo eliminar\");\n            });\n          }\n        }]\n      });\n      yield alert.present();\n    });\n  }\n  showLoading() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.loading = yield this.loadingCtrl.create({\n        cssClass: \"normal\",\n        message: \"Guardando...\",\n        spinner: \"circles\"\n      });\n      yield this.loading.present();\n    });\n  }\n  presentToast(msg) {\n    return __awaiter(this, void 0, void 0, function* () {\n      const toast = yield this.toastController.create({\n        cssClass: \"normal\",\n        message: msg,\n        duration: 2000,\n        icon: \"thumbs-up-outline\",\n        color: \"light\"\n      });\n      yield toast.present();\n    });\n  }\n}\nVcitasPage.ɵfac = function VcitasPage_Factory(t) {\n  return new (t || VcitasPage)(i0.ɵɵdirectiveInject(i1.AuthService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FirestoreService), i0.ɵɵdirectiveInject(i4.LoadingController), i0.ɵɵdirectiveInject(i4.ToastController), i0.ɵɵdirectiveInject(i4.AlertController));\n};\nVcitasPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: VcitasPage,\n  selectors: [[\"app-vcitas\"]],\n  decls: 9,\n  vars: 3,\n  consts: [[\"color\", \"principal\"], [\"color\", \"blanco\", \"fill\", \"clear\", \"slot\", \"start\", 3, \"routerLink\"], [\"name\", \"arrow-back-outline\"], [\"color\", \"blanco\", 1, \"ion-padding\"], [4, \"ngIf\"], [\"color\", \"relleno\", \"color\", \"relleno\", 4, \"ngFor\", \"ngForOf\"], [\"color\", \"relleno\", \"color\", \"relleno\"], [\"slot\", \"end\"], [3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"trash-outline\"]],\n  template: function VcitasPage_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\");\n      i0.ɵɵtext(3, \"Citas\");\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(4, \"ion-button\", 1);\n      i0.ɵɵelement(5, \"ion-icon\", 2);\n      i0.ɵɵelementEnd()()();\n      i0.ɵɵelementStart(6, \"ion-content\")(7, \"ion-content\", 3);\n      i0.ɵɵtemplate(8, VcitasPage_ion_item_group_8_Template, 2, 1, \"ion-item-group\", 4);\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n      i0.ɵɵadvance(4);\n      i0.ɵɵproperty(\"ngIf\", ctx.citas);\n    }\n  },\n  dependencies: [i5.NgForOf, i5.NgIf, i4.IonButton, i4.IonButtons, i4.IonContent, i4.IonHeader, i4.IonIcon, i4.IonItem, i4.IonItemGroup, i4.IonLabel, i4.IonTitle, i4.IonToolbar, i4.RouterLinkDelegate, i2.RouterLink],\n  styles: [\"\\n/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n});","map":{"version":3,"mappings":"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","names":["i0","VcitasPage","constructor","auth","router","store","loadingCtrl","toastController","alertController","doctor","iddoctor","paciente","idpaciente","especialidad","fecha","Date","hora","id","ngOnInit","uid","getUid","cita","consultar","path","subscribe","res","citas","forEach","r","infoc","push","delete","medicamento","alert","create","cssClass","header","message","buttons","text","role","handler","console","log","deletedoc","then","dismiss","presentToast","catch","error","present","showLoading","loading","spinner","msg","toast","duration","icon","color","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\erick\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\mpacientes\\vcitas\\vcitas.page.html","C:\\Users\\erick\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\mpacientes\\vcitas\\vcitas.page.ts"],"sourcesContent":["<ion-header>\n  <ion-toolbar color=\"principal\">\n    <ion-title>Citas</ion-title>\n    <ion-button color=\"blanco\" fill=\"clear\" slot=\"start\" [routerLink]=\"['/home']\"><ion-icon\n        name=\"arrow-back-outline\"></ion-icon>\n    </ion-button>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <ion-content class=\"ion-padding\" color=\"blanco\">\n    <ion-item-group *ngIf=\"citas\">\n      <ion-item color=\"relleno\" *ngFor=\"let cita of citas\" color=\"relleno\">\n        <ion-label>\n          <h2>Dr. {{cita.doctor}}</h2>\n          <h4> <br> {{cita.especialidad}}</h4>\n          <h4>{{cita.fecha}}</h4>\n          <h4>{{cita.hora}}</h4>\n        </ion-label>\n        <ion-buttons slot=\"end\">\n          <ion-button (click)=\"delete(cita)\">\n            <ion-icon slot=\"icon-only\" name=\"trash-outline\"></ion-icon>\n          </ion-button>\n        </ion-buttons>\n      </ion-item>\n    </ion-item-group>\n  </ion-content>\n","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AlertController, LoadingController, ToastController } from '@ionic/angular';\nimport { cita, medicacion } from 'src/app/models/interface';\nimport { AuthService } from 'src/app/services/auth.service';\nimport { FirestoreService } from 'src/app/services/firestore.service';\n\n@Component({\n  selector: \"app-vcitas\",\n  templateUrl: \"./vcitas.page.html\",\n  styleUrls: [\"./vcitas.page.scss\"],\n})\nexport class VcitasPage implements OnInit {\n  citas: any[] = [];\n  infoc: cita = {\n    doctor: \"\",\n    iddoctor: \"\",\n    paciente: \"\",\n    idpaciente: \"\",\n    especialidad: \"\",\n    fecha: new Date(),\n    hora: 0,\n    id: \"\",\n  };\n  uid: any;\n  loading: any;\n\n  path = \"Citas\";\n\n  constructor(\n    private auth: AuthService,\n    private router: Router,\n    private store: FirestoreService,\n    private loadingCtrl: LoadingController,\n    private toastController: ToastController,\n    private alertController: AlertController\n  ) {}\n\n  async ngOnInit() {\n    const uid = await this.auth.getUid();\n    if (uid) {\n      this.uid = uid;\n      this.cita();\n    }\n  }\n\n  cita() {\n    this.store.consultar<cita>(this.path).subscribe((res) => {\n      if (res) {\n        this.citas = [];\n        res.forEach((r) => {\n          if (r.idpaciente == this.uid) {\n            this.infoc = r;\n            this.citas.push(this.infoc);\n          }\n        });\n      }\n    });\n  }\n\n  async delete(medicamento: medicacion) {\n    const alert = await this.alertController.create({\n      cssClass: \"normal\",\n      header: \"Advertencia\",\n      message: \"¿Seguro que deseas <strong>eliminar</strong> esta cita?\",\n      buttons: [\n        {\n          text: \"Cancelar\",\n          role: \"cancel\",\n          cssClass: \"normal\",\n          handler: () => {\n            console.log(\"Alert canceled\");\n          },\n        },\n        {\n          text: \"OK\",\n          role: \"confirm\",\n          handler: () => {\n            console.log(\"Alert confirmed\");\n            this.store\n              .deletedoc(this.path, medicamento.id)\n              .then((res) => {\n                this.alertController.dismiss();\n                this.presentToast(\"Eliminado con exito\");\n              })\n              .catch((error) => {\n                this.presentToast(\"No se pudo eliminar\");\n              });\n          },\n        },\n      ],\n    });\n    await alert.present();\n  }\n\n  async showLoading() {\n    this.loading = await this.loadingCtrl.create({\n      cssClass: \"normal\",\n      message: \"Guardando...\",\n      spinner: \"circles\",\n    });\n\n    await this.loading.present();\n  }\n  async presentToast(msg: string) {\n    const toast = await this.toastController.create({\n      cssClass: \"normal\",\n      message: msg,\n      duration: 2000,\n      icon: \"thumbs-up-outline\",\n      color: \"light\",\n    });\n\n    await toast.present();\n  }\n}\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}