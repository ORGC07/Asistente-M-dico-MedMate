{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, Validators } from '@angular/forms';\nimport { LocalNotifications } from \"@capacitor/local-notifications\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"src/app/services/auth.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"src/app/services/firestore.service\";\nimport * as i5 from \"@ionic/angular\";\nconst _c0 = function () {\n  return [\"/home\"];\n};\nexport let MedicacionPage = /*#__PURE__*/(() => {\n  class MedicacionPage {\n    constructor(fb, auth, router, store, alertcontroller) {\n      this.fb = fb;\n      this.auth = auth;\n      this.router = router;\n      this.store = store;\n      this.alertcontroller = alertcontroller;\n      this.newmedicamento = {\n        medicamento: \"\",\n        cdias: 0,\n        fecha: \"\",\n        hora: 0,\n        userid: \"\",\n        id: this.store.getId()\n      };\n      this.medicamentoform = this.fb.group({\n        'medicamento': new FormControl(\"\", Validators.required),\n        'fecha': new FormControl(\"\", Validators.required),\n        'hora': new FormControl(\"\", Validators.required)\n      });\n    }\n    ingresar() {\n      var _a;\n      return __awaiter(this, void 0, void 0, function* () {\n        const uid = yield this.auth.getUid();\n        if (uid) {\n          this.uid = uid;\n        }\n        const path = \"Pacientes\";\n        this.store.getDoc(path, this.uid).subscribe(res => {\n          if (res) {\n            this.info = res;\n          }\n        });\n        if (((_a = this.info) === null || _a === void 0 ? void 0 : _a.uid) == this.uid) {\n          var f = this.medicamentoform.value;\n          if (this.medicamentoform.invalid) {\n            const alert = yield this.alertcontroller.create({\n              header: 'Datos incompletos',\n              message: 'Debe de ingresar todos los campos'\n            });\n            yield alert.present();\n            return;\n          } else {\n            this.newmedicamento.medicamento = f.medicamento, this.newmedicamento.cdias = f.fe;\n            this.newmedicamento.hora = f.hora;\n            this.newmedicamento.fecha = f.fecha;\n            this.newmedicamento.userid = this.uid;\n            this.newmedicamento.id = this.store.getId();\n            console.log(this.newmedicamento);\n            let notification = {\n              id: 1,\n              title: \"Recordatorio\",\n              body: \"¡Es hora de tomarte la medicina!\" + this.newmedicamento.medicamento,\n              schedule: {\n                on: {\n                  year: 2023,\n                  month: 4,\n                  day: 7,\n                  hour: 17,\n                  minute: 30,\n                  second: 0\n                }\n              },\n              sound: 'beep.aiff',\n              actions: [{\n                id: \"yes\",\n                title: \"Sí\"\n              }, {\n                id: \"no\",\n                title: \"No\"\n              }]\n            };\n            LocalNotifications.schedule({\n              notifications: [notification]\n            });\n            this.store.createDoc(this.newmedicamento, \"Medicamentos\", this.newmedicamento.id);\n            const alert2 = yield this.alertcontroller.create({\n              header: 'Medicamento agregado'\n            });\n            yield alert2.present();\n            this.router.navigate(['../home']);\n          }\n        }\n      });\n    }\n    ngOnInit() {}\n  }\n  MedicacionPage.ɵfac = function MedicacionPage_Factory(t) {\n    return new (t || MedicacionPage)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.AuthService), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.FirestoreService), i0.ɵɵdirectiveInject(i5.AlertController));\n  };\n  MedicacionPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MedicacionPage,\n    selectors: [[\"app-medicacion\"]],\n    decls: 34,\n    vars: 3,\n    consts: [[\"color\", \"principal\"], [\"color\", \"blanco\", \"fill\", \"clear\", \"slot\", \"start\", 3, \"routerLink\"], [\"name\", \"arrow-back-outline\"], [1, \"container\"], [1, \"titulo\"], [1, \"formulario\", 3, \"formGroup\", \"ngSubmit\"], [\"position\", \"stacked\"], [\"color\", \"danger\"], [\"required\", \"\", \"formControlName\", \"medicamento\", \"type\", \"text\"], [\"required\", \"\", \"formControlName\", \"fecha\", \"type\", \"date\"], [\"required\", \"\", \"formControlName\", \"hora\", \"type\", \"time\"], [1, \"botones\"], [\"color\", \"secondary\", \"expand\", \"block\", \"type\", \"submit\"], [\"color\", \"light\", \"expand\", \"block\", \"type\", \"reset\"]],\n    template: function MedicacionPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\");\n        i0.ɵɵtext(3, \"Medicacion\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-button\", 1);\n        i0.ɵɵelement(5, \"ion-icon\", 2);\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\")(7, \"div\", 3)(8, \"h1\", 4);\n        i0.ɵɵtext(9, \"Ingresar Medicamento\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"form\", 5);\n        i0.ɵɵlistener(\"ngSubmit\", function MedicacionPage_Template_form_ngSubmit_10_listener() {\n          return ctx.ingresar();\n        });\n        i0.ɵɵelementStart(11, \"ion-item\")(12, \"ion-label\", 6);\n        i0.ɵɵtext(13, \"Medicamento \");\n        i0.ɵɵelementStart(14, \"ion-text\", 7);\n        i0.ɵɵtext(15, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(16, \"ion-input\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"ion-item\")(18, \"ion-label\", 6);\n        i0.ɵɵtext(19, \"Fecha \");\n        i0.ɵɵelementStart(20, \"ion-text\", 7);\n        i0.ɵɵtext(21, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(22, \"ion-input\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"ion-item\")(24, \"ion-label\", 6);\n        i0.ɵɵtext(25, \"Hora \");\n        i0.ɵɵelementStart(26, \"ion-text\", 7);\n        i0.ɵɵtext(27, \"*\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelement(28, \"ion-input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 11)(30, \"ion-button\", 12);\n        i0.ɵɵtext(31, \" Aceptar \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"ion-button\", 13);\n        i0.ɵɵtext(33, \" Cancelar \");\n        i0.ɵɵelementEnd()()()()();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction0(2, _c0));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.medicamentoform);\n      }\n    },\n    dependencies: [i1.ɵNgNoValidate, i1.NgControlStatus, i1.NgControlStatusGroup, i1.RequiredValidator, i5.IonButton, i5.IonContent, i5.IonHeader, i5.IonIcon, i5.IonInput, i5.IonItem, i5.IonLabel, i5.IonText, i5.IonTitle, i5.IonToolbar, i5.TextValueAccessor, i5.RouterLinkDelegate, i3.RouterLink, i1.FormGroupDirective, i1.FormControlName],\n    styles: [\"@charset \\\"UTF-8\\\";.container[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center;height:50%;margin-top:50px}.titulo[_ngcontent-%COMP%]{font-size:2rem;margin-bottom:2rem}.formulario[_ngcontent-%COMP%]{width:100%;max-width:500px;margin-bottom:2rem;padding:2rem;border-radius:10px;box-shadow:0 0 15px #0000001a}.botones[_ngcontent-%COMP%]{display:flex;justify-content:space-between;margin-top:4rem}\"]\n  });\n  return MedicacionPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}