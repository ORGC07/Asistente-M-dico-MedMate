{"ast":null,"code":"import { __awaiter, __decorate } from \"tslib\";\nimport { Component } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { LocalNotifications } from \"@capacitor/local-notifications\";\nlet MedicacionPage = class MedicacionPage {\n  constructor(fb, auth, router, store, alertcontroller) {\n    this.fb = fb;\n    this.auth = auth;\n    this.router = router;\n    this.store = store;\n    this.alertcontroller = alertcontroller;\n    this.newmedicamento = {\n      medicamento: \"\",\n      cdias: 0,\n      fecha: \"\",\n      hora: 0,\n      userid: \"\",\n      nota: \"\",\n      id: this.store.getId()\n    };\n    this.medicamentoform = this.fb.group({\n      'medicamento': new FormControl(\"\", Validators.required),\n      'nota': new FormControl(\"\", Validators.required),\n      'fecha': new FormControl(\"\", Validators.required),\n      'hora': new FormControl(\"\", Validators.required)\n    });\n  }\n  ingresar() {\n    var _a;\n    return __awaiter(this, void 0, void 0, function* () {\n      const uid = yield this.auth.getUid();\n      if (uid) {\n        this.uid = uid;\n      }\n      const path = \"Pacientes\";\n      this.store.getDoc(path, this.uid).subscribe(res => {\n        if (res) {\n          this.info = res;\n        }\n      });\n      if (((_a = this.info) === null || _a === void 0 ? void 0 : _a.uid) == this.uid) {\n        var f = this.medicamentoform.value;\n        if (this.medicamentoform.invalid) {\n          const alert = yield this.alertcontroller.create({\n            header: 'Datos incompletos',\n            message: 'Debe de ingresar todos los campos'\n          });\n          yield alert.present();\n          return;\n        } else {\n          this.newmedicamento.medicamento = f.medicamento, this.newmedicamento.cdias = f.fe;\n          this.newmedicamento.hora = f.hora;\n          this.newmedicamento.fecha = f.fecha;\n          this.newmedicamento.nota = f.nota;\n          this.newmedicamento.userid = this.uid;\n          this.newmedicamento.id = this.store.getId();\n          console.log(this.newmedicamento);\n          let notification = {\n            id: 1,\n            title: \"Recordatorio\",\n            body: \"¡Es hora de tomarte la medicina!\" + this.newmedicamento.medicamento,\n            schedule: {\n              on: {\n                year: 2023,\n                month: 4,\n                day: 7,\n                hour: 17,\n                minute: 30,\n                second: 0\n              }\n            },\n            sound: 'beep.aiff',\n            actions: [{\n              id: \"yes\",\n              title: \"Sí\"\n            }, {\n              id: \"no\",\n              title: \"No\"\n            }]\n          };\n          LocalNotifications.schedule({\n            notifications: [notification]\n          });\n          this.store.createDoc(this.newmedicamento, \"Medicamentos\", this.newmedicamento.id);\n          const alert2 = yield this.alertcontroller.create({\n            header: 'Medicamento agregado'\n          });\n          yield alert2.present();\n          this.router.navigate(['../home']);\n        }\n      }\n    });\n  }\n  ngOnInit() {}\n};\nMedicacionPage = __decorate([Component({\n  selector: 'app-medicacion',\n  templateUrl: './medicacion.page.html',\n  styleUrls: ['./medicacion.page.scss']\n})], MedicacionPage);\nexport { MedicacionPage };","map":{"version":3,"mappings":"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","names":["Component","FormControl","Validators","LocalNotifications","MedicacionPage","constructor","fb","auth","router","store","alertcontroller","medicamento","cdias","fecha","hora","userid","nota","id","getId","medicamentoform","group","required","ingresar","uid","getUid","path","getDoc","subscribe","res","info","f","value","invalid","alert","create","header","message","present","newmedicamento","fe","console","log","notification","title","body","schedule","on","year","month","day","hour","minute","second","sound","actions","notifications","createDoc","alert2","navigate","ngOnInit","selector","templateUrl","styleUrls"],"sourceRoot":"","sources":["C:\\Users\\erick\\OneDrive\\Documentos\\GitHub\\Asistente-M-dico-MedMate\\MedMate\\src\\app\\mpacientes\\medicacion\\medicacion.page.ts"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormGroup,FormControl,\r\n  Validators, ReactiveFormsModule} from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AlertController } from '@ionic/angular';\r\nimport { time } from 'console';\r\nimport { TimeInterval } from 'rxjs/internal/operators/timeInterval';\r\nimport { medicacion, paciente } from 'src/app/models/interface';\r\nimport { AuthService } from 'src/app/services/auth.service';\r\nimport { FirestoreService } from 'src/app/services/firestore.service';\r\nimport { LocalNotifications } from \"@capacitor/local-notifications\";\r\n\r\n\r\n\r\n@Component({\r\n  selector: 'app-medicacion',\r\n  templateUrl: './medicacion.page.html',\r\n  styleUrls: ['./medicacion.page.scss'],\r\n})\r\nexport class MedicacionPage implements OnInit {\r\n\r\n  public medicamentoform: FormGroup;\r\n\r\n  uid: any;\r\n  info: paciente | undefined;\r\n  newmedicamento: medicacion = {\r\n    medicamento: \"\",\r\n    cdias : 0,\r\n    fecha : \"\",\r\n    hora: 0,\r\n    userid: \"\",\r\n    nota: \"\",\r\n    id: this.store.getId()\r\n\r\n  }\r\n\r\n  constructor(private fb: FormBuilder, private auth: AuthService, private router: Router,\r\n    private store: FirestoreService, private alertcontroller: AlertController) {\r\n\r\n      this.medicamentoform = this.fb.group({\r\n        'medicamento': new FormControl(\"\", Validators.required),\r\n        'nota': new FormControl(\"\", Validators.required),\r\n        'fecha': new FormControl(\"\", Validators.required),\r\n        'hora': new FormControl(\"\", Validators.required),\r\n      })\r\n     }\r\n\r\n  async ingresar(){\r\n    const uid = await this.auth.getUid()\r\n    if (uid){\r\n      this.uid = uid;\r\n    }\r\n\r\n    const path = \"Pacientes\"\r\n    this.store.getDoc<paciente>(path,this.uid).subscribe(res => {\r\n      if(res){\r\n        this.info = res;\r\n      }\r\n    })\r\n\r\n    if (this.info?.uid == this.uid) {\r\n      var f = this.medicamentoform.value;\r\n\r\n      if (this.medicamentoform.invalid) {\r\n\r\n      const alert = await this.alertcontroller.create({\r\n        header: 'Datos incompletos',\r\n        message: 'Debe de ingresar todos los campos',\r\n      });\r\n\r\n      await alert.present();\r\n      return;\r\n    }\r\n\r\n    else{\r\n\r\n      this.newmedicamento.medicamento = f.medicamento,\r\n      this.newmedicamento.cdias = f.fe;\r\n      this.newmedicamento.hora = f.hora;\r\n      this.newmedicamento.fecha = f.fecha;\r\n      this.newmedicamento.nota = f.nota;\r\n      this.newmedicamento.userid = this.uid;\r\n      this.newmedicamento.id= this.store.getId()\r\n\r\n      console.log(this.newmedicamento);\r\n\r\n      let notification = {\r\n        id: 1,\r\n        title: \"Recordatorio\",\r\n        body: \"¡Es hora de tomarte la medicina!\" + this.newmedicamento.medicamento,\r\n        schedule: {\r\n          on: {\r\n            year: 2023,\r\n            month: 4,\r\n            day: 7,\r\n            hour: 17,\r\n            minute: 30,\r\n            second: 0\r\n          },\r\n        },\r\n        sound: 'beep.aiff',\r\n        actions: [\r\n          { id: \"yes\", title: \"Sí\" },\r\n          { id: \"no\", title: \"No\" },\r\n        ],\r\n      };\r\n\r\n      LocalNotifications.schedule({\r\n        notifications: [notification],\r\n      });\r\n\r\n      this.store.createDoc(\r\n        this.newmedicamento,\r\n        \"Medicamentos\",\r\n        this.newmedicamento.id\r\n      );     \r\n\r\n      const alert2 = await this.alertcontroller.create({\r\n        header: 'Medicamento agregado',\r\n      });\r\n\r\n      await alert2.present();\r\n      this.router.navigate(['../home'])\r\n\r\n    }\r\n      \r\n    }\r\n\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}